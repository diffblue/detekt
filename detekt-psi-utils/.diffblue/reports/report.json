{
  "meta" : {
    "reportVersion" : "2.5"
  },
  "run" : {
    "version" : "2023.07.02-SNAPSHOT-0623e01-local",
    "creationTimestamp" : "2023-07-06T12:23:03.89016+01:00",
    "command" : "dcover create --testing-framework=junit-5 --working-directory detekt-psi-utils io.github io.gitlab",
    "totalTime" : 121.175,
    "environmentDetectionTime" : 0.955,
    "indexingTime" : 0.233,
    "entryPointsTime" : 0.94,
    "generationTime" : 102.061,
    "timeToFirstTest" : 30.033,
    "timeToLastTest" : 120.219,
    "indexQueryTime" : 13.041,
    "verificationTime" : 2.723,
    "validationTime" : 0.583
  },
  "codes" : {
    "F009" : "Internal error",
    "R000" : "Success",
    "R011" : "Sandboxing policy violation",
    "R013" : "No inputs found that don't throw a trivial exception",
    "R083" : "Can't find a suitable constructor",
    "T000" : "Method eligible for test creation",
    "T001" : "Trivial getter",
    "T003" : "Private method",
    "T004" : "In anonymous inner class",
    "T012" : "Synthetic method",
    "T020" : "Other trivial method",
    "V000" : "Validated successfully"
  },
  "summary" : {
    "classesCount" : 47,
    "methodsCount" : 186,
    "completeTestCount" : 17,
    "incompleteTestCount" : 0,
    "skeletonTestCount" : 0,
    "perMethodTestability" : {
      "T000" : 79,
      "T001" : 7,
      "T003" : 9,
      "T004" : 50,
      "T012" : 40,
      "T020" : 1
    },
    "perMethodOutcome" : {
      "F009" : 5,
      "R000" : 10,
      "R011" : 68,
      "R013" : 1,
      "R083" : 3,
      "T003" : 9,
      "T004" : 50,
      "T012" : 40
    },
    "perTestOutcome" : {
      "R000" : 17
    },
    "perTestValidation" : {
      "V000" : 17
    }
  },
  "classes" : {
    "io.github.detekt.psi.FilePath" : {
      "methodsCount" : 14,
      "completeTestCount" : 5,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 7,
        "T001" : 3,
        "T012" : 3,
        "T020" : 1
      },
      "perMethodOutcome" : {
        "F009" : 2,
        "R000" : 5,
        "R011" : 4,
        "T012" : 3
      },
      "perTestOutcome" : {
        "R000" : 5
      }
    },
    "io.github.detekt.psi.FilePath$Companion" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R083" : 2,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.github.detekt.psi.KeysKt" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T001" : 3,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "F009" : 3,
        "T012" : 1
      }
    },
    "io.github.detekt.psi.KtFilesKt" : {
      "methodsCount" : 9,
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 8,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R000" : 1,
        "R011" : 7,
        "T012" : 1
      },
      "perTestOutcome" : {
        "R000" : 1
      }
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T003" : 3
      },
      "perMethodOutcome" : {
        "R011" : 3,
        "T003" : 3
      }
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.github.detekt.psi.internal.KotlinNoImportClassesKt" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T001" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R083" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.AllowedExceptionNamePatternKt" : {
      "methodsCount" : 1,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 3,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isElvisOperatorGuardClause$$inlined$anyDescendantOfType$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isElvisOperatorGuardClause$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isGuardClause$$inlined$findDescendantOfType$default$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isGuardClause$$inlined$findDescendantOfType$default$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 4,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 4,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$$inlined$forEach$lambda$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$lambda$0$$inlined$isGuardClause$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$lambda$0$$inlined$isGuardClause$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.IdentifierNameKt" : {
      "methodsCount" : 1,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.IsPartOfUtilsKt" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.JunkKt" : {
      "methodsCount" : 7,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 6,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 6,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.JunkKt$hasCommentInside$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.KtAnnotatedExtensionsKt" : {
      "methodsCount" : 1,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.KtAnnotatedExtensionsKt$hasAnnotation$predicate$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.KtBinaryExpressionKt" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2
      },
      "perMethodOutcome" : {
        "R011" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.KtCallExpressionKt" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4
      },
      "perMethodOutcome" : {
        "R011" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.KtExpressionKt" : {
      "methodsCount" : 1,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.KtIfExpressionKt" : {
      "methodsCount" : 1,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 3,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt$hasImplicitParameterReference$$inlined$anyDescendantOfType$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt$hasImplicitParameterReference$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt" : {
      "methodsCount" : 14,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 14
      },
      "perMethodOutcome" : {
        "R011" : 14
      }
    },
    "io.gitlab.arturbosch.detekt.rules.KtValueArgumentKt" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2
      },
      "perMethodOutcome" : {
        "R011" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt" : {
      "methodsCount" : 11,
      "completeTestCount" : 3,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 7,
        "T003" : 3,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R000" : 1,
        "R011" : 6,
        "T003" : 3,
        "T012" : 1
      },
      "perTestOutcome" : {
        "R000" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.StringExtensionsKt" : {
      "methodsCount" : 3,
      "completeTestCount" : 8,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3
      },
      "perMethodOutcome" : {
        "R000" : 3
      },
      "perTestOutcome" : {
        "R000" : 8
      }
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 4,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$isExceptionOfType$$inlined$findDescendantOfType$default$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$isExceptionOfType$$inlined$findDescendantOfType$default$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$special$$inlined$findDescendantOfType$default$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$special$$inlined$findDescendantOfType$default$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.TraversingKt" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.TraversingKt$parentsOfTypeUntil$1" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 4,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 4,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.TypeUtilsKt" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "R013" : 1,
        "T003" : 1,
        "T012" : 1
      }
    }
  },
  "methods" : {
    "io.github.detekt.psi.FilePath$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        64
      ]
    },
    "io.github.detekt.psi.FilePath$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.github.detekt.psi.FilePath$Companion.fromAbsolute:(Ljava/nio/file/Path;)Lio/github/detekt/psi/FilePath;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R083",
      "lineNumbers" : [
        65
      ]
    },
    "io.github.detekt.psi.FilePath$Companion.fromRelative:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lio/github/detekt/psi/FilePath;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R083",
      "lineNumbers" : [
        66,
        67,
        68,
        69,
        66,
        70
      ]
    },
    "io.github.detekt.psi.FilePath.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.github.detekt.psi.FilePath.<init>:(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V" : {
      "completeTestCount" : 4,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 4
      },
      "lineNumbers" : [
        48,
        49,
        50,
        51,
        54,
        56,
        57,
        58,
        55,
        60,
        55,
        62,
        48
      ]
    },
    "io.github.detekt.psi.FilePath.<init>:(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        48,
        50,
        48,
        51,
        48,
        72
      ]
    },
    "io.github.detekt.psi.FilePath.component1:()Ljava/nio/file/Path;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.github.detekt.psi.FilePath.component2:()Ljava/nio/file/Path;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.github.detekt.psi.FilePath.component3:()Ljava/nio/file/Path;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.github.detekt.psi.FilePath.copy$default:(Lio/github/detekt/psi/FilePath;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;ILjava/lang/Object;)Lio/github/detekt/psi/FilePath;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.github.detekt.psi.FilePath.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)Lio/github/detekt/psi/FilePath;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.github.detekt.psi.FilePath.equals:(Ljava/lang/Object;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "F009"
    },
    "io.github.detekt.psi.FilePath.getAbsolutePath:()Ljava/nio/file/Path;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        49
      ]
    },
    "io.github.detekt.psi.FilePath.getBasePath:()Ljava/nio/file/Path;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        50
      ]
    },
    "io.github.detekt.psi.FilePath.getRelativePath:()Ljava/nio/file/Path;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        51
      ]
    },
    "io.github.detekt.psi.FilePath.hashCode:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "F009"
    },
    "io.github.detekt.psi.FilePath.toString:()Ljava/lang/String;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T020",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      }
    },
    "io.github.detekt.psi.KeysKt.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        5,
        6,
        7
      ]
    },
    "io.github.detekt.psi.KeysKt.getBASE_PATH:()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "F009",
      "lineNumbers" : [
        6
      ]
    },
    "io.github.detekt.psi.KeysKt.getLINE_SEPARATOR:()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "F009",
      "lineNumbers" : [
        7
      ]
    },
    "io.github.detekt.psi.KeysKt.getRELATIVE_PATH:()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "F009",
      "lineNumbers" : [
        5
      ]
    },
    "io.github.detekt.psi.KtFilesKt.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        16,
        17,
        18,
        17,
        19,
        17,
        16
      ]
    },
    "io.github.detekt.psi.KtFilesKt.absolutePath:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;)Ljava/nio/file/Path;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        39,
        39
      ]
    },
    "io.github.detekt.psi.KtFilesKt.basePath:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;)Ljava/nio/file/Path;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        43,
        106,
        43,
        43,
        43,
        43
      ]
    },
    "io.github.detekt.psi.KtFilesKt.fileNameWithoutSuffix:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        30,
        31,
        32,
        33,
        31,
        36
      ]
    },
    "io.github.detekt.psi.KtFilesKt.getFileName:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        23
      ]
    },
    "io.github.detekt.psi.KtFilesKt.getLineAndColumnInPsiFile:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;Lorg/jetbrains/kotlin/com/intellij/openapi/util/TextRange;)Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        91,
        93,
        91,
        94,
        91
      ]
    },
    "io.github.detekt.psi.KtFilesKt.relativePath:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;)Ljava/nio/file/Path;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        41,
        106,
        41,
        41,
        41,
        41
      ]
    },
    "io.github.detekt.psi.KtFilesKt.toFilePath:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;)Lio/github/detekt/psi/FilePath;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        78,
        84,
        85,
        77
      ]
    },
    "io.github.detekt.psi.KtFilesKt.toUnifiedString:(Ljava/nio/file/Path;)Ljava/lang/String;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        104
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        22
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2$1.invoke:(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        22
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        23
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2$2.invoke:(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Lkotlin/Pair;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        24,
        25,
        24,
        24
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2.<init>:(Ljava/util/List;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$resolvedNames$2.invoke:()Ljava/util/Map;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        19
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        34
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2$1.invoke:(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        34
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        35
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2$2.invoke:(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        36
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2.<init>:(Ljava/util/List;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser$starImports$2.invoke:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        31
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser.<init>:(Ljava/lang/String;Ljava/util/List;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        8,
        9,
        19,
        31,
        8
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser.<init>:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        14,
        15,
        73,
        15,
        15,
        15,
        16,
        14,
        17
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser.findName:(Ljava/lang/String;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        63,
        64,
        65,
        66,
        68,
        65
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser.getFullQualifiedName:(Ljava/lang/String;)Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        42,
        43,
        44,
        46,
        47,
        48,
        49,
        50,
        52,
        52,
        53,
        55,
        74,
        56,
        57,
        74,
        75,
        58,
        47,
        43
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser.getResolvedNames:()Ljava/util/Map;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        19,
        19
      ]
    },
    "io.github.detekt.psi.internal.FullQualifiedNameGuesser.getStarImports:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        31,
        31
      ]
    },
    "io.github.detekt.psi.internal.KotlinNoImportClassesKt.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        23,
        24,
        25,
        24,
        26,
        24,
        27,
        24,
        28,
        24,
        29,
        24,
        30,
        24,
        31,
        24,
        32,
        24,
        33,
        24,
        34,
        24,
        35,
        24,
        36,
        24,
        37,
        24,
        38,
        24,
        39,
        24,
        40,
        24,
        41,
        24,
        42,
        24,
        43,
        24,
        44,
        24,
        45,
        24,
        46,
        24,
        47,
        24,
        48,
        24,
        49,
        24,
        50,
        24,
        51,
        24,
        52,
        24,
        53,
        24,
        54,
        24,
        55,
        24,
        56,
        24,
        57,
        24,
        58,
        24,
        59,
        24,
        60,
        24,
        61,
        24,
        62,
        24,
        63,
        24,
        64,
        24,
        65,
        24,
        66,
        24,
        67,
        24,
        68,
        24,
        69,
        24,
        70,
        24,
        71,
        24,
        72,
        24,
        73,
        24,
        74,
        24,
        75,
        24,
        76,
        24,
        77,
        24,
        78,
        24,
        79,
        24,
        80,
        24,
        81,
        24,
        82,
        24,
        83,
        24,
        84,
        24,
        85,
        24,
        86,
        24,
        87,
        24,
        88,
        24,
        89,
        24,
        90,
        24,
        91,
        24,
        92,
        24,
        93,
        24,
        94,
        24,
        95,
        24,
        96,
        24,
        97,
        24,
        98,
        24,
        99,
        24,
        100,
        24,
        101,
        24,
        102,
        24,
        103,
        24,
        104,
        24,
        105,
        24,
        106,
        24,
        107,
        24,
        108,
        24,
        109,
        24,
        110,
        24,
        111,
        24,
        112,
        24,
        113,
        24,
        114,
        24,
        115,
        24,
        116,
        24,
        117,
        24,
        118,
        24,
        119,
        24,
        120,
        24,
        121,
        24,
        122,
        24,
        123,
        24,
        124,
        24,
        125,
        24,
        126,
        24,
        127,
        24,
        128,
        24,
        129,
        24,
        130,
        24,
        131,
        24,
        132,
        24,
        133,
        24,
        134,
        24,
        135,
        24,
        136,
        24,
        137,
        24,
        138,
        24,
        139,
        24,
        140,
        24,
        141,
        24,
        142,
        24,
        143,
        24,
        144,
        24,
        145,
        24,
        146,
        24,
        147,
        24,
        148,
        24,
        149,
        24,
        150,
        24,
        151,
        24,
        152,
        24,
        153,
        24,
        154,
        24,
        155,
        24,
        156,
        24,
        157,
        24,
        158,
        24,
        159,
        24,
        160,
        24,
        161,
        24,
        162,
        24,
        163,
        24,
        164,
        24,
        165,
        24,
        166,
        24,
        167,
        24,
        168,
        24,
        169,
        24,
        170,
        24,
        171,
        24,
        172,
        24,
        173,
        24,
        174,
        24,
        175,
        24,
        176,
        24,
        177,
        24,
        178,
        24,
        179,
        24,
        180,
        24,
        181,
        24,
        182,
        24,
        183,
        24,
        184,
        24,
        185,
        24,
        186,
        24,
        187,
        24,
        188,
        24,
        189,
        24,
        190,
        24,
        191,
        24,
        192,
        24,
        193,
        24,
        194,
        24,
        195,
        24,
        196,
        24,
        197,
        24,
        198,
        24,
        23
      ]
    },
    "io.github.detekt.psi.internal.KotlinNoImportClassesKt.getDefaultImportClasses:()Ljava/util/Map;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R083",
      "lineNumbers" : [
        23
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.AllowedExceptionNamePatternKt.isAllowedExceptionName:(Lorg/jetbrains/kotlin/psi/KtCatchClause;Lkotlin/text/Regex;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        8,
        8
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isElvisOperatorGuardClause$$inlined$anyDescendantOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isElvisOperatorGuardClause$$inlined$anyDescendantOfType$1.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isElvisOperatorGuardClause$1.<init>:(Lorg/jetbrains/kotlin/psi/KtExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isElvisOperatorGuardClause$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isElvisOperatorGuardClause$1.invoke:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isGuardClause$$inlined$findDescendantOfType$default$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isGuardClause$$inlined$findDescendantOfType$default$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isGuardClause$$inlined$findDescendantOfType$default$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isGuardClause$$inlined$findDescendantOfType$default$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isGuardClause$$inlined$findDescendantOfType$default$2.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$isGuardClause$$inlined$findDescendantOfType$default$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$$inlined$forEach$lambda$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$$inlined$forEach$lambda$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$$inlined$forEach$lambda$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$$inlined$forEach$lambda$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$lambda$0$$inlined$isGuardClause$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$lambda$0$$inlined$isGuardClause$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$lambda$0$$inlined$isGuardClause$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$lambda$0$$inlined$isGuardClause$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$lambda$0$$inlined$isGuardClause$2.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$lambda$0$$inlined$isGuardClause$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1.<init>:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lkotlin/coroutines/Continuation;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt$yieldStatementsSkippingGuardClauses$1.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        15,
        16,
        17,
        45,
        18,
        19,
        15,
        19,
        20,
        46,
        47,
        48,
        55,
        56,
        57,
        48,
        46,
        58,
        20,
        21,
        22,
        15,
        24,
        45,
        59,
        17,
        25,
        15
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt.isElvisOperatorGuardClause:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        43,
        56,
        57,
        64,
        65,
        66,
        57,
        56,
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt.isGuardClause:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        32,
        45,
        46,
        53,
        54,
        55,
        46,
        32,
        33
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt.isIfConditionGuardClause:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        37,
        38,
        39,
        38
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt.isSuperCall:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        28
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.GuardClausesKt.yieldStatementsSkippingGuardClauses:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        15,
        25
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.IdentifierNameKt.identifierName:(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        6
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.IsPartOfUtilsKt.isPartOf:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        10,
        17,
        10
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.IsPartOfUtilsKt.isPartOfString:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        15,
        18,
        19,
        18,
        15
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.JunkKt$hasCommentInside$1.<init>:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        26
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.JunkKt$hasCommentInside$1.visitComment:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiComment;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        28,
        29
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.JunkKt.companionObject:(Lorg/jetbrains/kotlin/psi/KtClass;)Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        38,
        51,
        52,
        53,
        54,
        38,
        54,
        55,
        56,
        57,
        60,
        61,
        38
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.JunkKt.getIntValueForPsiElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Integer;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        35
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.JunkKt.hasCommentInside:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        25,
        26,
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.JunkKt.hasCommentInside:(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        22
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.JunkKt.isUsedForNesting:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        17,
        18,
        19,
        20
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.JunkKt.receiverIsUsed:(Lorg/jetbrains/kotlin/psi/KtCallExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        43,
        44,
        46,
        47,
        45,
        43,
        43,
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.JunkKt.safeAs:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtAnnotatedExtensionsKt$hasAnnotation$predicate$1.<init>:(Ljava/util/HashSet;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.KtAnnotatedExtensionsKt$hasAnnotation$predicate$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        11
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtAnnotatedExtensionsKt$hasAnnotation$predicate$1.invoke:(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        15,
        13,
        12,
        13,
        12,
        13,
        14,
        13,
        14,
        20,
        14,
        15,
        14,
        15,
        13,
        12
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtAnnotatedExtensionsKt.hasAnnotation:(Lorg/jetbrains/kotlin/psi/KtAnnotated;[Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        10,
        11,
        17,
        20,
        21,
        22,
        17
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtBinaryExpressionKt.isNonNullCheck:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        7
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtBinaryExpressionKt.isNullCheck:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        11
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtCallExpressionKt.isCalling:(Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/util/List;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        20,
        21,
        22,
        38,
        39,
        22,
        39,
        40,
        38,
        22,
        23,
        24,
        25,
        41,
        42,
        25,
        42,
        43,
        25
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtCallExpressionKt.isCalling:(Lorg/jetbrains/kotlin/psi/KtCallExpression;Lorg/jetbrains/kotlin/name/FqName;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        13,
        14,
        15,
        13
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtCallExpressionKt.isCalling:(Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/name/FqName;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        28
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtCallExpressionKt.isCallingWithNonNullCheckArgument:(Lorg/jetbrains/kotlin/psi/KtCallExpression;Lorg/jetbrains/kotlin/name/FqName;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        34,
        35
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtExpressionKt.isUnitExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        6
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtIfExpressionKt.isElseIf:(Lorg/jetbrains/kotlin/psi/KtIfExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        8,
        9,
        11,
        9
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt$hasImplicitParameterReference$$inlined$anyDescendantOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt$hasImplicitParameterReference$$inlined$anyDescendantOfType$1.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt$hasImplicitParameterReference$1.<init>:(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;Lorg/jetbrains/kotlin/resolve/BindingContext;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt$hasImplicitParameterReference$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        25
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt$hasImplicitParameterReference$1.invoke:(Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        26
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt.access$isImplicitParameterReference:(Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt.firstParameter:(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        12
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt.hasImplicitParameterReference:(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        25,
        40,
        41,
        48,
        49,
        50,
        41,
        40,
        25
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt.implicitParameter:(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        15,
        15,
        16,
        18,
        19
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtLambdaExpressionKt.isImplicitParameterReference:(Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        35,
        36,
        51,
        36,
        37,
        35
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isAbstract:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        19
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isActual:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        39
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isConstant:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        29
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isExpect:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        37
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isExternal:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        25
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isInline:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        35
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isInternal:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isLateinit:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        33
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isOpen:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        23
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isOperator:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        27
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isOverride:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        21
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isProtected:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        41
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isPublicNotOverridden:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        10
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtModifierListKt.isPublicNotOverridden:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;Z)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        13,
        14,
        16,
        17
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtValueArgumentKt.isEmptyOrSingleStringArgument:(Ljava/util/List;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        20
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.KtValueArgumentKt.isString:(Lorg/jetbrains/kotlin/psi/KtValueArgument;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        10,
        11,
        12,
        13,
        15,
        11
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        26
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt.extractMethodNameAndParams:(Ljava/lang/String;)Lkotlin/Pair;" : {
      "completeTestCount" : 3,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 3
      },
      "lineNumbers" : [
        34,
        35,
        64,
        65,
        66,
        35,
        35,
        66,
        67,
        64,
        35,
        34,
        37,
        38,
        39,
        68,
        69,
        70,
        39,
        39,
        70,
        71,
        68,
        39,
        72,
        73,
        39,
        39,
        73,
        74,
        72,
        41,
        38,
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt.hasCorrectEqualsParameter:(Lorg/jetbrains/kotlin/psi/KtFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        28
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt.hasImplicitUnitReturnType:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt.hasMainParameter:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        51,
        52,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt.hasMainSignature:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt.isEqualsFunction:(Lorg/jetbrains/kotlin/psi/KtFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        12
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt.isHashCodeFunction:(Lorg/jetbrains/kotlin/psi/KtFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        15
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt.isJvmFinalizeFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        21,
        22,
        23,
        24
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt.isMainFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        30
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.MethodSignatureKt.isMainInsideObject:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        56,
        57,
        58,
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.StringExtensionsKt.lastArgumentMatchesKotlinReferenceUrlSyntax:(Ljava/lang/String;)Z" : {
      "completeTestCount" : 3,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 3
      },
      "lineNumbers" : [
        26,
        26,
        27,
        27,
        27
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.StringExtensionsKt.lastArgumentMatchesMarkdownUrlSyntax:(Ljava/lang/String;)Z" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        13,
        14,
        17,
        19,
        18,
        21,
        21,
        20,
        22,
        22,
        22
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.StringExtensionsKt.lastArgumentMatchesUrl:(Ljava/lang/String;)Z" : {
      "completeTestCount" : 4,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 4
      },
      "lineNumbers" : [
        6,
        6,
        6,
        7,
        8,
        7,
        9,
        7
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$isExceptionOfType$$inlined$findDescendantOfType$default$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$isExceptionOfType$$inlined$findDescendantOfType$default$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$isExceptionOfType$$inlined$findDescendantOfType$default$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$isExceptionOfType$$inlined$findDescendantOfType$default$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$isExceptionOfType$$inlined$findDescendantOfType$default$2.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$isExceptionOfType$$inlined$findDescendantOfType$default$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$special$$inlined$findDescendantOfType$default$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$special$$inlined$findDescendantOfType$default$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$special$$inlined$findDescendantOfType$default$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$special$$inlined$findDescendantOfType$default$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$special$$inlined$findDescendantOfType$default$2.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt$special$$inlined$findDescendantOfType$default$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt.getArguments:(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        21,
        66,
        67,
        74,
        75,
        76,
        67,
        21,
        21
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt.isEnclosedByConditionalStatement:(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        24,
        25,
        26,
        27,
        24
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt.isExceptionOfType:(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        17,
        55,
        56,
        63,
        64,
        65,
        56,
        17
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt.isIllegalArgumentException:(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        14,
        43,
        44,
        45,
        52,
        53,
        54,
        45,
        43,
        14
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.ThrowExtensionsKt.isIllegalStateException:(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        11,
        31,
        32,
        33,
        40,
        41,
        42,
        33,
        31,
        11
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.TraversingKt$parentsOfTypeUntil$1.<init>:(ZLorg/jetbrains/kotlin/psi/KtElement;Lkotlin/coroutines/Continuation;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.TraversingKt$parentsOfTypeUntil$1.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.TraversingKt$parentsOfTypeUntil$1.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.TraversingKt$parentsOfTypeUntil$1.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.TraversingKt$parentsOfTypeUntil$1.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        13,
        14,
        15,
        16,
        17,
        13,
        19,
        21,
        13
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.TraversingKt.isPublicInherited:(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        23
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.TraversingKt.isPublicInherited:(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Z)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        26,
        27,
        28,
        29,
        31,
        33
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.TraversingKt.parentsOfTypeUntil$default:(Lorg/jetbrains/kotlin/psi/KtElement;ZILjava/lang/Object;)Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        12,
        13,
        21
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.TraversingKt.parentsOfTypeUntil:(Lorg/jetbrains/kotlin/psi/KtElement;Z)Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        13,
        21
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.TypeUtilsKt.descriptor:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        102
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.TypeUtilsKt.fqNameOrNull:(Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/name/FqName;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        21
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.TypeUtilsKt.getDataFlowAwareTypes$default:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowValueFactory;Lorg/jetbrains/kotlin/types/KotlinType;ILjava/lang/Object;)Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        38,
        42,
        38
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.TypeUtilsKt.getDataFlowAwareTypes:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowValueFactory;Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        44,
        104,
        44,
        44,
        46,
        48,
        49,
        48,
        49,
        48,
        50,
        48,
        52,
        53,
        52,
        53,
        104,
        53,
        53,
        53,
        52,
        54,
        52,
        56,
        57,
        56,
        59,
        60,
        104,
        60,
        60,
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.TypeUtilsKt.isNullable:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowValueFactory;Z)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        83,
        105,
        83,
        105,
        83,
        84,
        85,
        106,
        107,
        86,
        107,
        108,
        85,
        89,
        90,
        89,
        89,
        91,
        89,
        92,
        93,
        94,
        95,
        96,
        92,
        98,
        109,
        110,
        98,
        110,
        111,
        98
      ]
    }
  }
}