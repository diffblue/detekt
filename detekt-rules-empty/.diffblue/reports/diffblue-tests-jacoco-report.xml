<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="detekt-rules-empty"><sessioninfo id="DB0933.local-29fc7969" start="1689858778382" dump="1689858779248"/><package name="io/gitlab/arturbosch/detekt/rules/empty"><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyTryBlock" sourcefilename="EmptyTryBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitTryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtTryExpression;)V" line="14"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptySecondaryConstructor" sourcefilename="EmptySecondaryConstructor.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitSecondaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;)V" line="14"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyForBlock" sourcefilename="EmptyForBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitForExpression" desc="(Lorg/jetbrains/kotlin/psi/KtForExpression;)V" line="14"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyInitBlock" sourcefilename="EmptyInitBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitClassInitializer" desc="(Lorg/jetbrains/kotlin/psi/KtClassInitializer;)V" line="14"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyDefaultConstructor" sourcefilename="EmptyDefaultConstructor.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPrimaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" line="22"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExpectedOrActualClass" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)Z" line="34"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSuitableSignature" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)Z" line="42"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasPublicVisibility" desc="(Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Z" line="47"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotCalled" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)Z" line="51"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="115" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyElseBlock" sourcefilename="EmptyElseBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="15"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyDoWhileBlock" sourcefilename="EmptyDoWhileBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitDoWhileExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)V" line="14"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyClassBlock" sourcefilename="EmptyClassBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="18"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyIfBlock" sourcefilename="EmptyIfBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="15"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyKtFile" sourcefilename="EmptyKtFile.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="16"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyCatchBlock" sourcefilename="EmptyCatchBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="16"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllowedExceptionNameRegex" desc="()Lkotlin/text/Regex;" line="1"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="30"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyCodeProvider" sourcefilename="EmptyCodeProvider.kt"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="17"><counter type="INSTRUCTION" missed="119" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="119" covered="9"/><counter type="LINE" missed="19" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyRule" sourcefilename="EmptyRule.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;Ljava/lang/String;)V" line="21"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="21"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addFindingIfBlockExprIsEmpty" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="35"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addFindingIfBlockExprIsEmptyAndNotCommented" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="39"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkThenBodyForLoneSemicolon" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;Lkotlin/jvm/functions/Function1;)V" line="43"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkBlockExpr" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Z)V" line="50"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkBlockExpr$default" desc="(Lio/gitlab/arturbosch/detekt/rules/empty/EmptyRule;Lorg/jetbrains/kotlin/psi/KtExpression;ZILjava/lang/Object;)V" line="49"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="180" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyFunctionBlock" sourcefilename="EmptyFunctionBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="24"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIgnoreOverriddenFunctions" desc="()Z" line="1"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIgnoreOverridden" desc="()Z" line="1"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="36"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDefaultFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="53"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyCatchBlock$allowedExceptionNameRegex$2" sourcefilename="EmptyCatchBlock.kt"><method name="invoke" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="27"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyElseBlock$visitIfExpression$1" sourcefilename="EmptyElseBlock.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="17"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyWhenBlock" sourcefilename="EmptyWhenBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="16"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyWhileBlock" sourcefilename="EmptyWhileBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitWhileExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhileExpression;)V" line="14"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyFinallyBlock" sourcefilename="EmptyFinallyBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFinallySection" desc="(Lorg/jetbrains/kotlin/psi/KtFinallySection;)V" line="14"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyIfBlock$visitIfExpression$1" sourcefilename="EmptyIfBlock.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="17"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="EmptyFinallyBlock.kt"><line nr="11" mi="8" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="10" ci="0" mb="2" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyKtFile.kt"><line nr="13" mi="8" ci="0" mb="0" cb="0"/><line nr="16" mi="13" ci="0" mb="6" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="8" ci="0" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="11" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyCatchBlock.kt"><line nr="1" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="30" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="2" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="9" ci="0" mb="2" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="EmptySecondaryConstructor.kt"><line nr="11" mi="8" ci="0" mb="0" cb="0"/><line nr="14" mi="10" ci="0" mb="2" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyDefaultConstructor.kt"><line nr="19" mi="8" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="2" cb="0"/><line nr="23" mi="4" ci="0" mb="2" cb="0"/><line nr="24" mi="4" ci="0" mb="2" cb="0"/><line nr="26" mi="20" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="2" cb="0"/><line nr="36" mi="12" ci="0" mb="4" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="2" cb="0"/><line nr="43" mi="4" ci="0" mb="2" cb="0"/><line nr="44" mi="8" ci="0" mb="2" cb="0"/><line nr="47" mi="10" ci="0" mb="4" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="12" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="115" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyWhenBlock.kt"><line nr="13" mi="8" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="2" cb="0"/><line nr="18" mi="20" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyCodeProvider.kt"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="2" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="20" mi="39" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="119" covered="9"/><counter type="LINE" missed="19" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyInitBlock.kt"><line nr="11" mi="8" ci="0" mb="0" cb="0"/><line nr="14" mi="9" ci="0" mb="2" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyTryBlock.kt"><line nr="11" mi="8" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="8" ci="0" mb="0" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyIfBlock.kt"><line nr="13" mi="8" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="20" ci="0" mb="4" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="8" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="7" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="EmptyFunctionBlock.kt"><line nr="1" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="8" ci="0" mb="0" cb="0"/><line nr="28" mi="26" ci="0" mb="0" cb="0"/><line nr="33" mi="32" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="4" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="9" ci="0" mb="2" cb="0"/><line nr="45" mi="9" ci="0" mb="2" cb="0"/><line nr="47" mi="4" ci="0" mb="2" cb="0"/><line nr="48" mi="8" ci="0" mb="2" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="27" ci="0" mb="8" cb="0"/><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyClassBlock.kt"><line nr="15" mi="8" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="2" cb="0"/><line nr="20" mi="4" ci="0" mb="2" cb="0"/><line nr="22" mi="10" ci="0" mb="2" cb="0"/><line nr="23" mi="4" ci="0" mb="2" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="8" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="7" ci="0" mb="0" cb="0"/><line nr="28" mi="11" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyElseBlock.kt"><line nr="13" mi="8" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="20" ci="0" mb="4" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="8" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="7" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="EmptyRule.kt"><line nr="21" mi="12" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="8" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="25" ci="0" mb="6" cb="0"/><line nr="44" mi="15" ci="0" mb="6" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="10" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="2" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="4" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="15" ci="0" mb="6" cb="0"/><line nr="56" mi="21" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="180" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyWhileBlock.kt"><line nr="11" mi="8" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="9" ci="0" mb="2" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyDoWhileBlock.kt"><line nr="11" mi="8" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="9" ci="0" mb="2" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyForBlock.kt"><line nr="11" mi="8" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="9" ci="0" mb="2" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1124" covered="9"/><counter type="BRANCH" missed="114" covered="0"/><counter type="LINE" missed="160" covered="3"/><counter type="COMPLEXITY" missed="109" covered="2"/><counter type="METHOD" missed="52" covered="2"/><counter type="CLASS" missed="19" covered="1"/></package><counter type="INSTRUCTION" missed="1124" covered="9"/><counter type="BRANCH" missed="114" covered="0"/><counter type="LINE" missed="160" covered="3"/><counter type="COMPLEXITY" missed="109" covered="2"/><counter type="METHOD" missed="52" covered="2"/><counter type="CLASS" missed="19" covered="1"/></report>