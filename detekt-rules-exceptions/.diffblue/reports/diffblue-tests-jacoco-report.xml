<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="detekt-rules-exceptions"><sessioninfo id="DB0933.local-7bd04923" start="1689858947145" dump="1689858948221"/><package name="io/gitlab/arturbosch/detekt/rules/exceptions"><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$isExceptionUnused$1" sourcefilename="SwallowedException.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Ljava/lang/Boolean;" line="109"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingNewInstanceOfSameException$visitCatchSection$throwExpression$1" sourcefilename="ThrowingNewInstanceOfSameException.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Ljava/lang/Boolean;" line="55"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingNewInstanceOfSameException" sourcefilename="ThrowingNewInstanceOfSameException.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="42"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="42"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="52"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createsSameExceptionType" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/lang/String;)Z" line="66"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSameExceptionParameter" desc="(Ljava/util/List;Ljava/lang/String;)Z" line="70"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$parameterReferences$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="292"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$parameterReferences$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="277"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ReturnFromFinally$visitTryExpression$1" sourcefilename="ReturnFromFinally.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Ljava/lang/Boolean;" line="77"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$parameterReferences$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V" line="228"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="230"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$ignoredExceptionTypes$2" sourcefilename="SwallowedException.kt"><method name="invoke" desc="(Ljava/util/List;)Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ExceptionRaisedInUnexpectedLocation" sourcefilename="ExceptionRaisedInUnexpectedLocation.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="34"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="34"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMethodNames" desc="()Ljava/util/List;" line="1"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="54"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPotentialMethod" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="65"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasThrowExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="68"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="141" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionsWithoutMessageOrCause" sourcefilename="ThrowingExceptionsWithoutMessageOrCause.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="40"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="40"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExceptions" desc="()Ljava/util/List;" line="1"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="67"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="167" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/PrintStackTrace$visitCatchSection$$inlined$forEachDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V" line="228"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="230"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ReturnFromFinally" sourcefilename="ReturnFromFinally.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="45"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="45"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIgnoreLabeled" desc="()Z" line="1"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitTryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtTryExpression;)V" line="58"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReturnFromTargetFunction" desc="(Lorg/jetbrains/kotlin/psi/KtBlockExpression;Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="87"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canFilterLabeledExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="99"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeEqualsTo" desc="(Lorg/jetbrains/kotlin/psi/KtFinallySection;Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="102"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="207" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ObjectExtendsThrowable" sourcefilename="ObjectExtendsThrowable.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="43"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="43"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitObjectDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" line="57"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSubtypeOfThrowable" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)Z" line="71"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ExceptionsProvider" sourcefilename="ExceptionsProvider.kt"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="16"><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="112" covered="9"/><counter type="LINE" missed="18" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/InstanceOfCheckForException$visitCatchSection$1" sourcefilename="InstanceOfCheckForException.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="62"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/TooGenericExceptionThrown" sourcefilename="TooGenericExceptionThrown.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExceptionNames" desc="()Ljava/util/Set;" line="1"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitThrowExpression" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)V" line="59"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="137" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/TooGenericExceptionCaught$exceptionNames$2" sourcefilename="TooGenericExceptionCaught.kt"><method name="invoke" desc="(Ljava/util/List;)Ljava/util/Set;" line="50"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/RethrowCaughtException" sourcefilename="RethrowCaughtException.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="63"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="63"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="65"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitTryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtTryExpression;)V" line="73"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="violatingThrowExpressionFrom" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)Lorg/jetbrains/kotlin/psi/KtThrowExpression;" line="85"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionFromFinally$visitFinallySection$$inlined$forEachDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V" line="228"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="230"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/NotImplementedDeclaration" sourcefilename="NotImplementedDeclaration.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="30"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="30"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitThrowExpression" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)V" line="43"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="50"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="122" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingNewInstanceOfSameException$visitCatchSection$$inlined$findDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" line="261"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="263"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$isExceptionSwallowed$1" sourcefilename="SwallowedException.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Ljava/lang/Boolean;" line="117"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException" sourcefilename="SwallowedException.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="72"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="72"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIgnoredExceptionTypes" desc="()Ljava/util/List;" line="1"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllowedExceptionNameRegex" desc="()Lkotlin/text/Regex;" line="1"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="90"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExceptionSwallowedOrUnused" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)Z" line="103"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExceptionUnused" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)Z" line="106"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExceptionSwallowed" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)Z" line="114"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterReferences" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/util/List;" line="126"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findReferenceInVariable" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="148"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findReferenceInVariable$find" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtBlockExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="150"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="401" covered="57"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="50" covered="7"/><counter type="COMPLEXITY" missed="40" covered="1"/><counter type="METHOD" missed="12" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionFromFinally" sourcefilename="ThrowingExceptionFromFinally.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="30"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="30"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFinallySection" desc="(Lorg/jetbrains/kotlin/psi/KtFinallySection;)V" line="40"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/TooGenericExceptionThrown$exceptionNames$2" sourcefilename="TooGenericExceptionThrown.kt"><method name="invoke" desc="(Ljava/util/List;)Ljava/util/Set;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/InstanceOfCheckForException" sourcefilename="InstanceOfCheckForException.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="49"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="49"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="60"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCheckForSubTypeOf" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtParameter;)Z" line="69"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="154" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$isExceptionSwallowed$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" line="261"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="263"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionFromFinally$visitFinallySection$1" sourcefilename="ThrowingExceptionFromFinally.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)V" line="41"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/InstanceOfCheckForException$visitCatchSection$$inlined$forEachDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V" line="228"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="230"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/PrintStackTrace" sourcefilename="PrintStackTrace.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="49"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="49"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="60"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="69"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasPrintStacktraceCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Z" line="77"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="133" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/TooGenericExceptionCaught$Companion" sourcefilename="TooGenericExceptionCaught.kt"><method name="getCaughtExceptionDefaults" desc="()Ljava/util/List;" line="71"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionInMain" sourcefilename="ThrowingExceptionInMain.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="26"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="26"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="36"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsThrowExpression" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="42"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/PrintStackTrace$visitCatchSection$1" sourcefilename="PrintStackTrace.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)V" line="70"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$isExceptionUnused$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" line="261"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="263"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ExceptionRaisedInUnexpectedLocation$hasThrowExpression$$inlined$anyDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="241"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ReturnFromFinally$visitTryExpression$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V" line="228"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="230"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$findReferenceInVariable$find$reference$1" sourcefilename="SwallowedException.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Ljava/lang/Boolean;" line="151"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ExceptionRaisedInUnexpectedLocation$hasThrowExpression$$inlined$anyDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" line="261"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="263"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ReturnFromFinally$visitTryExpression$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="292"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/TooGenericExceptionCaught" sourcefilename="TooGenericExceptionCaught.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssue" desc="()Lio/gitlab/arturbosch/detekt/api/Issue;" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExceptionNames" desc="()Ljava/util/Set;" line="1"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllowedExceptionNameRegex" desc="()Lkotlin/text/Regex;" line="1"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="56"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTooGenericException" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" line="67"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="193" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$findReferenceInVariable$find$$inlined$findDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" line="261"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="263"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$Companion" sourcefilename="SwallowedException.kt"><method name="getEXCEPTIONS_IGNORED_BY_DEFAULT" desc="()Ljava/util/List;" line="171"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionInMain$containsThrowExpression$$inlined$anyDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="241"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionInMain$containsThrowExpression$$inlined$anyDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" line="261"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="263"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ThrowingNewInstanceOfSameException.kt"><line nr="42" mi="16" ci="0" mb="0" cb="0"/><line nr="44" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="2" cb="0"/><line nr="53" mi="12" ci="0" mb="4" cb="0"/><line nr="54" mi="19" ci="0" mb="2" cb="0"/><line nr="55" mi="11" ci="0" mb="2" cb="0"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="57" mi="7" ci="0" mb="2" cb="0"/><line nr="58" mi="15" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="2" cb="0"/><line nr="61" mi="22" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="11" ci="0" mb="2" cb="0"/><line nr="70" mi="15" ci="0" mb="4" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="166" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="PrintStackTrace.kt"><line nr="49" mi="16" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="10" ci="0" mb="4" cb="0"/><line nr="62" mi="11" ci="0" mb="4" cb="0"/><line nr="64" mi="22" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="17" ci="0" mb="2" cb="0"/><line nr="70" mi="18" ci="0" mb="6" cb="0"/><line nr="71" mi="25" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="9" ci="0" mb="2" cb="0"/><line nr="78" mi="19" ci="0" mb="4" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="180" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ExceptionRaisedInUnexpectedLocation.kt"><line nr="1" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="16" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="24" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="14" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="9" ci="0" mb="4" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="8" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="14" ci="0" mb="4" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="141" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NotImplementedDeclaration.kt"><line nr="30" mi="16" ci="0" mb="0" cb="0"/><line nr="32" mi="8" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="10" ci="0" mb="2" cb="0"/><line nr="44" mi="10" ci="0" mb="4" cb="0"/><line nr="45" mi="22" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="11" ci="0" mb="4" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="2" cb="0"/><line nr="53" mi="22" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="122" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExceptionsProvider.kt"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="37" ci="0" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="112" covered="9"/><counter type="LINE" missed="18" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="psiUtils.kt"><line nr="228" mi="15" ci="0" mb="0" cb="0"/><line nr="230" mi="25" ci="0" mb="0" cb="0"/><line nr="231" mi="15" ci="0" mb="0" cb="0"/><line nr="234" mi="15" ci="0" mb="10" cb="0"/><line nr="235" mi="25" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="6" ci="0" mb="0" cb="0"/><line nr="261" mi="18" ci="0" mb="0" cb="0"/><line nr="263" mi="60" ci="0" mb="24" cb="0"/><line nr="264" mi="24" ci="0" mb="0" cb="0"/><line nr="265" mi="12" ci="0" mb="0" cb="0"/><line nr="266" mi="6" ci="0" mb="0" cb="0"/><line nr="269" mi="30" ci="0" mb="0" cb="0"/><line nr="270" mi="18" ci="0" mb="0" cb="0"/><line nr="272" mi="6" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="292" mi="14" ci="0" mb="4" cb="0"/><line nr="293" mi="10" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="408" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="46" covered="0"/><counter type="METHOD" missed="27" covered="0"/><counter type="CLASS" missed="16" covered="0"/></sourcefile><sourcefile name="ReturnFromFinally.kt"><line nr="1" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="16" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="27" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="2" cb="0"/><line nr="62" mi="6" ci="0" mb="2" cb="0"/><line nr="63" mi="9" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="9" ci="0" mb="0" cb="0"/><line nr="77" mi="12" ci="0" mb="2" cb="0"/><line nr="78" mi="9" ci="0" mb="2" cb="0"/><line nr="80" mi="25" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="8" ci="0" mb="2" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="10" ci="0" mb="4" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="2" cb="0"/><line nr="105" mi="12" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="231" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="TooGenericExceptionCaught.kt"><line nr="1" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="30" ci="0" mb="0" cb="0"/><line nr="53" mi="31" ci="0" mb="0" cb="0"/><line nr="56" mi="10" ci="0" mb="2" cb="0"/><line nr="57" mi="5" ci="0" mb="2" cb="0"/><line nr="58" mi="5" ci="0" mb="2" cb="0"/><line nr="60" mi="22" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="12" ci="0" mb="2" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="22" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="202" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="ThrowingExceptionFromFinally.kt"><line nr="30" mi="16" ci="0" mb="0" cb="0"/><line nr="32" mi="8" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="15" ci="0" mb="0" cb="0"/><line nr="41" mi="25" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="RethrowCaughtException.kt"><line nr="63" mi="16" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="9" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="9" ci="0" mb="2" cb="0"/><line nr="78" mi="22" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="9" ci="0" mb="2" cb="0"/><line nr="86" mi="21" ci="0" mb="6" cb="0"/><line nr="87" mi="13" ci="0" mb="6" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InstanceOfCheckForException.kt"><line nr="49" mi="16" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="2" cb="0"/><line nr="61" mi="17" ci="0" mb="2" cb="0"/><line nr="62" mi="7" ci="0" mb="2" cb="0"/><line nr="63" mi="25" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="14" ci="0" mb="2" cb="0"/><line nr="70" mi="11" ci="0" mb="2" cb="0"/><line nr="71" mi="17" ci="0" mb="4" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="14" ci="0" mb="4" cb="0"/><line nr="76" mi="6" ci="0" mb="2" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="9" ci="0" mb="0" cb="0"/><line nr="79" mi="10" ci="0" mb="4" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="190" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="SwallowedException.kt"><line nr="1" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="16" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="14" ci="12" mb="0" cb="0"/><line nr="83" mi="15" ci="0" mb="0" cb="0"/><line nr="87" mi="14" ci="17" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="2" cb="0"/><line nr="91" mi="9" ci="0" mb="2" cb="0"/><line nr="92" mi="23" ci="0" mb="6" cb="0"/><line nr="93" mi="4" ci="0" mb="2" cb="0"/><line nr="94" mi="5" ci="0" mb="2" cb="0"/><line nr="96" mi="22" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="12" ci="0" mb="4" cb="0"/><line nr="106" mi="9" ci="0" mb="2" cb="0"/><line nr="107" mi="8" ci="0" mb="2" cb="0"/><line nr="108" mi="13" ci="0" mb="0" cb="0"/><line nr="109" mi="18" ci="0" mb="4" cb="0"/><line nr="114" mi="9" ci="0" mb="2" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="18" ci="0" mb="2" cb="0"/><line nr="117" mi="9" ci="0" mb="0" cb="0"/><line nr="118" mi="16" ci="0" mb="4" cb="0"/><line nr="119" mi="6" ci="0" mb="2" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="2" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="2" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="7" ci="0" mb="2" cb="0"/><line nr="135" mi="21" ci="0" mb="2" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="12" ci="0" mb="2" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="18" ci="0" mb="0" cb="0"/><line nr="152" mi="7" ci="0" mb="2" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="2" cb="0"/><line nr="155" mi="15" ci="0" mb="2" cb="0"/><line nr="157" mi="17" ci="0" mb="4" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="2" cb="0"/><line nr="162" mi="7" ci="0" mb="2" cb="0"/><line nr="163" mi="17" ci="0" mb="2" cb="0"/><line nr="166" mi="6" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="14" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="478" covered="59"/><counter type="BRANCH" missed="64" covered="0"/><counter type="LINE" missed="54" covered="7"/><counter type="COMPLEXITY" missed="48" covered="2"/><counter type="METHOD" missed="16" covered="2"/><counter type="CLASS" missed="4" covered="2"/></sourcefile><sourcefile name="ThrowingExceptionsWithoutMessageOrCause.kt"><line nr="1" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="16" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="24" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="24" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="9" ci="0" mb="2" cb="0"/><line nr="68" mi="21" ci="0" mb="6" cb="0"/><line nr="69" mi="4" ci="0" mb="2" cb="0"/><line nr="71" mi="22" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="167" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ObjectExtendsThrowable.kt"><line nr="43" mi="16" ci="0" mb="0" cb="0"/><line nr="44" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="4" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="9" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="2" cb="0"/><line nr="73" mi="4" ci="0" mb="2" cb="0"/><line nr="74" mi="7" ci="0" mb="2" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TooGenericExceptionThrown.kt"><line nr="1" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="26" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="14" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="16" ci="0" mb="6" cb="0"/><line nr="60" mi="5" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="144" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ThrowingExceptionInMain.kt"><line nr="26" mi="16" ci="0" mb="0" cb="0"/><line nr="28" mi="8" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="7" ci="0" mb="4" cb="0"/><line nr="37" mi="19" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="15" ci="0" mb="4" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="2955" covered="68"/><counter type="BRANCH" missed="272" covered="0"/><counter type="LINE" missed="365" covered="10"/><counter type="COMPLEXITY" missed="264" covered="4"/><counter type="METHOD" missed="128" covered="4"/><counter type="CLASS" missed="41" covered="3"/></package><counter type="INSTRUCTION" missed="2955" covered="68"/><counter type="BRANCH" missed="272" covered="0"/><counter type="LINE" missed="365" covered="10"/><counter type="COMPLEXITY" missed="264" covered="4"/><counter type="METHOD" missed="128" covered="4"/><counter type="CLASS" missed="41" covered="3"/></report>