{
  "meta" : {
    "reportVersion" : "2.5"
  },
  "run" : {
    "version" : "2023.07.02-SNAPSHOT-0623e01-local",
    "creationTimestamp" : "2023-07-06T13:16:20.649969+01:00",
    "command" : "dcover create --testing-framework=junit-5 --working-directory detekt-rules-style io.github io.gitlab",
    "totalTime" : 225.942,
    "environmentDetectionTime" : 1.837,
    "indexingTime" : 0.201,
    "entryPointsTime" : 1.82,
    "generationTime" : 204.829,
    "timeToFirstTest" : 59.112,
    "timeToLastTest" : 224.204,
    "indexQueryTime" : 16.129,
    "verificationTime" : 3.84,
    "validationTime" : 1.136
  },
  "codes" : {
    "F009" : "Internal error",
    "R000" : "Success",
    "R011" : "Sandboxing policy violation",
    "R013" : "No inputs found that don't throw a trivial exception",
    "R034" : "Diffblue Cover can't complete test",
    "R081" : "Exception in arrange section",
    "R083" : "Can't find a suitable constructor",
    "T000" : "Method eligible for test creation",
    "T001" : "Trivial getter",
    "T003" : "Private method",
    "T004" : "In anonymous inner class",
    "T005" : "Trivial constructor",
    "T012" : "Synthetic method",
    "T020" : "Other trivial method",
    "V000" : "Validated successfully"
  },
  "summary" : {
    "classesCount" : 300,
    "methodsCount" : 1750,
    "completeTestCount" : 34,
    "incompleteTestCount" : 0,
    "skeletonTestCount" : 0,
    "perMethodTestability" : {
      "T000" : 323,
      "T001" : 107,
      "T003" : 550,
      "T004" : 286,
      "T005" : 2,
      "T012" : 480,
      "T020" : 2
    },
    "perMethodOutcome" : {
      "F009" : 1,
      "R000" : 23,
      "R011" : 125,
      "R013" : 74,
      "R034" : 114,
      "R081" : 95,
      "R083" : 2,
      "T003" : 550,
      "T004" : 286,
      "T012" : 480
    },
    "perTestOutcome" : {
      "R000" : 34
    },
    "perTestValidation" : {
      "V000" : 34
    }
  },
  "classes" : {
    "io.gitlab.arturbosch.detekt.rules.style.AlsoCouldBeApply" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements" : {
      "methodsCount" : 17,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 9,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 9,
        "T012" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$BracePolicy" : {
      "methodsCount" : 6,
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T001" : 1,
        "T003" : 1,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "R000" : 1,
        "T003" : 1,
        "T012" : 4
      },
      "perTestOutcome" : {
        "R000" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$BracePolicy$Companion" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R083" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$WhenMappings" : {
      "methodsCount" : 1,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$multiLine$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$singleLine$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements" : {
      "methodsCount" : 16,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 8,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 8,
        "T012" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy" : {
      "methodsCount" : 7,
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T001" : 2,
        "T003" : 1,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "R000" : 2,
        "T003" : 1,
        "T012" : 4
      },
      "perTestOutcome" : {
        "R000" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy$Companion" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R083" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$WhenMappings" : {
      "methodsCount" : 1,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$multiLine$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$singleLine$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$NullableParam" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 10
      },
      "perMethodOutcome" : {
        "T003" : 10
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor" : {
      "methodsCount" : 22,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 22
      },
      "perMethodOutcome" : {
        "T003" : 22
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$evaluateCheckStatement$1$nullableParamCallback$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$evaluateCheckStatement$1$nullableParamCallback$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitBinaryExpression$1$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitCallExpression$1$1$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitDotQualifiedExpression$1$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$$inlined$filterIsInstance$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$2" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$4" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$5" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitPostfixExpression$1$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitSafeQualifiedExpression$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$2" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$3" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 9
      },
      "perMethodOutcome" : {
        "T003" : 9
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$2" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$3" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping" : {
      "methodsCount" : 13,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 5,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 5,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrdering" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "R013" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrderingKt" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T003" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.CollapsibleIfStatements" : {
      "methodsCount" : 8,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 3,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 3,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions" : {
      "methodsCount" : 11,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 3,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 3,
        "T012" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassShouldBeImmutable" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DestructuringDeclarationWithTooManyEntries" : {
      "methodsCount" : 8,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda" : {
      "methodsCount" : 14,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 5,
        "T012" : 5
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 5,
        "T012" : 5
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$NegativeFunction" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 9,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 9,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$joinInBackTicks$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$negativeFunctionNameParts$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$negativeFunctions$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$visitCallExpression$$inlined$collectDescendantsOfType$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$visitCallExpression$$inlined$collectDescendantsOfType$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$visitCallExpression$forbiddenChildren$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsNullCall" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine$visitNamedFunction$hasLineBreakBeforeEqualsToken$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod" : {
      "methodsCount" : 12,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 7,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "R013" : 1,
        "R081" : 1,
        "T003" : 7,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitItLambdaParameter" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T001" : 2
      },
      "perMethodOutcome" : {
        "R013" : 1,
        "R034" : 1,
        "R081" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax" : {
      "methodsCount" : 13,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 5,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 5,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax$containsReturnStmtsInNullableArguments$$inlined$anyDescendantOfType$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax$containsReturnStmtsInNullableArguments$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.Forbidden" : {
      "methodsCount" : 10,
      "completeTestCount" : 9,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 6,
        "T001" : 2,
        "T012" : 1,
        "T020" : 1
      },
      "perMethodOutcome" : {
        "R000" : 9,
        "T012" : 1
      },
      "perTestOutcome" : {
        "R000" : 9
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation" : {
      "methodsCount" : 12,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 4,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 4,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation$annotations$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment" : {
      "methodsCount" : 20,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 9,
        "T012" : 6
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 9,
        "T012" : 6
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Comment" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 9,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 9,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$allowedPatterns$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$comments$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$2" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$3" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt" : {
      "methodsCount" : 2,
      "completeTestCount" : 7,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1,
        "T003" : 1
      },
      "perMethodOutcome" : {
        "R000" : 1,
        "T003" : 1
      },
      "perTestOutcome" : {
        "R000" : 7
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt$getCommentContent$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt$getCommentContent$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport" : {
      "methodsCount" : 12,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 4,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 4,
        "T012" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport$forbiddenPatterns$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport$imports$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall" : {
      "methodsCount" : 14,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 8,
        "T001" : 1,
        "T003" : 2,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "R013" : 1,
        "R034" : 5,
        "R081" : 1,
        "T003" : 2,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$Forbidden" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 9,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 9,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$methods$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 3,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 3,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$filterForbiddenRules$lambda$1$$inlined$findDescendantOfType$default$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$filterForbiddenRules$lambda$1$$inlined$findDescendantOfType$default$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$formatMessage$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid" : {
      "methodsCount" : 14,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 6,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "R034" : 1,
        "R081" : 1,
        "T003" : 6,
        "T012" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid$isPartOfReturnTypeOfFunction$$inlined$anyDescendantOfType$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid$isPartOfReturnTypeOfFunction$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant" : {
      "methodsCount" : 23,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 12,
        "T012" : 6
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 12,
        "T012" : 6
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant$excludeAnnotatedFunction$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant$excludedFunctions$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstantKt" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.JunkKt" : {
      "methodsCount" : 1,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1
      },
      "perMethodOutcome" : {
        "F009" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.JunkKt$findKtElementInParents$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContent" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 6,
        "T001" : 2,
        "T012" : 1,
        "T020" : 1
      },
      "perMethodOutcome" : {
        "R011" : 9,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContentKt" : {
      "methodsCount" : 1,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 3,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 3,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements$countBreakAndReturnStatementsInLoop$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatementsKt" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 3,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T003" : 3,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber" : {
      "methodsCount" : 45,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 27,
        "T012" : 14
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 27,
        "T012" : 14
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber$ignoreNumbers$2" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine" : {
      "methodsCount" : 13,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 6,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "R013" : 1,
        "R081" : 1,
        "T003" : 6,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine$getReceiverEndPosition$$inlined$findDescendantOfType$default$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine$getReceiverEndPosition$$inlined$findDescendantOfType$default$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength" : {
      "methodsCount" : 24,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 12,
        "T012" : 8
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 12,
        "T012" : 8
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength$Companion" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T003" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLengthKt" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant" : {
      "methodsCount" : 16,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 5,
        "T001" : 2,
        "T003" : 8,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 3,
        "R081" : 2,
        "T003" : 8,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "R013" : 1,
        "R081" : 1,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$$inlined$compareBy$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$modifierString$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$modifiers$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T001" : 2,
        "T003" : 2
      },
      "perMethodOutcome" : {
        "R013" : 1,
        "R034" : 1,
        "R081" : 2,
        "T003" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter$hasNoStatements$$inlined$anyDescendantOfType$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter$hasNoStatements$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation" : {
      "methodsCount" : 11,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T001" : 1,
        "T003" : 5,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R081" : 1,
        "T003" : 5,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation" : {
      "methodsCount" : 12,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 11,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 11,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt" : {
      "methodsCount" : 14,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 8,
        "T012" : 6
      },
      "perMethodOutcome" : {
        "T003" : 8,
        "T012" : 6
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.NestedClassesVisibility" : {
      "methodsCount" : 8,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 3,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 3,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.NewLineAtEndOfFile" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.NoTabs" : {
      "methodsCount" : 7,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.NullableBooleanCheck" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda" : {
      "methodsCount" : 14,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 8,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 8,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsOwnMethodCall$$inlined$anyDescendantOfType$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsOwnMethodCall$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsThisReference$$inlined$anyDescendantOfType$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsThisReference$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalAbstractKeyword" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalWhenBraces" : {
      "methodsCount" : 7,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ProtectedMemberInFinalClass" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ProtectedMemberInFinalClass$DeclarationVisitor" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1,
        "T005" : 1
      },
      "perMethodOutcome" : {
        "R034" : 1,
        "R081" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantExplicitType" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T001" : 1,
        "T003" : 1
      },
      "perMethodOutcome" : {
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 4,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 4,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$isRedundant$$inlined$collectDescendantsOfType$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$isRedundant$$inlined$collectDescendantsOfType$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$isRedundant$returnExpressions$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule" : {
      "methodsCount" : 12,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 2,
        "T003" : 3,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 2,
        "R081" : 2,
        "T003" : 3,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule$ChildrenVisitor" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 3
      },
      "perMethodOutcome" : {
        "T003" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule$ClassVisitor" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 2
      },
      "perMethodOutcome" : {
        "T003" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount" : {
      "methodsCount" : 21,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 9,
        "T012" : 8
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 9,
        "T012" : 8
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 4,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 4,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$2" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$3" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$2" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$excludedFunctions$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$isNamedReturnFromLambda$$inlined$parentsOfTypeUntil$default$1" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 4,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 4,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCountKt" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.SafeCast" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 5,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 5,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.Section" : {
      "methodsCount" : 5,
      "completeTestCount" : 11,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R000" : 4,
        "T012" : 1
      },
      "perTestOutcome" : {
        "R000" : 11
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass" : {
      "methodsCount" : 14,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 7,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 7,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass$SerialVersionUIDFindings" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 9,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 9,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 5,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 5,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$checkKtElementsDeclaration$$inlined$filterIsInstance$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$visitKtFile$$inlined$anyDescendantOfType$default$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$visitKtFile$$inlined$anyDescendantOfType$default$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString" : {
      "methodsCount" : 18,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T001" : 1,
        "T003" : 9,
        "T012" : 6
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 9,
        "T012" : 6
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getParentExpressionAfterParenthesis$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getRootExpression$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$getStringSequence$1" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 4,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 4,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$visitStringTemplateExpression$hasNoViolations$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$visitStringTemplateExpression$hasNoViolations$1$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.StyleGuideProvider" : {
      "methodsCount" : 3,
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1,
        "T001" : 1,
        "T005" : 1
      },
      "perMethodOutcome" : {
        "R000" : 2,
        "R034" : 1
      },
      "perTestOutcome" : {
        "R000" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 2,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 2,
        "T012" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 4,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 4,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1$invoke$$inlined$collectDescendantsOfType$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1$invoke$$inlined$collectDescendantsOfType$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrailingWhitespace" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 4,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 4,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawString" : {
      "methodsCount" : 7,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T001" : 2,
        "T003" : 1,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R081" : 2,
        "T003" : 1,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawStringKt" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals" : {
      "methodsCount" : 20,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 10,
        "T012" : 6
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 10,
        "T012" : 6
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals$acceptableDecimalLength$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals$acceptableLength$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass" : {
      "methodsCount" : 15,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 7,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 3,
        "R081" : 1,
        "T003" : 7,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass$excludeAnnotatedClasses$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget" : {
      "methodsCount" : 8,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget$UseSiteTarget" : {
      "methodsCount" : 7,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 3,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "T003" : 3,
        "T012" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T001" : 1,
        "T003" : 2
      },
      "perMethodOutcome" : {
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply$hasOnlyOneMemberAccessStatement$$inlined$collectDescendantsOfType$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply$hasOnlyOneMemberAccessStatement$$inlined$collectDescendantsOfType$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply$hasOnlyOneMemberAccessStatement$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApplyKt" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 2,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 4,
        "T003" : 2,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks$visitKtElement$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 3,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 3,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall" : {
      "methodsCount" : 11,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 9,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T003" : 9,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInheritance" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass" : {
      "methodsCount" : 13,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 5,
        "T001" : 1,
        "T003" : 4,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 4,
        "R081" : 1,
        "T003" : 4,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass$visitReferenceExpression$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass$visitThisExpression$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLet" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLet$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 3,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "T003" : 3,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt$countLambdaParameterReference$1$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt$countLambdaParameterReference$lambda$2$$inlined$collectDescendantsOfType$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt$countLambdaParameterReference$lambda$2$$inlined$collectDescendantsOfType$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "R011" : 4,
        "T003" : 1,
        "T012" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 5,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "T003" : 5,
        "T012" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion$firstNonParenParent$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor" : {
      "methodsCount" : 12,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 5,
        "T003" : 5,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "R013" : 3,
        "T003" : 5,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor$getUnusedReports$propertyDelegateResultingDescriptors$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T001" : 1,
        "T012" : 6
      },
      "perMethodOutcome" : {
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T012" : 6
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor" : {
      "methodsCount" : 18,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 14,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "T003" : 14,
        "T012" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$fqNames$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$handleKDoc$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$namedReferencesAsString$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$staticReferencesAsString$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$unresolvedNamedReferencesAsString$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$visitImportList$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$visitImportList$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImportsKt" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 2,
        "T003" : 1,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 2,
        "T003" : 1,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter$allowedNames$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor" : {
      "methodsCount" : 8,
      "completeTestCount" : 2,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 5,
        "T003" : 3
      },
      "perMethodOutcome" : {
        "R000" : 2,
        "R011" : 3,
        "T003" : 3
      },
      "perTestOutcome" : {
        "R000" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor$collectParameters$2" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 3
      },
      "perMethodOutcome" : {
        "T004" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor" : {
      "methodsCount" : 17,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 17
      },
      "perMethodOutcome" : {
        "T003" : 17
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor$registerAccess$3$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClassKt" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T003" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 2,
        "T003" : 1,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 2,
        "R081" : 2,
        "T003" : 1,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember$allowedNames$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 2,
        "T003" : 1,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 2,
        "T003" : 1,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty$allowedNames$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyKt" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T003" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor" : {
      "methodsCount" : 11,
      "completeTestCount" : 2,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 7,
        "T003" : 4
      },
      "perMethodOutcome" : {
        "R000" : 2,
        "R011" : 5,
        "T003" : 4
      },
      "perTestOutcome" : {
        "R000" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseAnyOrNoneInsteadOfFind" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 2,
        "R081" : 1,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseAnyOrNoneInsteadOfFind$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations" : {
      "methodsCount" : 8,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 1,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 1,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckNotNull" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckNotNull$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckOrError" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass" : {
      "methodsCount" : 20,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 11,
        "T012" : 5
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 11,
        "T012" : 5
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$excludeAnnotatedClasses$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$visit$$inlined$forEachDescendantOfType$1" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$visit$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseEmptyCounterpart" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 2,
        "T001" : 1
      },
      "perMethodOutcome" : {
        "R013" : 1,
        "R034" : 1,
        "R081" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseEmptyCounterpartKt" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank" : {
      "methodsCount" : 8,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement" : {
      "methodsCount" : 13,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 11,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T003" : 11,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfInsteadOfWhen" : {
      "methodsCount" : 8,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty" : {
      "methodsCount" : 21,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 15,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 15,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseLet" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseOrEmpty" : {
      "methodsCount" : 7,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseOrEmpty$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequire" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequireNotNull" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequireNotNull$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize" : {
      "methodsCount" : 8,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull" : {
      "methodsCount" : 9,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 2,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Conversion" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 8,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T003" : 8,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor" : {
      "methodsCount" : 8,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 3,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 3,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor$UtilityClassConstructor" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T003" : 1
      },
      "perMethodOutcome" : {
        "R011" : 3,
        "T003" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 2,
        "T003" : 1,
        "T012" : 4
      },
      "perMethodOutcome" : {
        "R011" : 5,
        "T003" : 1,
        "T012" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor" : {
      "methodsCount" : 14,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 13,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 13,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$$inlined$collectDescendantsOfType$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$$inlined$collectDescendantsOfType$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$$inlined$collectDescendantsOfType$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$$inlined$collectDescendantsOfType$2" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport" : {
      "methodsCount" : 8,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 3
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 3
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport$excludeImports$2" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.MoveLambdaOutsideParenthesesInspectionKt" : {
      "methodsCount" : 5,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 1,
        "T003" : 4
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "T003" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.UnnecessaryBracesAroundTrailingLambda" : {
      "methodsCount" : 6,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 2,
        "R081" : 1,
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops" : {
      "methodsCount" : 10,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 5,
        "T001" : 1,
        "T003" : 3,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 3,
        "R081" : 1,
        "T003" : 3,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$$inlined$filterIsInstance$1" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$$inlined$filterIsInstance$2" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$hasNoBraces$2" : {
      "methodsCount" : 3,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit" : {
      "methodsCount" : 12,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 4,
        "T001" : 1,
        "T003" : 5,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R034" : 3,
        "R081" : 1,
        "T003" : 5,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax" : {
      "methodsCount" : 7,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T000" : 3,
        "T001" : 1,
        "T003" : 1,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "R011" : 1,
        "R013" : 1,
        "R034" : 1,
        "R081" : 1,
        "T003" : 1,
        "T012" : 2
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax$Companion" : {
      "methodsCount" : 2,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T003" : 1,
        "T012" : 1
      },
      "perMethodOutcome" : {
        "T003" : 1,
        "T012" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax$visitCallExpression$arg$1" : {
      "methodsCount" : 4,
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : {
        "T004" : 2,
        "T012" : 2
      },
      "perMethodOutcome" : {
        "T004" : 2,
        "T012" : 2
      }
    }
  },
  "methods" : {
    "io.gitlab.arturbosch.detekt.rules.style.AlsoCouldBeApply.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.AlsoCouldBeApply.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        40,
        42,
        43,
        44,
        45,
        46,
        42,
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.AlsoCouldBeApply.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        40,
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.AlsoCouldBeApply.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.AlsoCouldBeApply.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        50,
        52,
        63,
        52,
        52,
        52,
        53,
        54,
        64,
        54,
        53,
        55,
        53,
        56,
        56,
        63,
        56,
        56,
        57,
        65,
        66,
        57,
        67,
        57,
        66,
        68,
        57,
        58,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$BracePolicy$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        264
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$BracePolicy$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$BracePolicy$Companion.getValue:(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R083",
      "lineNumbers" : [
        266,
        272,
        273,
        274,
        275,
        266,
        275,
        276,
        277,
        278,
        274,
        281,
        282,
        266,
        267
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$BracePolicy.$values:()[Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$BracePolicy.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        259,
        260,
        261,
        262
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$BracePolicy.<init>:(Ljava/lang/String;ILjava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        258
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$BracePolicy.getConfig:()Ljava/lang/String;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        258
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$BracePolicy.valueOf:(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$BracePolicy.values:()[Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$WhenMappings.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$multiLine$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$multiLine$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$multiLine$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        161
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$multiLine$2.invoke:(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        161
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$singleLine$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$singleLine$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$singleLine$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        158
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements$singleLine$2.invoke:(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        158
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        158,
        161
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        148,
        150,
        151,
        152,
        153,
        154,
        150,
        158,
        161,
        148
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        148,
        270
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        150
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.getMultiLine$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.getMultiLine:()Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        161,
        1,
        161
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.getSingleLine$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.getSingleLine:()Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        158,
        1,
        158
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.hasBraces:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        256
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.isMultiStatement:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        250
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.parentIfCandidate:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        247
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.policy:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        253
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.report:(Lorg/jetbrains/kotlin/psi/KtExpression;Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        215,
        216,
        217,
        218,
        219,
        216,
        221,
        222,
        223,
        224,
        225,
        221,
        227,
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.validate:(Ljava/util/List;Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        188,
        190,
        273,
        274,
        190,
        274,
        275,
        273,
        194,
        276,
        277,
        194,
        277,
        278,
        276,
        198,
        279,
        280,
        198,
        280,
        281,
        279,
        202,
        282,
        283,
        284,
        202,
        284,
        285,
        202,
        203,
        286,
        287,
        288,
        203,
        288,
        289,
        203,
        204,
        205,
        207,
        188,
        211,
        290,
        211,
        290,
        291,
        212
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.visitIfExpression:(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        164,
        166,
        169,
        171,
        172,
        173
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnIfStatements.walk:(Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        176,
        176,
        177,
        178,
        179,
        272,
        179,
        179,
        179,
        181,
        272,
        181,
        181,
        181,
        272,
        181,
        181,
        181,
        182,
        184
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        248
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy$Companion.getValue:(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R083",
      "lineNumbers" : [
        250,
        256,
        257,
        258,
        259,
        250,
        259,
        260,
        261,
        262,
        258,
        265,
        266,
        250,
        251
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy.$values:()[Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        243,
        244,
        245,
        246
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        242
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy.getConfig:()Ljava/lang/String;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        242
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy.getMessage:()Ljava/lang/String;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        242
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy.valueOf:(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$BracePolicy.values:()[Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$WhenMappings.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$multiLine$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$multiLine$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$multiLine$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        172
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$multiLine$2.invoke:(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        172
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$singleLine$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$singleLine$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$singleLine$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        169
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements$singleLine$2.invoke:(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        169
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        169,
        172
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        160,
        161,
        162,
        163,
        164,
        165,
        161,
        169,
        172,
        160
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        160,
        254
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        161
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.getMultiLine$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.getMultiLine:()Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        172,
        1,
        172
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.getSingleLine$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.getSingleLine:()Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        169,
        1,
        169
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.hasNoBraces:(Lorg/jetbrains/kotlin/psi/KtWhenEntry;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        207
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.hasUnnecessaryBraces:(Lorg/jetbrains/kotlin/psi/KtWhenEntry;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        211,
        213,
        214,
        275,
        214,
        214,
        216,
        217
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.isMultiStatement:(Lorg/jetbrains/kotlin/psi/KtWhenEntry;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        221,
        275,
        221,
        221,
        221
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.policy:(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        224,
        276,
        277,
        225,
        275,
        225,
        225,
        225,
        226,
        227,
        278,
        227,
        278,
        279,
        227,
        277,
        280,
        224,
        229
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.report:(Lorg/jetbrains/kotlin/psi/KtWhenEntry;Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        233,
        234,
        237,
        275,
        237,
        237,
        233,
        234,
        233,
        239,
        240
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.validate:(Ljava/util/List;Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        181,
        183,
        256,
        257,
        183,
        257,
        258,
        256,
        187,
        259,
        260,
        187,
        260,
        261,
        259,
        191,
        262,
        263,
        191,
        263,
        264,
        262,
        195,
        265,
        266,
        267,
        195,
        267,
        268,
        195,
        196,
        269,
        270,
        271,
        196,
        271,
        272,
        196,
        197,
        198,
        200,
        181,
        204,
        273,
        204,
        273,
        274,
        205
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.BracesOnWhenStatements.visitWhenExpression:(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        175,
        177,
        178
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        589
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$NullableParam.<init>:(Lorg/jetbrains/kotlin/psi/KtParameter;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        458
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$NullableParam.getParam:()Lorg/jetbrains/kotlin/psi/KtParameter;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        458
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$NullableParam.isNonNullChecked:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        460
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$NullableParam.isNonNullForced:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        461
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$NullableParam.isNullCheckReturnsUnit:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        462
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$NullableParam.isNullChecked:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        459
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$NullableParam.setNonNullChecked:(Z)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        460
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$NullableParam.setNonNullForced:(Z)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        461
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$NullableParam.setNullCheckReturnsUnit:(Z)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        462
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$NullableParam.setNullChecked:(Z)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        459
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$evaluateCheckStatement$1$nullableParamCallback$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$evaluateCheckStatement$1$nullableParamCallback$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$evaluateCheckStatement$1$nullableParamCallback$1.invoke:(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        346,
        347,
        348
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$evaluateCheckStatement$1$nullableParamCallback$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        344
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$evaluateCheckStatement$1$nullableParamCallback$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$evaluateCheckStatement$1$nullableParamCallback$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$evaluateCheckStatement$1$nullableParamCallback$2.invoke:(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        350
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$evaluateCheckStatement$1$nullableParamCallback$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        344
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitBinaryExpression$1$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitBinaryExpression$1$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitBinaryExpression$1$1.invoke:(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        304
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitBinaryExpression$1$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        304
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitCallExpression$1$1$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitCallExpression$1$1$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitCallExpression$1$1$1.invoke:(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        222
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitCallExpression$1$1$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        222
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitDotQualifiedExpression$1$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitDotQualifiedExpression$1$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitDotQualifiedExpression$1$1.invoke:(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        293
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitDotQualifiedExpression$1$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        293
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$$inlined$filterIsInstance$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$$inlined$filterIsInstance$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$$inlined$filterIsInstance$1.invoke:(Ljava/lang/Object;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        473
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        157
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$1.invoke:(Lorg/jetbrains/kotlin/psi/KtParameter;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        158
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$2.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        160
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$2.invoke:(Lorg/jetbrains/kotlin/psi/KtParameter;)Lkotlin/Pair;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        161,
        162,
        161,
        161
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$4.<init>:(Ljava/lang/Object;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$4.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        190
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$4.invoke:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        190
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$5.<init>:(Z)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$5.invoke:(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        197,
        198
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$5.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        196
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitPostfixExpression$1$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitPostfixExpression$1$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitPostfixExpression$1$1.invoke:(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        232
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitPostfixExpression$1$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        232
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitSafeQualifiedExpression$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitSafeQualifiedExpression$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitSafeQualifiedExpression$1.invoke:(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        279
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitSafeQualifiedExpression$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        279
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        277
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        277
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$2.<init>:(Lkotlin/jvm/functions/Function1;Ljava/util/Collection;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        291
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$2.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        292,
        293,
        295
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$3.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$3.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        147,
        148,
        148,
        147
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.determineSingleExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/util/Set;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        320,
        321,
        322,
        323,
        326,
        324,
        325,
        326,
        325,
        326,
        327,
        326,
        327,
        660,
        327,
        327,
        327,
        326,
        324,
        329,
        330,
        320
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.evaluateBinaryExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;Lorg/jetbrains/kotlin/com/intellij/psi/tree/IElementType;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        363,
        364,
        365,
        365,
        367,
        369,
        368,
        369,
        368,
        369,
        660,
        369,
        369,
        369,
        370,
        369,
        370,
        660,
        370,
        370,
        369,
        371,
        372,
        660,
        372,
        372,
        372,
        375,
        660,
        375,
        375,
        375,
        376,
        660,
        376,
        376,
        376,
        377
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.evaluateCheckStatement:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        343,
        344,
        352,
        661,
        353,
        353,
        354,
        661,
        662,
        355,
        343,
        343,
        356
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.evaluateIsExpression:(Lorg/jetbrains/kotlin/psi/KtIsExpression;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        390,
        391,
        390,
        392,
        393,
        660,
        393,
        393,
        393,
        394,
        396,
        392
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.evaluateNullCheckReturnsUnit:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        267,
        268,
        269,
        271,
        273,
        272,
        273,
        272,
        273,
        660,
        273,
        273,
        273,
        274,
        273,
        274,
        660,
        274,
        274,
        273,
        276
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.evaluateSubjectWhenExpression:(Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtWhenExpression;Ljava/util/List;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        404,
        405,
        406,
        663,
        407,
        408,
        409,
        410,
        413,
        414,
        415,
        417,
        421,
        663,
        664,
        422,
        423,
        424,
        425,
        426,
        429,
        665,
        430,
        431,
        432,
        433,
        430,
        430,
        434,
        665,
        666,
        435
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.getDescriptor:(Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        385,
        381,
        382,
        383,
        384,
        381,
        385,
        381,
        385,
        386,
        385,
        386,
        385,
        381
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.getNonNullChecks:(Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/com/intellij/psi/tree/IElementType;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        335,
        336,
        337,
        338,
        335
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.getRootExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        312,
        313,
        314,
        316
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.isNullable:(Lorg/jetbrains/kotlin/psi/KtTypeReference;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        447,
        660,
        447,
        447,
        447
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.isNullableCheck:(Lorg/jetbrains/kotlin/psi/KtTypeReference;Z)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        438,
        439
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.isValidElseExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        443
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.updateNullableParam:(Lorg/jetbrains/kotlin/psi/KtExpression;Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        452,
        451,
        452,
        451,
        452,
        453,
        452,
        453,
        660,
        453,
        453,
        453,
        454,
        453,
        454,
        452,
        455
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.visitBinaryExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        300,
        303,
        302,
        301,
        302,
        303,
        302,
        303,
        304,
        305,
        303,
        303,
        307,
        308
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        214,
        212,
        213,
        214,
        213,
        214,
        215,
        214,
        215,
        216,
        215,
        216,
        214,
        212,
        219,
        220,
        603,
        221,
        222,
        223,
        221,
        221,
        224,
        603,
        604,
        226,
        227
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.visitDotQualifiedExpression:(Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        285,
        284,
        285,
        284,
        285,
        286,
        285,
        286,
        287,
        286,
        287,
        288,
        287,
        288,
        285,
        284,
        289,
        292,
        291,
        290,
        291,
        292,
        291,
        292,
        293,
        294,
        292,
        292,
        296,
        297
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.visitIfExpression:(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        259,
        260,
        261,
        263,
        264
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        151,
        152,
        155,
        155,
        156,
        157,
        160,
        165,
        598,
        165,
        166,
        167,
        168,
        598,
        599,
        170,
        172,
        171,
        172,
        171,
        172,
        173,
        172,
        173,
        600,
        173,
        174,
        173,
        174,
        172,
        175,
        175,
        171,
        176,
        177,
        179,
        182,
        170,
        187,
        189,
        190,
        196,
        200,
        601,
        201,
        202,
        203,
        204,
        205,
        202,
        201,
        208,
        601,
        602,
        209
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.visitPostfixExpression:(Lorg/jetbrains/kotlin/psi/KtPostfixExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        230,
        231,
        232,
        233,
        231,
        231,
        235,
        236
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.visitSafeQualifiedExpression:(Lorg/jetbrains/kotlin/psi/KtSafeQualifiedExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        279,
        280,
        281
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$ParameterCheckVisitor.visitWhenExpression:(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        240,
        239,
        240,
        239,
        240,
        605,
        606,
        612,
        619,
        620,
        621,
        622,
        612,
        606,
        240,
        241,
        242,
        623,
        631,
        632,
        631,
        242,
        631,
        633,
        631,
        631,
        631,
        632,
        634,
        635,
        623,
        243,
        636,
        637,
        243,
        637,
        638,
        636,
        244,
        639,
        647,
        648,
        647,
        244,
        647,
        649,
        647,
        647,
        647,
        648,
        650,
        651,
        639,
        244,
        239,
        245,
        652,
        653,
        654,
        245,
        654,
        655,
        657,
        652,
        245,
        246,
        246,
        247,
        249,
        658,
        250,
        251,
        253,
        658,
        659,
        255,
        256
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        277
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        277
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$2.<init>:(Lkotlin/jvm/functions/Function1;Ljava/util/Collection;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        291
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$2.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        292,
        293,
        295
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$3.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$3.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        465,
        471,
        471,
        465
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor.isCandidate:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        542,
        543,
        544,
        545,
        543,
        546,
        547
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor.isNullableAndCanBeNonNullable:(Lorg/jetbrains/kotlin/types/KotlinType;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        538
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor.isNullableType:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        563,
        564,
        565,
        567,
        568,
        570,
        571,
        574,
        573,
        574,
        573,
        574,
        600,
        601,
        607,
        614,
        615,
        616,
        617,
        607,
        601,
        574,
        575,
        574,
        575,
        618,
        619,
        575,
        619,
        620,
        575,
        574,
        573,
        583,
        563
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor.returnsNullable:(Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        551,
        553,
        552,
        554,
        556,
        555,
        556,
        555,
        556,
        557,
        556,
        557,
        558,
        557,
        558,
        556,
        555,
        554,
        554,
        559,
        554
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor.visitBinaryExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        507,
        509,
        508,
        509,
        508,
        509,
        510,
        509,
        510,
        511,
        510,
        511,
        509,
        508,
        512,
        513,
        514,
        515,
        520,
        523,
        524
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        490,
        491,
        493
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor.visitKtFile:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        474,
        478,
        598,
        598,
        478,
        478,
        479,
        480,
        481,
        482,
        483,
        480,
        479,
        486,
        598,
        599,
        487
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable$PropertyCheckVisitor.visitProperty:(Lorg/jetbrains/kotlin/psi/KtProperty;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        496,
        497,
        498,
        499,
        500,
        503,
        504
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        132,
        133,
        134,
        135,
        136,
        137,
        133,
        132
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        132,
        596
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        133
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CanBeNonNullable.visitKtFile:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        141,
        142,
        143,
        144
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        39,
        40,
        41,
        42,
        43,
        44,
        40,
        48,
        39
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        39,
        131
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.checkExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        65,
        66,
        133,
        66,
        66,
        66,
        66,
        67,
        68,
        69,
        70,
        71,
        68,
        67,
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.containsNewline:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        82,
        83,
        84,
        85,
        87,
        88,
        89,
        90,
        92,
        95,
        96,
        98,
        134,
        135,
        98,
        135,
        136,
        98
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.getIncludeElvis$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.getIncludeElvis:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        48,
        1,
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.receiverContainsNewline:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        102,
        103,
        104,
        105,
        102,
        108,
        109,
        110,
        111,
        108
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.toErrorReportEntity:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lio/gitlab/arturbosch/detekt/api/Entity;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        124,
        125,
        123,
        128,
        116
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.visitBinaryExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        57,
        59,
        60,
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CascadingCallWrapping.visitQualifiedExpression:(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        51,
        53,
        54
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrdering.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrdering.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        56,
        58,
        59,
        60,
        61,
        63,
        58,
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrdering.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        56,
        131
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrdering.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrdering.getMinimalNumberOfViolations:(Ljava/util/List;)Lkotlin/Pair;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        96,
        173,
        181,
        182,
        181,
        97,
        98,
        97,
        97,
        181,
        183,
        181,
        181,
        181,
        182,
        184,
        185,
        173,
        96,
        101,
        102,
        101,
        104,
        105,
        104,
        107,
        108,
        109,
        110,
        112,
        113,
        108,
        107,
        118,
        186,
        187,
        188,
        189,
        190,
        118,
        190,
        192,
        193,
        118,
        193,
        194,
        195,
        196,
        198,
        199,
        118,
        120,
        123,
        124,
        125,
        126,
        127,
        120,
        127,
        120,
        128,
        129,
        200,
        201,
        202,
        129,
        202,
        203,
        200,
        128
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrdering.visitClassBody:(Lorg/jetbrains/kotlin/psi/KtClassBody;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        67,
        69,
        70,
        71,
        72,
        71,
        73,
        170,
        73,
        74,
        171,
        74,
        74,
        74,
        75,
        74,
        74,
        76,
        77,
        171,
        77,
        77,
        77,
        76,
        74,
        79,
        81,
        80,
        82,
        83,
        84,
        85,
        86,
        83,
        87,
        83,
        82,
        90,
        170,
        172,
        91
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrderingKt.access$toDescription:(Lorg/jetbrains/kotlin/psi/KtDeclaration;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrderingKt.access$toSection:(Lorg/jetbrains/kotlin/psi/KtDeclaration;)Lio/gitlab/arturbosch/detekt/rules/style/Section;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrderingKt.toDescription:(Lorg/jetbrains/kotlin/psi/KtDeclaration;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        133,
        134,
        135,
        136,
        137,
        138,
        139,
        140
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ClassOrderingKt.toSection:(Lorg/jetbrains/kotlin/psi/KtDeclaration;)Lio/gitlab/arturbosch/detekt/rules/style/Section;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        143,
        144,
        145,
        146,
        147,
        148,
        149,
        150
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CollapsibleIfStatements.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.CollapsibleIfStatements.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        37,
        39,
        40,
        41,
        42,
        44,
        39,
        37
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CollapsibleIfStatements.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        37,
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CollapsibleIfStatements.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        39
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CollapsibleIfStatements.hasOneKtIfExpression:(Lorg/jetbrains/kotlin/psi/KtIfExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        58,
        63,
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CollapsibleIfStatements.isLoneIfExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CollapsibleIfStatements.isNotElseIfOrElse:(Lorg/jetbrains/kotlin/psi/KtIfExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        55
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.CollapsibleIfStatements.visitIfExpression:(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        48,
        49,
        51,
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        41,
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        30,
        32,
        33,
        34,
        35,
        37,
        32,
        41,
        44,
        30
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        30,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions.checkFunction:(Lorg/jetbrains/kotlin/psi/KtClass;Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        56,
        58,
        59,
        86,
        87,
        59,
        87,
        88,
        59,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        66,
        63,
        62,
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions.getAllowOperators$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions.getAllowOperators:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        44,
        1,
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions.getConversionFunctionPrefix$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions.getConversionFunctionPrefix:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        41,
        1,
        41
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        32
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassContainsFunctions.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        47,
        48,
        49,
        48,
        49,
        73,
        82,
        83,
        73,
        49,
        50,
        49,
        50,
        84,
        50,
        84,
        85,
        48,
        52,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassShouldBeImmutable.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassShouldBeImmutable.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        32,
        34,
        35,
        36,
        37,
        39,
        34,
        32
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassShouldBeImmutable.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        32,
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassShouldBeImmutable.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        34
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassShouldBeImmutable.report:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Ljava/lang/String;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        56,
        57,
        58,
        59,
        60,
        61,
        60,
        57,
        56,
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DataClassShouldBeImmutable.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        43,
        44,
        45,
        67,
        68,
        45,
        68,
        69,
        67,
        46,
        70,
        46,
        70,
        71,
        48,
        49,
        72,
        73,
        49,
        73,
        74,
        72,
        50,
        75,
        50,
        75,
        76,
        52,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DestructuringDeclarationWithTooManyEntries.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DestructuringDeclarationWithTooManyEntries.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DestructuringDeclarationWithTooManyEntries.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        31,
        32,
        33,
        34,
        35,
        36,
        32,
        40,
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DestructuringDeclarationWithTooManyEntries.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        31,
        50
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DestructuringDeclarationWithTooManyEntries.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        32
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DestructuringDeclarationWithTooManyEntries.getMaxDestructuringEntries$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DestructuringDeclarationWithTooManyEntries.getMaxDestructuringEntries:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        40,
        1,
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DestructuringDeclarationWithTooManyEntries.visitDestructuringDeclaration:(Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        43,
        44,
        45,
        44,
        45,
        44,
        46,
        48,
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        127
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$NegativeFunction.<init>:(Ljava/lang/String;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        122,
        123,
        124,
        122
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$NegativeFunction.component1:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$NegativeFunction.component2:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$NegativeFunction.copy$default:(Lio/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda$NegativeFunction;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda$NegativeFunction;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$NegativeFunction.copy:(Ljava/lang/String;Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda$NegativeFunction;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$NegativeFunction.equals:(Ljava/lang/Object;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$NegativeFunction.getRecommendation:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        124
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$NegativeFunction.getSimpleName:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        123
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$NegativeFunction.hashCode:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$NegativeFunction.toString:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$joinInBackTicks$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$joinInBackTicks$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$joinInBackTicks$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$joinInBackTicks$1.invoke:(Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/lang/CharSequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$negativeFunctionNameParts$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$negativeFunctionNameParts$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$negativeFunctionNameParts$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$negativeFunctionNameParts$2.invoke:(Ljava/util/List;)Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$negativeFunctions$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$negativeFunctions$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$negativeFunctions$2.invoke:(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        64,
        133,
        134,
        135,
        64,
        135,
        136,
        133,
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$negativeFunctions$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$visitCallExpression$$inlined$collectDescendantsOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Ljava/util/Collection;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$visitCallExpression$$inlined$collectDescendantsOfType$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        291
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$visitCallExpression$$inlined$collectDescendantsOfType$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        292,
        293,
        295
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$visitCallExpression$$inlined$collectDescendantsOfType$2.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$visitCallExpression$$inlined$collectDescendantsOfType$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$visitCallExpression$forbiddenChildren$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$visitCallExpression$forbiddenChildren$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        79
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda$visitCallExpression$forbiddenChildren$1.invoke:(Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        80
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        58,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        32,
        34,
        35,
        36,
        37,
        40,
        34,
        43,
        43,
        45,
        46,
        47,
        46,
        48,
        46,
        49,
        46,
        50,
        46,
        45,
        58,
        60,
        61,
        60,
        59,
        58,
        71,
        32
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        32,
        131
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.access$isForbiddenNegation:(Lio/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        32
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.formatMessage:(Ljava/util/List;Lio/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda$NegativeFunction;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        107,
        108,
        109,
        110,
        111,
        113,
        115,
        107,
        115
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        34
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.getNegativeFunctionNameParts$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.getNegativeFunctionNameParts:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        71,
        1,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.getNegativeFunctions$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.getNegativeFunctions:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        58,
        1,
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.isForbiddenNegation:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        95,
        96,
        97,
        97,
        152,
        153,
        154,
        97,
        97,
        154,
        155,
        152,
        98,
        156,
        157,
        98,
        157,
        158,
        100,
        95
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.joinInBackTicks:(Ljava/util/List;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.DoubleNegativeLambda.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        74,
        75,
        76,
        133,
        76,
        133,
        134,
        76,
        77,
        79,
        135,
        141,
        148,
        149,
        150,
        151,
        141,
        135,
        79,
        83,
        83,
        84,
        85,
        86,
        87,
        88,
        85,
        84,
        92
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsNullCall.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsNullCall.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        26,
        28,
        29,
        30,
        31,
        32,
        28,
        26
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsNullCall.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        26,
        45
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsNullCall.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        28
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsNullCall.hasNullParameter:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsNullCall.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        36,
        37,
        39,
        41
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine$visitNamedFunction$hasLineBreakBeforeEqualsToken$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine$visitNamedFunction$hasLineBreakBeforeEqualsToken$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine$visitNamedFunction$hasLineBreakBeforeEqualsToken$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine$visitNamedFunction$hasLineBreakBeforeEqualsToken$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        36,
        38,
        36
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        36,
        54
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        38
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.EqualsOnSignatureLine.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        41,
        42,
        43,
        44,
        45,
        56,
        45,
        56,
        57,
        45,
        42,
        46,
        47,
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        42,
        45,
        46,
        47,
        48,
        49,
        45,
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        42,
        126
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.canReplace:(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        93,
        131,
        132,
        133,
        93,
        133,
        134,
        131,
        93,
        94,
        135,
        136,
        137,
        94,
        137,
        138,
        135,
        94,
        95,
        97
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.getFunctionDescriptor:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        88
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.isCallerMap:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        115,
        116,
        117,
        119,
        120,
        121,
        139,
        140,
        121,
        140,
        141,
        120
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.isIndexGetterRecommended:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        61,
        62,
        64,
        61,
        65,
        61,
        67,
        128,
        129,
        67,
        129,
        130,
        67,
        69
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.isIndexSetterRecommended:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        73,
        74,
        75,
        76,
        77,
        79,
        83,
        84,
        85
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.shouldReplace:(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        102,
        106,
        108,
        109,
        108,
        110,
        108,
        107
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.unusedReturnValue:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        125
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitCollectionElementAccessMethod.visitDotQualifiedExpression:(Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        53,
        54,
        55,
        56,
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitItLambdaParameter.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        46,
        47,
        48,
        49,
        50,
        51,
        47,
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitItLambdaParameter.getConfig:()Lio/gitlab/arturbosch/detekt/api/Config;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitItLambdaParameter.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        47
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExplicitItLambdaParameter.visitLambdaExpression:(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        55,
        56,
        74,
        75,
        76,
        56,
        76,
        77,
        74,
        56,
        57,
        58,
        59,
        61,
        58,
        63,
        64,
        65,
        66,
        67,
        64,
        63,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax$containsReturnStmtsInNullableArguments$$inlined$anyDescendantOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax$containsReturnStmtsInNullableArguments$$inlined$anyDescendantOfType$1.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax$containsReturnStmtsInNullableArguments$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax$containsReturnStmtsInNullableArguments$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax$containsReturnStmtsInNullableArguments$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        80
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax$containsReturnStmtsInNullableArguments$1.invoke:(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        80
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        43,
        45,
        46,
        47,
        48,
        49,
        45,
        53,
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        43,
        84
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.checkForExpressionBodySyntax:(Lorg/jetbrains/kotlin/psi/KtDeclarationWithBody;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        68,
        67,
        68,
        67,
        68,
        69,
        68,
        69,
        86,
        69,
        69,
        68,
        67,
        71,
        72,
        74
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.containsReturnStmtsInNullableArguments:(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        80,
        87,
        88,
        95,
        96,
        97,
        88,
        87,
        80
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.getIncludeLineWrapping$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.getIncludeLineWrapping:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        53,
        1,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        45
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.isLineWrapped:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        83,
        98,
        83,
        98,
        99,
        83
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.singleReturnStatement:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtReturnExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        77
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        62,
        63,
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ExpressionBodySyntax.visitProperty:(Lorg/jetbrains/kotlin/psi/KtProperty;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        56,
        57,
        58,
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.Forbidden.<init>:(Lkotlin/text/Regex;Ljava/lang/String;)V" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        74
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.Forbidden.component1:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.Forbidden.component2:()Ljava/lang/String;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.Forbidden.copy$default:(Lio/gitlab/arturbosch/detekt/rules/style/Forbidden;Lkotlin/text/Regex;Ljava/lang/String;ILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/Forbidden;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.Forbidden.copy:(Lkotlin/text/Regex;Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/Forbidden;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.Forbidden.equals:(Ljava/lang/Object;)Z" : {
      "completeTestCount" : 4,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.Forbidden.getImport:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        74
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.Forbidden.getReason:()Ljava/lang/String;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        74
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.Forbidden.hashCode:()I" : {
      "completeTestCount" : 4,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 4
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.Forbidden.toString:()Ljava/lang/String;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T020",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      }
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation$annotations$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation$annotations$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation$annotations$2.invoke:(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Ljava/util/Map;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        66,
        112,
        113,
        114,
        115,
        66,
        115,
        117,
        113,
        66
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation$annotations$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        41,
        43,
        44,
        45,
        46,
        47,
        43,
        53,
        55,
        56,
        55,
        57,
        55,
        59,
        55,
        60,
        55,
        61,
        55,
        62,
        55,
        54,
        53,
        41
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        41,
        110
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.check:(Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/name/FqName;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        86,
        88,
        89,
        90,
        92,
        89,
        94,
        95,
        96,
        97,
        96,
        95,
        94,
        94,
        101,
        103
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.expressionTypeOrNull:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/types/KotlinType;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        109
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.fqNameOrNull:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/name/FqName;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        106
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.getAnnotations$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.getAnnotations:()Ljava/util/Map;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        53,
        1,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.visitAnnotationEntry:(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        70,
        72,
        73,
        74,
        72,
        72,
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenAnnotation.visitExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        78,
        80,
        81,
        82,
        80,
        80,
        83
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Comment.<init>:(Lkotlin/text/Regex;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        173
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Comment.component1:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Comment.component2:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Comment.copy$default:(Lio/gitlab/arturbosch/detekt/rules/style/ForbiddenComment$Comment;Lkotlin/text/Regex;Ljava/lang/String;ILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/ForbiddenComment$Comment;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Comment.copy:(Lkotlin/text/Regex;Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/ForbiddenComment$Comment;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Comment.equals:(Ljava/lang/Object;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Comment.getReason:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        173
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Comment.getValue:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        173
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Comment.hashCode:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Comment.toString:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        175
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$allowedPatterns$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$allowedPatterns$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$allowedPatterns$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        116
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$allowedPatterns$2.invoke:(Ljava/lang/String;)Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        116,
        116
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$comments$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$comments$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$comments$2.invoke:(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        112,
        224,
        225,
        226,
        112,
        112,
        226,
        227,
        224,
        112
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$comments$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        104
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        277
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        277
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$2.<init>:(Lkotlin/jvm/functions/Function1;Ljava/util/Collection;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        291
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$2.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        292,
        293,
        295
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$3.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$3.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        101,
        104,
        116,
        120
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        90,
        92,
        93,
        94,
        95,
        96,
        92,
        101,
        104,
        106,
        107,
        106,
        109,
        106,
        105,
        104,
        116,
        120,
        90
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        90,
        178
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.checkForbiddenComment:(Ljava/lang/String;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        137,
        137,
        140,
        244,
        141,
        142,
        144,
        244,
        245,
        146,
        246,
        147,
        148,
        150,
        246,
        247,
        151
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getAllowedPatterns$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getAllowedPatterns:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        116,
        1,
        116
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getComments$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getComments:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        104,
        1,
        104
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getContent:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiComment;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        163
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getCustomMessage$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getCustomMessage:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        120,
        1,
        120
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getErrorMessage:(Lio/gitlab/arturbosch/detekt/rules/style/ForbiddenComment$Comment;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        166,
        166
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getErrorMessage:(Ljava/lang/String;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        170,
        248,
        170,
        170,
        170,
        170,
        171,
        171
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        92
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getValues$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.getValues:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        101,
        1,
        101
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.reportIssue:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        154,
        155,
        156,
        157,
        158,
        155,
        154,
        161
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.visitComment:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiComment;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        123,
        124,
        125,
        126
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenComment.visitKtFile:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        129,
        130,
        224,
        225,
        231,
        238,
        239,
        240,
        241,
        231,
        225,
        130,
        242,
        131,
        132,
        133,
        242,
        243,
        134
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt$getCommentContent$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt$getCommentContent$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt$getCommentContent$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        189
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt$getCommentContent$1.invoke:(Ljava/lang/String;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        190,
        191,
        192,
        192,
        193,
        194,
        195,
        196,
        198,
        193,
        191,
        201,
        202,
        203,
        205,
        202,
        201,
        201
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt$getCommentContent$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt$getCommentContent$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt$getCommentContent$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        210
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt$getCommentContent$2.invoke:(Ljava/lang/String;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        210,
        210
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt.getCommentContent:(Ljava/lang/String;)Ljava/lang/String;" : {
      "completeTestCount" : 7,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 7
      },
      "lineNumbers" : [
        181,
        182,
        184,
        185,
        187,
        189,
        210,
        212,
        181
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenCommentKt.trimIndentIgnoringFirstLine:(Ljava/lang/String;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        217,
        218,
        220,
        221,
        222
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport$forbiddenPatterns$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport$forbiddenPatterns$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport$forbiddenPatterns$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport$forbiddenPatterns$2.invoke:(Ljava/lang/String;)Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        43,
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport$imports$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport$imports$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport$imports$2.invoke:(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        39,
        76,
        77,
        78,
        39,
        78,
        79,
        76,
        39
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport$imports$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        38
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        38,
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        27,
        29,
        30,
        31,
        32,
        34,
        29,
        38,
        43,
        27
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        27,
        72
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.containsForbiddenPattern:(Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        71,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.defaultReason:(Ljava/lang/String;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        67
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.getForbiddenPatterns$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.getForbiddenPatterns:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        43,
        1,
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.getImports$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.getImports:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        38,
        1,
        38
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        29
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenImport.visitImportDirective:(Lorg/jetbrains/kotlin/psi/KtImportDirective;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        46,
        48,
        48,
        50,
        76,
        50,
        50,
        50,
        51,
        52,
        53,
        55,
        58,
        51,
        61,
        62,
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$Forbidden.<init>:(Lio/github/detekt/tooling/api/FunctionMatcher;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        133
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$Forbidden.component1:()Lio/github/detekt/tooling/api/FunctionMatcher;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$Forbidden.component2:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$Forbidden.copy$default:(Lio/gitlab/arturbosch/detekt/rules/style/ForbiddenMethodCall$Forbidden;Lio/github/detekt/tooling/api/FunctionMatcher;Ljava/lang/String;ILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/ForbiddenMethodCall$Forbidden;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$Forbidden.copy:(Lio/github/detekt/tooling/api/FunctionMatcher;Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/ForbiddenMethodCall$Forbidden;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$Forbidden.equals:(Ljava/lang/Object;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$Forbidden.getReason:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        133
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$Forbidden.getValue:()Lio/github/detekt/tooling/api/FunctionMatcher;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        133
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$Forbidden.hashCode:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$Forbidden.toString:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$methods$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$methods$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$methods$2.invoke:(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        76,
        136,
        137,
        138,
        76,
        138,
        139,
        136,
        76
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall$methods$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        47,
        49,
        50,
        51,
        52,
        54,
        49,
        70,
        72,
        73,
        72,
        71,
        70,
        47
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        47,
        134
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.check:(Lorg/jetbrains/kotlin/psi/KtExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        112,
        113,
        114,
        116,
        113,
        118,
        136,
        137,
        138,
        118,
        138,
        139,
        141,
        136,
        118,
        112,
        112,
        119,
        112,
        121,
        122,
        142,
        122,
        122,
        122,
        123,
        124,
        126,
        123,
        128,
        129,
        122,
        122,
        131
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.getMethods$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.getMethods:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        70,
        1,
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.visitBinaryExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        85,
        86,
        87
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        80,
        81,
        82
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.visitCallableReferenceExpression:(Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        107,
        108,
        109
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.visitDotQualifiedExpression:(Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        90,
        91,
        92,
        94
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.visitPostfixExpression:(Lorg/jetbrains/kotlin/psi/KtPostfixExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        102,
        103,
        104
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenMethodCall.visitPrefixExpression:(Lorg/jetbrains/kotlin/psi/KtPrefixExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        97,
        98,
        99
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        88
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$filterForbiddenRules$lambda$1$$inlined$findDescendantOfType$default$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$filterForbiddenRules$lambda$1$$inlined$findDescendantOfType$default$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$filterForbiddenRules$lambda$1$$inlined$findDescendantOfType$default$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$filterForbiddenRules$lambda$1$$inlined$findDescendantOfType$default$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$filterForbiddenRules$lambda$1$$inlined$findDescendantOfType$default$2.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$filterForbiddenRules$lambda$1$$inlined$findDescendantOfType$default$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$formatMessage$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$formatMessage$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$formatMessage$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        81
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress$formatMessage$1.invoke:(Ljava/lang/String;)Ljava/lang/CharSequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        81
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        42,
        44,
        45,
        46,
        47,
        48,
        44,
        52,
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        42,
        92
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress.filterForbiddenRules:(Ljava/util/List;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        83,
        106,
        114,
        115,
        114,
        84,
        116,
        117,
        124,
        125,
        126,
        117,
        84,
        85,
        114,
        127,
        114,
        114,
        114,
        115,
        128,
        129,
        106,
        86
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress.formatMessage:(Ljava/util/List;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        77,
        78,
        80,
        77,
        81,
        77,
        81
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress.getRules$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress.getRules:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        52,
        1,
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenSuppress.visitAnnotationEntry:(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        55,
        56,
        57,
        60,
        58,
        59,
        94,
        59,
        59,
        59,
        60,
        59,
        60,
        61,
        60,
        61,
        95,
        104,
        105,
        95,
        61,
        62,
        61,
        62,
        60,
        63,
        63,
        58,
        64,
        64,
        65,
        66,
        67,
        68,
        69,
        66,
        65,
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        89
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid$isPartOfReturnTypeOfFunction$$inlined$anyDescendantOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid$isPartOfReturnTypeOfFunction$$inlined$anyDescendantOfType$1.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid$isPartOfReturnTypeOfFunction$1.<init>:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid$isPartOfReturnTypeOfFunction$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        80
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid$isPartOfReturnTypeOfFunction$1.invoke:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        80
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        52,
        55,
        90
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        42,
        44,
        45,
        46,
        47,
        48,
        44,
        52,
        55,
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        42,
        92
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.getIgnoreOverridden$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.getIgnoreOverridden:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        52,
        1,
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.getIgnoreUsageInGenerics$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.getIgnoreUsageInGenerics:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        55,
        1,
        55
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.isGenericArgument:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        87,
        108,
        87
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.isParameterTypeOfFunction:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        84,
        107,
        84
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.isPartOfOverriddenSignature:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        74,
        75,
        94,
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.isPartOfReturnTypeOfFunction:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        78,
        95,
        78,
        79,
        78,
        79,
        80,
        79,
        80,
        96,
        97,
        104,
        105,
        106,
        97,
        96,
        80,
        78,
        81
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ForbiddenVoid.visitTypeReference:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        58,
        60,
        61,
        62,
        64,
        65,
        67,
        70,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant$excludeAnnotatedFunction$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant$excludeAnnotatedFunction$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant$excludeAnnotatedFunction$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant$excludeAnnotatedFunction$2.invoke:(Ljava/util/List;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        61,
        136,
        137,
        138,
        61,
        61,
        138,
        139,
        136,
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant$excludedFunctions$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant$excludedFunctions$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant$excludedFunctions$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant$excludedFunctions$2.invoke:(Ljava/util/List;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        56,
        136,
        137,
        138,
        56,
        138,
        139,
        136,
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        50,
        53,
        56,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        40,
        42,
        43,
        44,
        45,
        46,
        42,
        50,
        53,
        56,
        60,
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        40,
        130
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.checkActualFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        107,
        108,
        110,
        111
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.checkContainingInterface:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        102,
        103
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.checkOverridableFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        95,
        96,
        98,
        99
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.getExcludeAnnotatedFunction$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.getExcludeAnnotatedFunction:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        60,
        1,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.getExcludedFunctions$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.getExcludedFunctions:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        56,
        1,
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.getIgnoreActualFunction$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.getIgnoreActualFunction:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        53,
        1,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.getIgnoreOverridableFunction$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.getIgnoreOverridableFunction:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        50,
        1,
        50
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.isConstantExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        120,
        121,
        123
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.isNotExcluded:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        114
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.isNotIgnored:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        92
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.isReturningAConstant:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.returnsConstant:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        127,
        128
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.visit:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        67,
        68,
        69,
        70,
        67,
        72,
        73
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstant.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        76,
        77,
        78,
        80,
        81,
        82,
        83,
        84,
        81,
        80,
        88,
        89
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstantKt.access$contains:(Ljava/lang/Iterable;Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.FunctionOnlyReturningConstantKt.contains:(Ljava/lang/Iterable;Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        133,
        136,
        137,
        133,
        137,
        138,
        133
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.JunkKt$findKtElementInParents$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.JunkKt$findKtElementInParents$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.JunkKt$findKtElementInParents$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        18
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.JunkKt$findKtElementInParents$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        18,
        21,
        18
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.JunkKt.findKtElementInParents:(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "F009",
      "lineNumbers" : [
        15,
        16,
        17,
        18,
        15
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContent.<init>:(Lorg/jetbrains/kotlin/psi/KtFile;Lkotlin/sequences/Sequence;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        5
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContent.component1:()Lorg/jetbrains/kotlin/psi/KtFile;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContent.component2:()Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContent.copy$default:(Lio/gitlab/arturbosch/detekt/rules/style/KtFileContent;Lorg/jetbrains/kotlin/psi/KtFile;Lkotlin/sequences/Sequence;ILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/KtFileContent;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContent.copy:(Lorg/jetbrains/kotlin/psi/KtFile;Lkotlin/sequences/Sequence;)Lio/gitlab/arturbosch/detekt/rules/style/KtFileContent;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContent.equals:(Ljava/lang/Object;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContent.getContent:()Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        5
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContent.getFile:()Lorg/jetbrains/kotlin/psi/KtFile;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        5
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContent.hashCode:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContent.toString:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T020",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.KtFileContentKt.toFileContent:(Lorg/jetbrains/kotlin/psi/KtFile;)Lio/gitlab/arturbosch/detekt/rules/style/KtFileContent;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        7
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements$countBreakAndReturnStatementsInLoop$1.<init>:(Lkotlin/jvm/internal/Ref$IntRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        66
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements$countBreakAndReturnStatementsInLoop$1.visitKtElement:(Lorg/jetbrains/kotlin/psi/KtElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        68,
        69,
        71,
        72,
        74,
        100,
        74,
        100,
        101,
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        42,
        44,
        45,
        46,
        47,
        49,
        44,
        53,
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        42,
        79
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements.countBreakAndReturnStatements:(Lorg/jetbrains/kotlin/psi/KtExpression;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements.countBreakAndReturnStatementsInLoop:(Lorg/jetbrains/kotlin/psi/KtElement;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        65,
        66,
        77
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements.getMaxJumpCount$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements.getMaxJumpCount:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        53,
        1,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatements.visitLoopExpression:(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        56,
        57,
        59,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatementsKt.access$getKeyword:(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatementsKt.getDoKeyword:(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        95
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatementsKt.getKeyword$annotations:(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatementsKt.getKeyword:(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        87,
        88,
        89,
        90,
        91,
        92
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.LoopWithTooManyJumpStatementsKt.getWhileKeyword:(Lorg/jetbrains/kotlin/psi/KtWhileExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        98
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        241
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber$ignoreNumbers$2.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/MagicNumber;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber$ignoreNumbers$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        86
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber$ignoreNumbers$2.invoke:(Ljava/util/List;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        87,
        247,
        248,
        249,
        87,
        249,
        250,
        247,
        87
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        86,
        91,
        94,
        97,
        100,
        103,
        106,
        109,
        112,
        115,
        118
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        73,
        75,
        76,
        77,
        78,
        82,
        75,
        86,
        91,
        94,
        97,
        100,
        103,
        106,
        109,
        112,
        115,
        118,
        73
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        73,
        245
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.access$parseAsDouble:(Lio/gitlab/arturbosch/detekt/rules/style/MagicNumber;Ljava/lang/String;)D" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreAnnotation$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreAnnotation:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        106,
        1,
        106
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreCompanionObjectPropertyDeclaration$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreCompanionObjectPropertyDeclaration:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        103,
        1,
        103
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreConstantDeclaration$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreConstantDeclaration:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        100,
        1,
        100
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreEnums$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreEnums:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        112,
        1,
        112
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreExtensionFunctions$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreExtensionFunctions:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        118,
        1,
        118
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreHashCodeFunction$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreHashCodeFunction:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        91,
        1,
        91
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreLocalVariableDeclaration$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreLocalVariableDeclaration:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        97,
        1,
        97
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreNamedArgument$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreNamedArgument:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        109,
        1,
        109
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreNumbers$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreNumbers:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        86,
        1,
        86
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnorePropertyDeclaration$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnorePropertyDeclaration:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        94,
        1,
        94
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreRanges$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIgnoreRanges:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        115,
        1,
        115
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.hasUnaryMinusPrefix:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        238,
        239
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isCompanionObjectProperty:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        230
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isConstantProperty:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        236,
        259,
        236
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isIgnoredByConfig:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        150,
        151,
        152,
        153,
        154,
        155,
        247,
        248,
        247,
        155,
        156,
        157,
        249,
        250,
        249,
        157,
        158,
        159,
        160,
        161,
        162
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isInCompanionObject:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        233,
        258,
        233
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isLocalProperty:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        225,
        255,
        225
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isNamedArgument:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        189,
        251,
        189,
        190,
        252,
        253,
        252,
        190
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isPartOfConstructorOrFunctionConstant:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        197,
        198,
        199,
        200,
        197
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isPartOfFunctionReturnConstant:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        194
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isPartOfHashCode:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        220,
        254,
        220,
        221
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isPartOfRange:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        205,
        206,
        207,
        208,
        209,
        211,
        207
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isProperty:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        228,
        256,
        228,
        257,
        228,
        228,
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.isSubjectOfExtensionFunction:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        216
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.normalizeForParsingAsDouble:(Ljava/lang/String;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        180,
        181,
        182,
        183,
        184,
        185,
        180
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.parseAsDouble:(Ljava/lang/String;)D" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        171,
        172,
        173,
        173,
        173,
        174,
        174,
        174,
        175,
        172
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.parseAsDoubleOrNull:(Ljava/lang/String;)Ljava/lang/Double;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        164,
        165,
        166,
        167,
        168
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MagicNumber.visitConstantExpression:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        121,
        122,
        124,
        125,
        127,
        130,
        131,
        132,
        134,
        131,
        137,
        138,
        139,
        140,
        141,
        142,
        143,
        140,
        139,
        148
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine$getReceiverEndPosition$$inlined$findDescendantOfType$default$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine$getReceiverEndPosition$$inlined$findDescendantOfType$default$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine$getReceiverEndPosition$$inlined$findDescendantOfType$default$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        258
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine$getReceiverEndPosition$$inlined$findDescendantOfType$default$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        258
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine$getReceiverEndPosition$$inlined$findDescendantOfType$default$2.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;Lorg/jetbrains/kotlin/psi/KtExpression;Lkotlin/jvm/internal/Ref$BooleanRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine$getReceiverEndPosition$$inlined$findDescendantOfType$default$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        505,
        507,
        508,
        510,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        40,
        41,
        42,
        43,
        44,
        45,
        41,
        49,
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        40,
        121
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.callOnNewLine:(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        93,
        94,
        96,
        97,
        99,
        100,
        101,
        99
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.countChainedCalls:(Lorg/jetbrains/kotlin/psi/KtExpression;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        75,
        76,
        77,
        78,
        80,
        81,
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        41
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.getMaxChainedCalls$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.getMaxChainedCalls:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        49,
        1,
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.getReceiverEndPosition$indexOfReceiverEnd:(Lorg/jetbrains/kotlin/psi/KtExpression;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        105
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.getReceiverEndPosition:(Lorg/jetbrains/kotlin/psi/KtExpression;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        106,
        107,
        123,
        125,
        123,
        127,
        128,
        129,
        107,
        117,
        118,
        117,
        117,
        119,
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.isReferenceToPackageOrClass:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        86,
        87,
        88,
        89
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxChainedCallsOnSameLine.visitQualifiedExpression:(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        52,
        54,
        57,
        59,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        64,
        63,
        72
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        126
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength$Companion.access$findFirstMeaningfulKtElementInParents:(Lio/gitlab/arturbosch/detekt/rules/style/MaxLineLength$Companion;Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        126
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength$Companion.findFirstMeaningfulKtElementInParents:(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        131,
        132,
        141,
        132,
        141,
        142,
        131
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        42,
        45,
        48,
        51,
        54,
        128,
        128
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        31,
        33,
        34,
        35,
        36,
        37,
        33,
        42,
        45,
        48,
        51,
        54,
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        31,
        135
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.access$getBLANK_OR_QUOTES$cp:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        30
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.containsIgnoredCommentStatement:(Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        119,
        121,
        121,
        122,
        122,
        123,
        123,
        121
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.containsIgnoredImportStatement:(Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        113,
        115,
        115
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.containsIgnoredPackageStatement:(Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        107,
        109,
        109
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.containsIgnoredRawString:(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        101,
        103
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.getExcludeCommentStatements$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.getExcludeCommentStatements:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        51,
        1,
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.getExcludeImportStatements$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.getExcludeImportStatements:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        48,
        1,
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.getExcludePackageStatements$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.getExcludePackageStatements:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        45,
        1,
        45
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.getExcludeRawStrings$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.getExcludeRawStrings:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        54,
        1,
        54
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        33
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.getMaxLineLength$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.getMaxLineLength:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        42,
        1,
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.isIgnoredStatement:(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        94,
        95,
        96,
        97,
        94
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.isValidLine:(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        86,
        88,
        89,
        87,
        90
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.visit:(Lio/gitlab/arturbosch/detekt/rules/style/KtFileContent;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        62,
        63,
        64,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        71,
        70,
        70,
        78,
        81,
        83
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLength.visitKtFile:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        57,
        58,
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLengthKt.access$isInsideRawString:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MaxLineLengthKt.isInsideRawString:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        138,
        141,
        138
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        39,
        41,
        42,
        43,
        44,
        45,
        41,
        48,
        50,
        51,
        52,
        51,
        53,
        51,
        54,
        51,
        55,
        51,
        50,
        58,
        59,
        39
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        39,
        146
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.canBeConst:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        101,
        102,
        104
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.cannotBeConstant:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        113,
        114,
        115,
        116,
        117,
        118,
        113
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.getDefaultRuleIdAliases:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        41
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.isActual:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.isBinaryExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        140,
        141,
        142,
        143,
        144,
        140
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.isConstantExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        125,
        126,
        127,
        128,
        129,
        130,
        131,
        132,
        133,
        125
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.isInObject:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        122
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.isJvmField:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        108,
        202,
        203,
        108,
        203,
        204,
        108,
        109,
        109
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.isParenthesizedExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        137
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.visitKtFile:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        64,
        65,
        66,
        148,
        157,
        158,
        148,
        67,
        159,
        160,
        67,
        160,
        161,
        159,
        68,
        162,
        170,
        171,
        170,
        68,
        170,
        172,
        170,
        170,
        170,
        171,
        173,
        174,
        162,
        68,
        65,
        69,
        70,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.visitObjectDeclaration:(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        74,
        75,
        77,
        78,
        175,
        184,
        185,
        175,
        79,
        186,
        187,
        79,
        187,
        188,
        186,
        80,
        189,
        197,
        198,
        197,
        80,
        197,
        199,
        197,
        197,
        197,
        198,
        200,
        201,
        189,
        80,
        77,
        81,
        82,
        83,
        84
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MayBeConstant.visitProperty:(Lorg/jetbrains/kotlin/psi/KtProperty;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        87,
        89,
        90,
        91,
        92,
        93,
        94,
        91,
        90,
        98
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$$inlined$compareBy$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/ModifierOrder;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$$inlined$compareBy$1.compare:(Ljava/lang/Object;Ljava/lang/Object;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        102,
        329,
        102,
        329,
        102,
        102
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$modifierString$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$modifierString$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$modifierString$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        95
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$modifierString$1.invoke:(Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Ljava/lang/CharSequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        95
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$modifiers$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$modifiers$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$modifiers$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        89
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder$visitModifierList$modifiers$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        89
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        55,
        57,
        58,
        59,
        60,
        61,
        57,
        65,
        66,
        67,
        66,
        67,
        66,
        68,
        66,
        68,
        66,
        68,
        66,
        68,
        66,
        68,
        66,
        69,
        66,
        70,
        66,
        71,
        66,
        72,
        66,
        73,
        66,
        74,
        66,
        75,
        66,
        76,
        66,
        76,
        66,
        76,
        66,
        77,
        66,
        78,
        66,
        79,
        66,
        80,
        66,
        81,
        66,
        82,
        66,
        65,
        55
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        55,
        111
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder.access$getOrder$p:(Lio/gitlab/arturbosch/detekt/rules/style/ModifierOrder;)[Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        54
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        57
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ModifierOrder.visitModifierList:(Lorg/jetbrains/kotlin/psi/KtModifierList;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        86,
        88,
        89,
        90,
        88,
        92,
        92,
        94,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        103,
        99,
        105,
        106,
        98,
        97,
        110
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter$hasNoStatements$$inlined$anyDescendantOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter$hasNoStatements$$inlined$anyDescendantOfType$1.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter$hasNoStatements$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter$hasNoStatements$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter$hasNoStatements$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter$hasNoStatements$1.invoke:(Lorg/jetbrains/kotlin/psi/KtBlockExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        117,
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        71,
        72,
        73,
        74,
        75,
        76,
        72,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter.getConfig:()Lio/gitlab/arturbosch/detekt/api/Config;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        72
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter.hasNoLineBreak:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        114
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter.hasNoStatements:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        117,
        125,
        126,
        133,
        134,
        135,
        126,
        125,
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineLambdaItParameter.visitLambdaExpression:(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        80,
        82,
        82,
        120,
        82,
        82,
        83,
        84,
        86,
        121,
        122,
        123,
        86,
        123,
        124,
        121,
        86,
        88,
        89,
        90,
        91,
        92,
        93,
        90,
        89,
        97,
        98,
        99,
        100,
        102,
        103,
        104,
        105,
        106,
        103,
        102,
        112
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.<init>:(ILjava/lang/String;I)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        107
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.component1:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.component2:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.component3:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.copy$default:(Lio/gitlab/arturbosch/detekt/rules/style/MultilineRawStringIndentation$checkContent$LineInformation;ILjava/lang/String;IILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/MultilineRawStringIndentation$checkContent$LineInformation;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.copy:(ILjava/lang/String;I)Lio/gitlab/arturbosch/detekt/rules/style/MultilineRawStringIndentation$checkContent$LineInformation;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.equals:(Ljava/lang/Object;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.getCurrentIndent:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        107
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.getLine:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        107
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.getLineNumber:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        107
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.hashCode:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation$checkContent$LineInformation.toString:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        63,
        66
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        54,
        55,
        56,
        57,
        58,
        59,
        55,
        63,
        66,
        54
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation.checkClosing:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;II)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        147,
        148,
        149,
        150,
        151,
        152,
        150,
        155,
        156,
        157,
        155,
        149,
        161,
        163
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation.checkContent:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;ILkotlin/ranges/IntRange;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        109,
        110,
        212,
        213,
        214,
        111,
        112,
        214,
        215,
        212,
        110,
        109,
        115,
        115,
        116,
        117,
        216,
        217,
        117,
        117,
        217,
        218,
        216,
        118,
        219,
        220,
        219,
        118,
        119,
        120,
        121,
        119,
        124,
        125,
        219,
        219,
        219,
        126,
        127,
        221,
        222,
        127,
        222,
        223,
        127,
        128,
        129,
        130,
        128,
        133,
        134,
        135,
        136,
        224,
        136,
        136,
        224,
        136,
        136,
        136,
        133,
        139,
        126,
        141
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation.checkIndentation:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;III)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        99,
        100,
        101
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation.getIndentSize$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation.getIndentSize:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        63,
        1,
        63
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        55
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation.getTrimmingMethods$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation.getTrimmingMethods:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        66,
        1,
        66
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentation.visitStringTemplateExpression:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        69,
        71,
        73,
        74,
        75,
        76,
        77,
        78,
        75,
        74,
        81,
        84,
        85,
        85,
        87,
        88,
        89,
        90,
        87,
        92
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.access$countIndent:(Ljava/lang/String;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.access$getLine:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;I)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.access$getLocation:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;Lio/gitlab/arturbosch/detekt/api/SourceLocation;Lio/gitlab/arturbosch/detekt/api/SourceLocation;)Lio/gitlab/arturbosch/detekt/api/Location;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.access$isSurroundedByLineBreaks:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.access$message:(II)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.access$report:(Lio/gitlab/arturbosch/detekt/api/Rule;Lorg/jetbrains/kotlin/psi/KtElement;Lio/gitlab/arturbosch/detekt/api/Location;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.countIndent:(Ljava/lang/String;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        187,
        234,
        235,
        187,
        235,
        236,
        236,
        234,
        238,
        187,
        187
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.getLine:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;I)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        190
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.getLocation:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;Lio/gitlab/arturbosch/detekt/api/SourceLocation;Lio/gitlab/arturbosch/detekt/api/SourceLocation;)Lio/gitlab/arturbosch/detekt/api/Location;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        194,
        195,
        196,
        197,
        196,
        199,
        200,
        201,
        200,
        203,
        204,
        205,
        206,
        207,
        208,
        204
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.isBlankOrLineBreak:(Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        181,
        231,
        181,
        182,
        232,
        182,
        232,
        233,
        182
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.isSurroundedByLineBreaks:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        175,
        176,
        212,
        213,
        214,
        176,
        214,
        215,
        216,
        213,
        218,
        176,
        219,
        220,
        176,
        220,
        221,
        177,
        222,
        223,
        177,
        223,
        224,
        222,
        227,
        177,
        228,
        229,
        177,
        229,
        230,
        176
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.isTabChar:(C)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        185
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.message:(II)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        171
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.MultilineRawStringIndentationKt.report:(Lio/gitlab/arturbosch/detekt/api/Rule;Lorg/jetbrains/kotlin/psi/KtElement;Lio/gitlab/arturbosch/detekt/api/Location;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        167,
        168
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NestedClassesVisibility.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.NestedClassesVisibility.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        40,
        42,
        43,
        44,
        45,
        46,
        42,
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NestedClassesVisibility.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        40,
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NestedClassesVisibility.checkDeclarations:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        56,
        57,
        67,
        76,
        77,
        67,
        58,
        78,
        79,
        58,
        79,
        80,
        78,
        59,
        81,
        59,
        81,
        82,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NestedClassesVisibility.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NestedClassesVisibility.isNoCompanionObj:(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NestedClassesVisibility.isNoEnum:(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NestedClassesVisibility.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        50,
        51,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NewLineAtEndOfFile.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.NewLineAtEndOfFile.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        24,
        26,
        27,
        28,
        29,
        30,
        26,
        24
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NewLineAtEndOfFile.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        24,
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NewLineAtEndOfFile.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        26
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NewLineAtEndOfFile.visitKtFile:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        34,
        35,
        35,
        37,
        38,
        36,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        44,
        43,
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NoTabs.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.NoTabs.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        22,
        24,
        25,
        26,
        27,
        28,
        24,
        22
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NoTabs.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        22,
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NoTabs.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        24
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NoTabs.isStringInterpolated:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiWhiteSpace;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        43,
        46,
        47,
        46,
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NoTabs.isTab:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiWhiteSpace;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        39
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NoTabs.visitWhiteSpace:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiWhiteSpace;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        32,
        33,
        34,
        36
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NullableBooleanCheck.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.NullableBooleanCheck.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        36,
        37,
        38,
        39,
        40,
        41,
        37,
        36
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NullableBooleanCheck.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        36,
        68
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NullableBooleanCheck.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        37
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NullableBooleanCheck.isBooleanConstant:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        67
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.NullableBooleanCheck.visitBinaryExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        45,
        46,
        47,
        50,
        51,
        53,
        50,
        49,
        55,
        56,
        57,
        58,
        59,
        56,
        55,
        64,
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsOwnMethodCall$$inlined$anyDescendantOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsOwnMethodCall$$inlined$anyDescendantOfType$1.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsOwnMethodCall$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/ObjectLiteralToLambda;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsOwnMethodCall$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsOwnMethodCall$1.invoke:(Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        72,
        73,
        74,
        73,
        72,
        75,
        72
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsThisReference$$inlined$anyDescendantOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsThisReference$$inlined$anyDescendantOfType$1.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsThisReference$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/ObjectLiteralToLambda;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsThisReference$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        66
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda$containsThisReference$1.invoke:(Lorg/jetbrains/kotlin/psi/KtThisExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        67
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        48,
        49,
        50,
        51,
        52,
        53,
        49,
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        48,
        111
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.access$isImplicitClassFor:(Lio/gitlab/arturbosch/detekt/rules/style/ObjectLiteralToLambda;Lorg/jetbrains/kotlin/resolve/scopes/receivers/ReceiverValue;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.containsMethodOf:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        82,
        83,
        82,
        85,
        86,
        85
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.containsOwnMethodCall:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        71,
        124,
        125,
        132,
        133,
        134,
        125,
        124,
        76
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.containsThisReference:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        66,
        113,
        114,
        121,
        122,
        123,
        114,
        113,
        68
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.getCouldBeSamInterface:(Lorg/jetbrains/kotlin/types/KotlinType;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        57
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.hasConvertibleMethod:(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        90,
        91,
        93,
        94,
        93
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.isImplicitClassFor:(Lorg/jetbrains/kotlin/resolve/scopes/receivers/ReceiverValue;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        79
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.singleNamedMethodOrNull:(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)Lorg/jetbrains/kotlin/psi/KtNamedFunction;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        63
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.singleSuperTypeOrNull:(Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/types/KotlinType;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ObjectLiteralToLambda.visitObjectLiteralExpression:(Lorg/jetbrains/kotlin/psi/KtObjectLiteralExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        98,
        99,
        101,
        102,
        104,
        103,
        104,
        103,
        104,
        105,
        104,
        105,
        104,
        103,
        106,
        108,
        110
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalAbstractKeyword.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalAbstractKeyword.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        37,
        39,
        40,
        41,
        42,
        44,
        39,
        37
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalAbstractKeyword.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        37,
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalAbstractKeyword.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        39
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalAbstractKeyword.handleAbstractKeyword:(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        60,
        61,
        62,
        60,
        60,
        63
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalAbstractKeyword.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        48,
        49,
        50,
        51,
        52,
        66,
        52,
        66,
        67,
        53,
        68,
        53,
        69,
        53,
        69,
        70,
        56,
        57
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalWhenBraces.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalWhenBraces.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        36,
        38,
        39,
        40,
        41,
        42,
        38,
        36
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalWhenBraces.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        36,
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalWhenBraces.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        38
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalWhenBraces.hasUnnecessaryBraces:(Lorg/jetbrains/kotlin/psi/KtBlockExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        56,
        57,
        64,
        57,
        57,
        57,
        58,
        65,
        58,
        65,
        66,
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalWhenBraces.isLambdaExpressionWithoutArrow:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.OptionalWhenBraces.visitWhenExpression:(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        46,
        47,
        48,
        49,
        52,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ProtectedMemberInFinalClass$DeclarationVisitor.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/ProtectedMemberInFinalClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T005",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ProtectedMemberInFinalClass$DeclarationVisitor.visitDeclaration:(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        73,
        75,
        76,
        78
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ProtectedMemberInFinalClass.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ProtectedMemberInFinalClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        38,
        40,
        41,
        42,
        43,
        45,
        40,
        48,
        38
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ProtectedMemberInFinalClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        38,
        80
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ProtectedMemberInFinalClass.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ProtectedMemberInFinalClass.hasModifiers:(Lorg/jetbrains/kotlin/psi/KtClass;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        63,
        64,
        65,
        66,
        67
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ProtectedMemberInFinalClass.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        54,
        55,
        56,
        82,
        56,
        82,
        83,
        56,
        57,
        84,
        57,
        84,
        85,
        59,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantExplicitType.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        48,
        50,
        51,
        52,
        53,
        54,
        50,
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantExplicitType.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        50
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantExplicitType.typeIsSameAs:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;Lorg/jetbrains/kotlin/types/KotlinType;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        76,
        77,
        78,
        79,
        80,
        81,
        83,
        86,
        87,
        88,
        90,
        93,
        94
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantExplicitType.visitProperty:(Lorg/jetbrains/kotlin/psi/KtProperty;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        59,
        60,
        61,
        62,
        64,
        65,
        66,
        67,
        68,
        69,
        71,
        72,
        73
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        143
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$isRedundant$$inlined$collectDescendantsOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Ljava/util/Collection;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$isRedundant$$inlined$collectDescendantsOfType$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        291
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$isRedundant$$inlined$collectDescendantsOfType$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        292,
        293,
        295
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$isRedundant$$inlined$collectDescendantsOfType$2.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$isRedundant$$inlined$collectDescendantsOfType$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$isRedundant$returnExpressions$1.<init>:(Lorg/jetbrains/kotlin/psi/KtExpression;Lio/gitlab/arturbosch/detekt/rules/style/RedundantHigherOrderMapUsage;Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$isRedundant$returnExpressions$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        128
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage$isRedundant$returnExpressions$1.invoke:(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        129
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        144,
        145,
        146,
        147
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        77,
        78,
        79,
        80,
        81,
        82,
        78,
        77
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        77,
        149
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        78
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage.isInheritorOf:(Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/name/FqName;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        121,
        151,
        152,
        121,
        152,
        153,
        121
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage.isRedundant:(Lorg/jetbrains/kotlin/psi/KtFunctionLiteral;Ljava/util/List;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        124,
        125,
        126,
        127,
        128,
        154,
        160,
        167,
        168,
        169,
        170,
        160,
        154,
        128,
        131,
        171,
        172,
        131,
        172,
        173,
        131
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage.isReferenceTo:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        135,
        136,
        138,
        135,
        136,
        135,
        140
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage.lambda:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lorg/jetbrains/kotlin/psi/KtLambdaExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        114,
        115,
        116,
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantHigherOrderMapUsage.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        87,
        89,
        90,
        91,
        92,
        94,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        105,
        106,
        107,
        108,
        105,
        110,
        111
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule$ChildrenVisitor.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/RedundantVisibilityModifierRule;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        118
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule$ChildrenVisitor.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        120,
        121,
        122,
        123,
        124,
        125,
        126,
        123,
        122,
        131
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule$ChildrenVisitor.visitProperty:(Lorg/jetbrains/kotlin/psi/KtProperty;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        134,
        135,
        136,
        137,
        138,
        139,
        140,
        137,
        136,
        145
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule$ClassVisitor.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/RedundantVisibilityModifierRule;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        102
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule$ClassVisitor.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        107,
        106,
        115
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        46,
        48,
        50,
        51,
        52,
        53,
        54,
        50,
        57,
        58,
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        46,
        147
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.access$isExplicitlyPublic:(Lio/gitlab/arturbosch/detekt/rules/style/RedundantVisibilityModifierRule;Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.access$isExplicitlyPublicNotOverridden:(Lio/gitlab/arturbosch/detekt/rules/style/RedundantVisibilityModifierRule;Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.getDefaultRuleIdAliases:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        50
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.isExplicitApiModeActive:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        71,
        72,
        73
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.isExplicitlyPublic:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.isExplicitlyPublicNotOverridden:(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.visitDeclaration:(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        87,
        88,
        89,
        90,
        151,
        90,
        90,
        90,
        92,
        93,
        94,
        95,
        96,
        93,
        92,
        100
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.RedundantVisibilityModifierRule.visitKtFile:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        77,
        78,
        79,
        149,
        80,
        81,
        82,
        149,
        150,
        84
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1$2.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1.<init>:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lkotlin/coroutines/Continuation;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        15,
        16,
        17,
        45,
        18,
        19,
        15,
        19,
        20,
        46,
        47,
        48,
        55,
        56,
        57,
        48,
        46,
        58,
        20,
        21,
        22,
        15,
        24,
        45,
        59,
        17,
        25,
        15
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        277
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        277
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$2.<init>:(Lkotlin/jvm/functions/Function1;Ljava/util/Collection;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        291
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$2.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        292,
        293,
        295
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$3.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1$invoke$$inlined$collectDescendantsOfType$default$3.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        105
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$1.invoke:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        105,
        123,
        124,
        130,
        137,
        138,
        139,
        140,
        130,
        124,
        105
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$2.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/ReturnCount;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        106
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$countReturnStatements$2.invoke:(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        106
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$excludedFunctions$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$excludedFunctions$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$excludedFunctions$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$excludedFunctions$2.invoke:(Ljava/util/List;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        62,
        123,
        124,
        125,
        62,
        125,
        126,
        123,
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$isNamedReturnFromLambda$$inlined$parentsOfTypeUntil$default$1.<init>:(ZLorg/jetbrains/kotlin/psi/KtElement;Lkotlin/coroutines/Continuation;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$isNamedReturnFromLambda$$inlined$parentsOfTypeUntil$default$1.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$isNamedReturnFromLambda$$inlined$parentsOfTypeUntil$default$1.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$isNamedReturnFromLambda$$inlined$parentsOfTypeUntil$default$1.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount$isNamedReturnFromLambda$$inlined$parentsOfTypeUntil$default$1.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        13,
        14,
        15,
        16,
        17,
        13,
        19,
        21,
        13
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        59,
        62,
        65,
        68,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        49,
        51,
        52,
        53,
        54,
        55,
        51,
        59,
        62,
        65,
        68,
        71,
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        49,
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.access$countReturnStatements$isExcluded:(Lorg/jetbrains/kotlin/psi/KtReturnExpression;Lio/gitlab/arturbosch/detekt/rules/style/ReturnCount;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.countReturnStatements$isExcluded:(Lorg/jetbrains/kotlin/psi/KtReturnExpression;Lio/gitlab/arturbosch/detekt/rules/style/ReturnCount;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        96,
        97
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.countReturnStatements:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        99,
        100,
        123,
        133,
        102,
        99,
        105,
        106,
        107,
        134,
        135,
        107,
        136,
        107,
        135,
        137,
        105
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.getExcludeGuardClauses$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.getExcludeGuardClauses:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        71,
        1,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.getExcludeLabeled$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.getExcludeLabeled:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        65,
        1,
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.getExcludeReturnFromLambda$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.getExcludeReturnFromLambda:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        68,
        1,
        68
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.getExcludedFunctions$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.getExcludedFunctions:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        62,
        1,
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.getMax$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.getMax:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        59,
        1,
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.isNamedReturnFromLambda:(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        111,
        112,
        113,
        138,
        139,
        147,
        113,
        115
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.shouldBeIgnored:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        92
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCount.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        74,
        76,
        77,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        84,
        81,
        80,
        90
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCountKt.access$contains:(Ljava/lang/Iterable;Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ReturnCountKt.contains:(Ljava/lang/Iterable;Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        120,
        123,
        124,
        120,
        124,
        125,
        120
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SafeCast.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SafeCast.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        38,
        40,
        41,
        42,
        43,
        44,
        40,
        38
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SafeCast.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        38,
        82
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SafeCast.addReport:(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        80,
        81
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SafeCast.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SafeCast.isIdentifier:(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        69
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SafeCast.isIfElseNull:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        67
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SafeCast.isNullConstant:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        72,
        73
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SafeCast.singleExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        77,
        84,
        77
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SafeCast.visitIfExpression:(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        55,
        59,
        60,
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.Section.<init>:(I)V" : {
      "completeTestCount" : 3,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 3
      },
      "lineNumbers" : [
        152,
        153,
        155,
        156,
        157,
        153
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.Section.compareTo:(Lio/gitlab/arturbosch/detekt/rules/style/Section;)I" : {
      "completeTestCount" : 3,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 3
      },
      "lineNumbers" : [
        167
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.Section.compareTo:(Ljava/lang/Object;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        152
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.Section.getPriority:()I" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        153
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.Section.toDescription:()Ljava/lang/String;" : {
      "completeTestCount" : 4,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 4
      },
      "lineNumbers" : [
        159,
        160,
        161,
        162,
        163,
        164,
        165
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass$SerialVersionUIDFindings.<init>:(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        135,
        136,
        137,
        135
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass$SerialVersionUIDFindings.component1:()Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass$SerialVersionUIDFindings.component2:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass$SerialVersionUIDFindings.copy$default:(Lio/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass$SerialVersionUIDFindings;Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/String;ILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass$SerialVersionUIDFindings;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass$SerialVersionUIDFindings.copy:(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass$SerialVersionUIDFindings;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass$SerialVersionUIDFindings.equals:(Ljava/lang/Object;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass$SerialVersionUIDFindings.getIssueMsg:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        137
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass$SerialVersionUIDFindings.getViolatingElement:()Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        136
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass$SerialVersionUIDFindings.hashCode:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass$SerialVersionUIDFindings.toString:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        47,
        49,
        50,
        51,
        52,
        54,
        49,
        47
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        47,
        139
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.getIssueMessage:(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/String;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        120,
        121
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.hasLongAssignment:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        130,
        128,
        129,
        146,
        147,
        148,
        149,
        129,
        149,
        150,
        151,
        152,
        148,
        155,
        156,
        129,
        130,
        129,
        130,
        128,
        131,
        132,
        132,
        131
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.hasLongType:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        125
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.isImplementingSerializable:(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        95,
        141,
        142,
        95,
        142,
        143,
        95
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.isLongProperty:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        123
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.reportFinding:(Lio/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass$SerialVersionUIDFindings;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        85,
        86,
        87,
        88,
        89,
        86,
        85,
        92
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.searchSerialVersionUIDFinding$default:(Lio/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass;Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;ILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass$SerialVersionUIDFindings;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        97,
        99,
        97
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.searchSerialVersionUIDFinding:(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Lio/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass$SerialVersionUIDFindings;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        101,
        144,
        101,
        144,
        145,
        101,
        102,
        103,
        104,
        105,
        104,
        102,
        101,
        108,
        109,
        111,
        112,
        113,
        111,
        108
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        63,
        62,
        70,
        71,
        74
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SerialVersionUIDInSerializableClass.visitObjectDeclaration:(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        77,
        78,
        79,
        80,
        82
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$checkKtElementsDeclaration$$inlined$filterIsInstance$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$checkKtElementsDeclaration$$inlined$filterIsInstance$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$checkKtElementsDeclaration$$inlined$filterIsInstance$1.invoke:(Ljava/lang/Object;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        473
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$visitKtFile$$inlined$anyDescendantOfType$default$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$visitKtFile$$inlined$anyDescendantOfType$default$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$visitKtFile$$inlined$anyDescendantOfType$default$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        241
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$visitKtFile$$inlined$anyDescendantOfType$default$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        241
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$visitKtFile$$inlined$anyDescendantOfType$default$2.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration$visitKtFile$$inlined$anyDescendantOfType$default$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        38,
        40,
        41,
        42,
        43,
        44,
        40,
        38
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        38,
        96
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration.checkKtElementsDeclaration:(Lorg/jetbrains/kotlin/psi/KtImportList;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        75,
        110,
        75,
        76,
        77,
        78,
        80,
        81,
        82,
        83,
        82,
        80,
        86
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration.checkLinebreakAfterElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        89,
        90,
        111,
        112,
        90,
        112,
        113,
        90,
        91,
        92,
        95
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration.checkPackageDeclaration:(Lorg/jetbrains/kotlin/psi/KtImportList;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        61,
        62,
        63,
        64,
        65,
        63,
        69
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration.hasPackage:(Lorg/jetbrains/kotlin/psi/KtFile;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        58,
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration.isPackageDeclaration:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        72,
        72
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.SpacingAfterPackageDeclaration.visitKtFile:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        48,
        98,
        99,
        100,
        107,
        108,
        109,
        100,
        99,
        48,
        49,
        50,
        50,
        51,
        52,
        54,
        49,
        49,
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        167
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getParentExpressionAfterParenthesis$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getParentExpressionAfterParenthesis$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getParentExpressionAfterParenthesis$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        153
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getParentExpressionAfterParenthesis$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        153
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getRootExpression$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getRootExpression$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getRootExpression$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        156
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getRootExpression$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/NavigatablePsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        162,
        163
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        145
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$1.invoke:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        146
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        147
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$2.invoke:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        148
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$getStringSequence$1.<init>:(Lorg/jetbrains/kotlin/psi/KtElement;Lkotlin/coroutines/Continuation;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$getStringSequence$1.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$getStringSequence$1.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$getStringSequence$1.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$getStringSequenceExcludingRawString$getStringSequence$1.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        133,
        134,
        135,
        133,
        135,
        136,
        137,
        138,
        133,
        139,
        137,
        137,
        140,
        141,
        133,
        142,
        140,
        140,
        144,
        133
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$visitStringTemplateExpression$hasNoViolations$1$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/StringShouldBeRawString;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$visitStringTemplateExpression$hasNoViolations$1$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        105
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$visitStringTemplateExpression$hasNoViolations$1$1.invoke:(Lkotlin/text/MatchResult;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        106
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$visitStringTemplateExpression$hasNoViolations$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/StringShouldBeRawString;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$visitStringTemplateExpression$hasNoViolations$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        104
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString$visitStringTemplateExpression$hasNoViolations$1.invoke:(Ljava/lang/String;)Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        105
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        67,
        70,
        168,
        168,
        169,
        170,
        171,
        170,
        169,
        173,
        173
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        58,
        59,
        60,
        61,
        62,
        63,
        59,
        67,
        70,
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.access$getIgnoredCharacters:(Lio/gitlab/arturbosch/detekt/rules/style/StringShouldBeRawString;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.access$getREGEX_FOR_ESCAPE_CHARS$cp:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.access$getStringSequenceExcludingRawString$getStringSequence:(Lorg/jetbrains/kotlin/psi/KtElement;)Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.getIgnoredCharacters$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.getIgnoredCharacters:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        70,
        1,
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.getLeftMostElementOfLeftSubtree:(Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        74,
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.getMaxEscapedCharacterCount$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.getMaxEscapedCharacterCount:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        67,
        1,
        67
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.getParentExpressionAfterParenthesis:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        153
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.getRightMostElementOfRightSubtree:(Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        80,
        81
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.getRootExpression:(Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        164,
        156,
        157,
        158,
        156,
        164,
        156,
        164,
        156
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.getStringSequenceExcludingRawString$getStringSequence:(Lorg/jetbrains/kotlin/psi/KtElement;)Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        133,
        144
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.getStringSequenceExcludingRawString:(Lorg/jetbrains/kotlin/psi/KtElement;)Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        145,
        147,
        145
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.isPivotElementInTheTree:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;Lorg/jetbrains/kotlin/psi/KtElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        124,
        125,
        126,
        128,
        125
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StringShouldBeRawString.visitStringTemplateExpression:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        85,
        87,
        177,
        87,
        89,
        90,
        93,
        93,
        94,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        108,
        104,
        109,
        110,
        111,
        112,
        113,
        114,
        111,
        110,
        119
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StyleGuideProvider.<init>:()V" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T005",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        17,
        20,
        18
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StyleGuideProvider.getRuleSetId:()Ljava/lang/String;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        20
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.StyleGuideProvider.instance:(Lio/gitlab/arturbosch/detekt/api/Config;)Lio/gitlab/arturbosch/detekt/api/RuleSet;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        23,
        24,
        26,
        27,
        26,
        28,
        26,
        29,
        26,
        30,
        26,
        31,
        26,
        32,
        26,
        33,
        26,
        34,
        26,
        35,
        26,
        36,
        26,
        37,
        26,
        38,
        26,
        39,
        26,
        40,
        26,
        41,
        26,
        42,
        26,
        43,
        26,
        44,
        26,
        45,
        26,
        46,
        26,
        47,
        26,
        48,
        26,
        49,
        26,
        50,
        26,
        51,
        26,
        52,
        26,
        53,
        26,
        54,
        26,
        55,
        26,
        56,
        26,
        57,
        26,
        58,
        26,
        59,
        26,
        60,
        26,
        61,
        26,
        62,
        26,
        63,
        26,
        64,
        26,
        65,
        26,
        66,
        26,
        67,
        26,
        68,
        26,
        69,
        26,
        70,
        26,
        71,
        26,
        72,
        26,
        73,
        26,
        74,
        26,
        75,
        26,
        76,
        26,
        77,
        26,
        78,
        26,
        79,
        26,
        80,
        26,
        81,
        26,
        82,
        26,
        83,
        26,
        84,
        26,
        85,
        26,
        86,
        26,
        87,
        26,
        88,
        26,
        89,
        26,
        90,
        26,
        91,
        26,
        92,
        26,
        93,
        26,
        94,
        26,
        95,
        26,
        96,
        26,
        97,
        26,
        98,
        26,
        99,
        26,
        100,
        26,
        101,
        26,
        102,
        26,
        103,
        26,
        104,
        26,
        105,
        26,
        106,
        26,
        107,
        26,
        108,
        26,
        109,
        26,
        110,
        26,
        111,
        26,
        112,
        26,
        113,
        26,
        25,
        23,
        115
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        252
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1$2.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        261
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        263,
        264,
        265,
        266,
        269,
        504,
        269,
        270,
        272
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1.<init>:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lkotlin/coroutines/Continuation;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        15,
        16,
        17,
        45,
        18,
        19,
        15,
        19,
        20,
        46,
        47,
        48,
        55,
        56,
        57,
        48,
        46,
        58,
        20,
        21,
        22,
        15,
        24,
        45,
        59,
        17,
        25,
        15
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1$1.<init>:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        69
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1$1.invoke:(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        70,
        89,
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1$invoke$$inlined$collectDescendantsOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Ljava/util/Collection;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1$invoke$$inlined$collectDescendantsOfType$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        291
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1$invoke$$inlined$collectDescendantsOfType$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        292,
        293,
        295
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1$invoke$$inlined$collectDescendantsOfType$2.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1$invoke$$inlined$collectDescendantsOfType$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1.<init>:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        68
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount$visitNamedFunction$countOfThrows$1.invoke:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lkotlin/sequences/Sequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        69,
        89,
        95,
        102,
        103,
        104,
        105,
        95,
        89,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        53,
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        43,
        45,
        46,
        47,
        48,
        49,
        45,
        53,
        56,
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        43,
        87
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount.getExcludeGuardClauses$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount.getExcludeGuardClauses:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        56,
        1,
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        45
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount.getMax$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount.getMax:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        53,
        1,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.ThrowsCount.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        59,
        60,
        61,
        62,
        89,
        99,
        64,
        61,
        67,
        68,
        73,
        67,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        80,
        81,
        80,
        81,
        80,
        77,
        76,
        86
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrailingWhitespace.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrailingWhitespace.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        17,
        19,
        20,
        21,
        22,
        23,
        19,
        17
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrailingWhitespace.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        17,
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrailingWhitespace.countTrailingWhitespace:(Ljava/lang/String;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        55,
        69,
        70,
        55,
        70,
        71,
        69,
        74,
        55
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrailingWhitespace.createMessage:(I)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrailingWhitespace.findFirstKtElementInParentsOrNull:(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        61,
        62,
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrailingWhitespace.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        19
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrailingWhitespace.visit:(Lio/gitlab/arturbosch/detekt/rules/style/KtFileContent;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        32,
        33,
        66,
        67,
        67,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        42,
        41,
        40,
        40,
        47,
        50,
        51,
        67,
        68,
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrailingWhitespace.visitKtFile:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        27,
        28,
        29
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawString.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawString.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        51,
        52,
        53,
        54,
        55,
        56,
        52,
        60,
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawString.getConfig:()Lio/gitlab/arturbosch/detekt/api/Config;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawString.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawString.getTrimmingMethods$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawString.getTrimmingMethods:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        60,
        1,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawString.visitStringTemplateExpression:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        63,
        65,
        66,
        67,
        69,
        70,
        71,
        72,
        73,
        70,
        69,
        77
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawStringKt.access$isExpectedAsConstant:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawStringKt.isExpectedAsConstant:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        98,
        100,
        119,
        100,
        120,
        100,
        100,
        100,
        101,
        104,
        103,
        121,
        103,
        104,
        103,
        104,
        120,
        104,
        104,
        104,
        103,
        105,
        108,
        107,
        122,
        107,
        108,
        107,
        108,
        120,
        108,
        108,
        108,
        107,
        109,
        123,
        109,
        110,
        112
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawStringKt.isRawStringWithLineBreak:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        81,
        115,
        82,
        116,
        82,
        83,
        115,
        117,
        84
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.TrimMultilineRawStringKt.isTrimmed:(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;Ljava/util/List;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        88,
        87,
        88,
        87,
        88,
        89,
        88,
        89,
        118,
        89,
        90,
        89,
        90,
        91,
        90,
        91,
        88,
        87,
        93
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        120
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals$acceptableDecimalLength$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals$acceptableDecimalLength$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals$acceptableDecimalLength$2.invoke:(I)Ljava/lang/Integer;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals$acceptableDecimalLength$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals$acceptableLength$2.<init>:(Ljava/lang/Object;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals$acceptableLength$2.get:()Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        46,
        51,
        54,
        121,
        121
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        34,
        36,
        37,
        38,
        39,
        41,
        36,
        46,
        51,
        54,
        56,
        56,
        34
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        34,
        127
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.access$getAcceptableDecimalLength:(Lio/gitlab/arturbosch/detekt/rules/style/UnderscoresInNumericLiterals;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        34
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.checkNormalized:(Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtConstantExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        64,
        65,
        67,
        68,
        71,
        73,
        74,
        77,
        77,
        78,
        79,
        80,
        78,
        83
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.doReport:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        115,
        116
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.getAcceptableDecimalLength$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.getAcceptableDecimalLength:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        46,
        1,
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.getAcceptableLength$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.getAcceptableLength:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        51,
        1,
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.getAllowNonStandardGrouping$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.getAllowNonStandardGrouping:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        54,
        1,
        54
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        36
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.hasNonStandardGrouping:(Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        118,
        118
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.isNotDecimalNumber:(Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        86,
        87,
        86
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.isSerialUidProperty:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        91,
        92,
        93
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.isSerializable:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        97,
        98,
        99,
        102,
        101,
        102,
        101,
        102,
        103,
        102,
        103,
        129,
        130,
        103,
        130,
        131,
        103,
        102,
        101
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.normalizeForMatching:(Ljava/lang/String;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        107,
        108,
        109,
        110,
        111,
        107
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnderscoresInNumericLiterals.visitConstantExpression:(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        59,
        60,
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass$excludeAnnotatedClasses$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass$excludeAnnotatedClasses$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass$excludeAnnotatedClasses$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        77
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass$excludeAnnotatedClasses$2.invoke:(Ljava/util/List;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        78,
        150,
        151,
        152,
        78,
        78,
        152,
        153,
        150,
        78
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        77
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        62,
        64,
        65,
        68,
        69,
        70,
        71,
        72,
        68,
        77,
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        62,
        148
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.check:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        98,
        99,
        100,
        101,
        102,
        102,
        103,
        104,
        105,
        107,
        109
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.checkMembers:(Lorg/jetbrains/kotlin/psi/KtClass;Ljava/util/List;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        115,
        150,
        151,
        152,
        153,
        115,
        153,
        154,
        156,
        159,
        115,
        116,
        117,
        118,
        119,
        160,
        161,
        119,
        161,
        162,
        119,
        120,
        121,
        122,
        124
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.getExcludeAnnotatedClasses$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.getExcludeAnnotatedClasses:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        77,
        1,
        77
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        67
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.hasConstructorParameter:(Lorg/jetbrains/kotlin/psi/KtClass;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        129,
        129
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.hasInheritedMember:(Lorg/jetbrains/kotlin/psi/KtClass;Z)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        132,
        133,
        134,
        136,
        137,
        137,
        177,
        178,
        138,
        178,
        179,
        132
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.isAnyParentAbstract:(Lorg/jetbrains/kotlin/psi/KtClass;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        146,
        145,
        146,
        145,
        146,
        147,
        146,
        147,
        180,
        181,
        147,
        181,
        182,
        147,
        146,
        145,
        147
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.members:(Lorg/jetbrains/kotlin/psi/KtClass;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        126,
        163,
        172,
        173,
        163,
        126,
        127,
        174,
        175,
        127,
        175,
        176,
        174,
        127,
        126,
        127
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        93,
        94,
        95
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAbstractClass.visitKtFile:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        84,
        85,
        86,
        87,
        84,
        89,
        90
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget$UseSiteTarget.$values:()[Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryAnnotationUseSiteTarget$UseSiteTarget;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget$UseSiteTarget.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        69,
        70,
        71,
        69,
        73,
        74,
        75,
        73
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget$UseSiteTarget.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        68
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget$UseSiteTarget.getMessage:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        68
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget$UseSiteTarget.getUseSiteTarget:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        68
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget$UseSiteTarget.valueOf:(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryAnnotationUseSiteTarget$UseSiteTarget;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget$UseSiteTarget.values:()[Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryAnnotationUseSiteTarget$UseSiteTarget;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        31,
        33,
        34,
        35,
        36,
        37,
        33,
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        31,
        78
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget.checkForUnnecessaryUseSiteTarget:(Ljava/util/List;Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryAnnotationUseSiteTarget$UseSiteTarget;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        53,
        82,
        54,
        55,
        56,
        58,
        82,
        83,
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        33
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget.report:(Lorg/jetbrains/kotlin/psi/KtAnnotationUseSiteTarget;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        62,
        63,
        62,
        62,
        65,
        66
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget.visitPrimaryConstructor:(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        41,
        80,
        42,
        43,
        80,
        81,
        44,
        45
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryAnnotationUseSiteTarget.visitProperty:(Lorg/jetbrains/kotlin/psi/KtProperty;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        48,
        49,
        50
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply$hasOnlyOneMemberAccessStatement$$inlined$collectDescendantsOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Ljava/util/Collection;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply$hasOnlyOneMemberAccessStatement$$inlined$collectDescendantsOfType$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        291
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply$hasOnlyOneMemberAccessStatement$$inlined$collectDescendantsOfType$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        292,
        293,
        295
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply$hasOnlyOneMemberAccessStatement$$inlined$collectDescendantsOfType$2.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply$hasOnlyOneMemberAccessStatement$$inlined$collectDescendantsOfType$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply$hasOnlyOneMemberAccessStatement$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryApply;Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply$hasOnlyOneMemberAccessStatement$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        93
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply$hasOnlyOneMemberAccessStatement$1.invoke:(Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        94,
        95,
        96,
        98,
        95
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        47,
        49,
        50,
        51,
        52,
        53,
        49,
        47
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply.hasOnlyOneMemberAccessStatement:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        77,
        78,
        80,
        81,
        84,
        85,
        86,
        87,
        89,
        92,
        93,
        108,
        114,
        121,
        122,
        123,
        124,
        114,
        108,
        100,
        93
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply.isApplyExpr:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        72,
        73
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApply.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        57,
        59,
        60,
        61,
        63,
        64,
        66,
        63,
        68,
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApplyKt.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        106
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryApplyKt.access$getAPPLY_FQ_NAME$p:()Lorg/jetbrains/kotlin/name/FqName;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks$visitKtElement$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryBackticks;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks$visitKtElement$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks$visitKtElement$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        40
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        60,
        69,
        70,
        71,
        60,
        71,
        70,
        72,
        69,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        30,
        31,
        32,
        33,
        34,
        35,
        31,
        30
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        30,
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks.access$hasUnnecessaryBackticks:(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryBackticks;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        30
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks.hasUnnecessaryBackticks:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        46,
        48,
        49,
        50,
        52,
        66,
        52,
        51,
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks.isKeyword:(Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        57,
        67,
        57,
        67,
        68,
        57
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryBackticks.visitKtElement:(Lorg/jetbrains/kotlin/psi/KtElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        39,
        40,
        41,
        64,
        41,
        64,
        65,
        42,
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        89
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall.<init>:(Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        87
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall.<init>:(Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        87
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall.component1:()Lorg/jetbrains/kotlin/name/FqName;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall.component2:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall.copy$default:(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryFilter$SecondCall;Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;ILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryFilter$SecondCall;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall.copy:(Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryFilter$SecondCall;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall.equals:(Ljava/lang/Object;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall.getCorrectOperator:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        87
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall.getFqName:()Lorg/jetbrains/kotlin/name/FqName;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        87
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall.hashCode:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter$SecondCall.toString:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        90,
        91,
        92,
        91,
        90,
        95,
        96,
        97,
        96,
        98,
        96,
        99,
        96,
        100,
        96,
        95
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        47,
        49,
        50,
        51,
        52,
        53,
        49,
        47
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        47,
        103
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter.isCalling:(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/util/List;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        79,
        80,
        107,
        108,
        80,
        108,
        109,
        107,
        80,
        81,
        82
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter.isCalling:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/name/FqName;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        85
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter.lambda:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lorg/jetbrains/kotlin/psi/KtLambdaExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        74,
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryFilter.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        57,
        59,
        60,
        62,
        63,
        65,
        105,
        66,
        67,
        68,
        70,
        105,
        106,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInheritance.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInheritance.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        23,
        25,
        26,
        27,
        28,
        29,
        25,
        23
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInheritance.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        23,
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInheritance.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        25
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInheritance.report:(Lorg/jetbrains/kotlin/psi/KtClassOrObject;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        42,
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInheritance.visitClassOrObject:(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        33,
        34,
        35,
        36,
        39
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass$visitReferenceExpression$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryInnerClass;Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass$visitReferenceExpression$1.invoke:()Lorg/jetbrains/kotlin/name/ClassId;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        80
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass$visitThisExpression$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryInnerClass;Lorg/jetbrains/kotlin/psi/KtThisExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass$visitThisExpression$1.invoke:()Lorg/jetbrains/kotlin/name/ClassId;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        84
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        43,
        45,
        45,
        46,
        48,
        49,
        50,
        51,
        52,
        48,
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        43,
        125
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.access$findResolvedContainingClassId:(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryInnerClass;Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)Lorg/jetbrains/kotlin/name/ClassId;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        41
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.access$referenceClassId:(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryInnerClass;Lorg/jetbrains/kotlin/psi/KtThisExpression;)Lorg/jetbrains/kotlin/name/ClassId;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        41
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.checkForOuterUsage:(Lkotlin/jvm/functions/Function0;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        98,
        99,
        101,
        106,
        127,
        128,
        129,
        106,
        129,
        130,
        131,
        133,
        106,
        107,
        108,
        109,
        134,
        109,
        134,
        135,
        111
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.findParentClasses:(Lorg/jetbrains/kotlin/psi/KtClass;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        89,
        90,
        91,
        92,
        93,
        95,
        89,
        95
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.findResolvedContainingClassId:(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)Lorg/jetbrains/kotlin/name/ClassId;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        115,
        114,
        115,
        114,
        115
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.referenceClassId:(Lorg/jetbrains/kotlin/psi/KtThisExpression;)Lorg/jetbrains/kotlin/name/ClassId;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        119,
        118,
        119,
        118,
        119,
        120,
        119,
        120,
        121,
        120,
        121,
        122,
        121,
        122,
        123,
        122,
        123,
        119,
        118
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        56,
        57,
        58,
        63,
        65,
        65,
        66,
        67,
        68,
        69,
        70,
        67,
        66,
        73,
        75,
        76
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.visitReferenceExpression:(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        79,
        80,
        81
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryInnerClass.visitThisExpression:(Lorg/jetbrains/kotlin/psi/KtThisExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        84,
        85
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLet$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        87
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLet$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLet.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        88
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLet.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        48,
        50,
        51,
        52,
        53,
        54,
        50,
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLet.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        50
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLet.report:(Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        84,
        85
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLet.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        58,
        60,
        62,
        63,
        64,
        66,
        67,
        68,
        69,
        70,
        72,
        73,
        77,
        78,
        81
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt$countLambdaParameterReference$1$1.<init>:(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/descriptors/VariableDescriptor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt$countLambdaParameterReference$1$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        127
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt$countLambdaParameterReference$1$1.invoke:(Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        128
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt$countLambdaParameterReference$lambda$2$$inlined$collectDescendantsOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Ljava/util/Collection;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt$countLambdaParameterReference$lambda$2$$inlined$collectDescendantsOfType$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        291
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt$countLambdaParameterReference$lambda$2$$inlined$collectDescendantsOfType$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        292,
        293,
        295
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt$countLambdaParameterReference$lambda$2$$inlined$collectDescendantsOfType$2.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt$countLambdaParameterReference$lambda$2$$inlined$collectDescendantsOfType$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt.access$canBeReplacedWithCall:(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt.access$countLambdaParameterReference:(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt.access$inCallChains:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt.canBeReplacedWithCall:(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        98,
        100,
        101,
        102,
        100,
        103,
        100,
        105,
        106,
        107,
        109,
        110,
        111,
        133,
        134,
        135,
        111,
        135,
        136,
        133,
        106,
        113,
        137,
        138,
        113,
        138,
        139,
        113
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt.countLambdaParameterReference:(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        117,
        118,
        120,
        121,
        123,
        120,
        126,
        127,
        140,
        146,
        153,
        154,
        155,
        156,
        146,
        140,
        129,
        129,
        126,
        126
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryLetKt.inCallChains:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        93,
        94
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion$firstNonParenParent$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion$firstNonParenParent$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion$firstNonParenParent$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        151
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion$firstNonParenParent$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        151
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        85
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion.access$isBinaryOperationPrecedenceUnclearWithParent:(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryParentheses$Companion;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        85
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion.access$isUnaryOperationPrecedenceUnclear:(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryParentheses$Companion;Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        85
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion.binaryOp:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/tree/IElementType;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        143,
        137,
        138,
        139,
        193,
        139,
        139,
        139,
        140,
        141,
        142,
        137,
        143,
        137,
        143,
        137
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion.firstNonParenParent:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        151,
        152,
        194,
        152,
        194,
        195,
        151
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion.getChildToUnclearPrecedenceParentsMapping$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion.isBinaryOperationPrecedenceUnclearWithParent:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        160,
        161,
        163
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses$Companion.isUnaryOperationPrecedenceUnclear:(Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        171,
        172,
        174,
        175,
        176,
        175,
        174,
        177,
        179,
        183,
        184,
        183,
        185,
        183,
        186,
        183,
        187,
        183,
        182
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        65,
        130,
        94,
        95,
        96,
        95,
        97,
        95,
        94,
        100,
        101,
        102,
        101,
        100,
        94,
        105,
        106,
        107,
        106,
        109,
        106,
        105,
        94,
        113,
        114,
        116,
        114,
        113,
        94,
        120,
        94,
        122,
        193,
        122,
        123,
        194,
        123,
        123,
        194,
        195,
        124,
        122,
        125,
        196,
        197,
        198,
        125,
        126,
        199,
        200,
        201,
        127,
        127,
        202,
        203,
        127,
        203,
        204,
        202,
        206,
        127,
        201,
        200,
        207,
        199,
        126,
        198,
        208,
        197,
        210,
        196,
        130
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        53,
        55,
        56,
        57,
        58,
        59,
        55,
        65,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        53,
        191
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses.access$getChildToUnclearPrecedenceParentsMapping$cp:()Ljava/util/Map;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses.getAllowForUnclearPrecedence$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses.getAllowForUnclearPrecedence:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        65,
        1,
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        55
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnnecessaryParentheses.visitParenthesizedExpression:(Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        68,
        70,
        72,
        74,
        76,
        78,
        80,
        81,
        80,
        82,
        83
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        31,
        33,
        34,
        35,
        36,
        37,
        33,
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        31,
        69
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        33
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo.isMinusOneExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        58,
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo.report:(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        62,
        63
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo.visitBinaryExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        41,
        42,
        44,
        46,
        47
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UntilInsteadOfRangeTo.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        50,
        51,
        53,
        55,
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor$getUnusedReports$propertyDelegateResultingDescriptors$2.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/UnusedFunctionVisitor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor$getUnusedReports$propertyDelegateResultingDescriptors$2.invoke:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        84
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.<init>:(Lkotlin/text/Regex;Lorg/jetbrains/kotlin/resolve/BindingContext;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        75,
        73,
        74,
        77,
        77,
        78,
        78,
        79,
        79,
        80,
        80,
        72
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.access$getPropertyDelegates$p:(Lio/gitlab/arturbosch/detekt/rules/style/UnusedFunctionVisitor;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        72
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.access$resultingDescriptors:(Lio/gitlab/arturbosch/detekt/rules/style/UnusedFunctionVisitor;Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        72
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.collectFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        171,
        172,
        173,
        275,
        276,
        277,
        173,
        173,
        277,
        278,
        279,
        281,
        276,
        173,
        175
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.getInvokeReferences:(Ljava/util/List;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        152,
        268,
        269,
        270,
        154,
        153,
        155,
        156,
        156,
        155,
        155,
        157,
        157,
        270,
        271,
        273,
        268,
        158
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.getUnusedReports$lambda$0:(Lkotlin/Lazy;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        84,
        84
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.getUnusedReports:(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        84,
        87,
        88,
        218,
        219,
        219,
        220,
        88,
        88,
        91,
        221,
        222,
        91,
        222,
        223,
        91,
        220,
        224,
        227,
        218,
        93,
        228,
        229,
        229,
        230,
        93,
        93,
        93,
        94,
        231,
        232,
        94,
        232,
        233,
        94,
        95,
        95,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        104,
        105,
        234,
        105,
        105,
        105,
        105,
        106,
        111,
        110,
        109,
        108,
        107,
        108,
        109,
        110,
        111,
        112,
        234,
        112,
        112,
        112,
        113,
        106,
        115,
        116,
        235,
        236,
        237,
        117,
        117,
        237,
        238,
        240,
        235,
        120,
        115,
        122,
        123,
        124,
        126,
        100,
        128,
        129,
        241,
        249,
        250,
        249,
        129,
        249,
        251,
        249,
        249,
        249,
        250,
        252,
        253,
        241,
        130,
        254,
        255,
        256,
        130,
        256,
        257,
        254,
        131,
        132,
        133,
        135,
        132,
        131,
        131,
        128,
        138,
        258,
        259,
        139,
        259,
        260,
        258,
        142,
        143,
        96,
        145,
        261,
        262,
        263,
        146,
        263,
        264,
        261,
        145,
        230,
        265,
        267,
        228,
        87
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.isDeclaredInsideAnInterface:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        168,
        274,
        168
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.resultingDescriptors:(Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        178,
        180,
        179,
        181,
        282,
        290,
        291,
        290,
        182,
        290,
        292,
        290,
        290,
        290,
        291,
        293,
        294,
        282,
        181
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        161,
        162,
        164,
        165
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.visitPropertyDelegate:(Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        187,
        188,
        189
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedFunctionVisitor.visitReferenceExpression:(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        197,
        198,
        199,
        200,
        201,
        202,
        203,
        204,
        205,
        206,
        207,
        295,
        296,
        297,
        207,
        207,
        297,
        298,
        299,
        301,
        296,
        207,
        210,
        212,
        198,
        213,
        198,
        214,
        302,
        303,
        304,
        214,
        214,
        304,
        305,
        306,
        308,
        303,
        214,
        215
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        164
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$fqNames$2.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/UnusedImports$UnusedImportsVisitor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$fqNames$2.invoke:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$handleKDoc$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$handleKDoc$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$handleKDoc$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        149
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$handleKDoc$1.invoke:(Lkotlin/text/MatchResult;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        149
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$namedReferencesAsString$2.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/UnusedImports$UnusedImportsVisitor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$namedReferencesAsString$2.invoke:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$staticReferencesAsString$2.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/UnusedImports$UnusedImportsVisitor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$staticReferencesAsString$2.invoke:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$unresolvedNamedReferencesAsString$2.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/UnusedImports$UnusedImportsVisitor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$unresolvedNamedReferencesAsString$2.invoke:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        74
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$visitImportList$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$visitImportList$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$visitImportList$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        108
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$visitImportList$1.invoke:(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        108
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$visitImportList$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$visitImportList$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$visitImportList$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        109
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor$visitImportList$2.invoke:(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        110,
        111,
        112,
        113,
        111
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.<init>:(Lorg/jetbrains/kotlin/resolve/BindingContext;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        51,
        54,
        54,
        55,
        55,
        56,
        56,
        58,
        61,
        64,
        74,
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.access$fqNameOrNull:(Lio/gitlab/arturbosch/detekt/rules/style/UnusedImports$UnusedImportsVisitor;Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)Lorg/jetbrains/kotlin/name/FqName;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.access$getNamedReferences$p:(Lio/gitlab/arturbosch/detekt/rules/style/UnusedImports$UnusedImportsVisitor;)Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.access$getStaticReferences$p:(Lio/gitlab/arturbosch/detekt/rules/style/UnusedImports$UnusedImportsVisitor;)Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.fqNameOrNull:(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)Lorg/jetbrains/kotlin/name/FqName;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        158,
        159,
        158,
        160
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.getFqNames:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        64,
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.getNamedReferencesAsString:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        58,
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.getStaticReferencesAsString:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        61,
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.getUnresolvedNamedReferencesAsString$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.getUnresolvedNamedReferencesAsString:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        74,
        74
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.handleKDoc:(Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        148,
        149,
        150,
        195,
        150,
        195,
        196,
        151,
        152,
        152,
        153,
        151,
        151,
        155
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.unusedImports$isFromSamePackage:(Lorg/jetbrains/kotlin/psi/KtImportDirective;Lio/gitlab/arturbosch/detekt/rules/style/UnusedImports$UnusedImportsVisitor;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        82
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.unusedImports$isNotUsed:(Lorg/jetbrains/kotlin/psi/KtImportDirective;Lio/gitlab/arturbosch/detekt/rules/style/UnusedImports$UnusedImportsVisitor;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        85,
        86,
        87,
        88,
        89,
        91,
        183,
        91,
        91,
        91,
        92,
        94,
        88
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.unusedImports:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        98,
        180,
        181,
        98,
        181,
        182,
        180,
        98,
        98
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.visitDeclaration:(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        134,
        136,
        186,
        137,
        187,
        138,
        188,
        189,
        190,
        138,
        190,
        189,
        191,
        188,
        139,
        192,
        139,
        192,
        193,
        141,
        142,
        186,
        194,
        136,
        144,
        145
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.visitImportList:(Lorg/jetbrains/kotlin/psi/KtImportList;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        107,
        108,
        109,
        115,
        107,
        116,
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.visitPackageDirective:(Lorg/jetbrains/kotlin/psi/KtPackageDirective;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        102,
        103,
        104
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports$UnusedImportsVisitor.visitReferenceExpression:(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        122,
        120,
        121,
        183,
        121,
        184,
        185,
        184,
        121,
        184,
        185,
        184,
        121,
        121,
        121,
        122,
        121,
        122,
        183,
        122,
        122,
        122,
        122,
        123,
        122,
        123,
        124,
        125,
        127,
        124,
        123,
        122,
        130,
        131
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        165,
        166,
        167,
        166,
        167,
        166,
        167,
        166,
        167,
        166,
        167,
        166,
        167,
        166,
        167,
        166,
        167,
        166,
        167,
        166,
        168,
        166,
        168,
        166,
        168,
        166,
        168,
        166,
        168,
        166,
        168,
        166,
        168,
        166,
        168,
        166,
        165,
        171,
        172,
        173,
        174
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        32,
        34,
        35,
        36,
        37,
        38,
        34,
        32
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports.access$getComponentNRegex$cp:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports.access$getKotlinDocBlockTagReferenceRegExp$cp:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports.access$getKotlinDocReferencesRegExp$cp:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports.access$getOperatorSet$cp:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports.access$getWhiteSpaceRegex$cp:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        34
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImports.visit:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        42,
        43,
        44,
        180,
        45,
        46,
        180,
        181,
        47,
        42,
        48,
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImportsKt.access$identifier:(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedImportsKt.identifier:(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        178
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter$allowedNames$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter$allowedNames$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter$allowedNames$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter$allowedNames$2.invoke:(Ljava/lang/String;)Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        60,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        48,
        50,
        52,
        53,
        54,
        55,
        56,
        52,
        60,
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        48,
        68
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter.getAllowedNames$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter.getAllowedNames:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        60,
        1,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter.getDefaultRuleIdAliases:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameter.visit:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        63,
        64,
        65,
        66,
        139,
        66,
        139,
        140,
        67
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor$collectParameters$2.<init>:(Ljava/util/Map;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        112
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor$collectParameters$2.visitProperty:(Lorg/jetbrains/kotlin/psi/KtProperty;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        114,
        115,
        116,
        118,
        119
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor$collectParameters$2.visitReferenceExpression:(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        122,
        123,
        125,
        126
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor.<init>:(Lkotlin/text/Regex;)V" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        70,
        72,
        72,
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor.collectParameters:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        104,
        104,
        105,
        143,
        106,
        107,
        108,
        110,
        143,
        144,
        105,
        112,
        129,
        130
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor.getUnusedReports:(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/util/List;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        75,
        139,
        140,
        141,
        76,
        141,
        142,
        139,
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor.isAllowedToHaveUnusedParameters:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        135,
        136
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor.isRelevant:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        132
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        87,
        88,
        90,
        91
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor.visitClassOrObject:(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        81,
        83,
        84
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedParameterVisitor.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        94,
        95,
        98,
        100,
        101
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor$registerAccess$3$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor$registerAccess$3$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor$registerAccess$3$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor$registerAccess$3$1.invoke:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        65,
        67,
        67,
        68,
        68,
        69,
        69,
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.checkReceiverForClassUsage:(Lorg/jetbrains/kotlin/psi/KtExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        174,
        173,
        174,
        173,
        174,
        175,
        174,
        175,
        246,
        175,
        175,
        175,
        176,
        175,
        176,
        246,
        176,
        176,
        174,
        177
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.getUnusedClasses:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        72,
        201,
        202,
        72,
        202,
        203,
        201,
        72
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.isUsed:(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        76,
        77,
        77,
        78,
        78,
        204,
        205,
        79,
        206,
        207,
        79,
        207,
        208,
        79,
        205,
        209,
        78
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.looksLikeAClassName:(Ljava/lang/String;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        187,
        187
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.registerAccess:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        105,
        225,
        105,
        105,
        109,
        108,
        109,
        108,
        109,
        110,
        109,
        110,
        225,
        110,
        110,
        109,
        113,
        114,
        115,
        116,
        117,
        118,
        226,
        119,
        121,
        122,
        226,
        227,
        123,
        113,
        113,
        124
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.visitAnnotationEntry:(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        99,
        100,
        101
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        154,
        225,
        154,
        154,
        154,
        155,
        156,
        230,
        238,
        239,
        238,
        156,
        238,
        240,
        238,
        238,
        238,
        239,
        241,
        242,
        230,
        157,
        243,
        157,
        243,
        244,
        158,
        159
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        84,
        85,
        87,
        88,
        87,
        88,
        210,
        218,
        219,
        218,
        88,
        218,
        220,
        218,
        218,
        218,
        219,
        221,
        222,
        210,
        88,
        89,
        88,
        89,
        223,
        89,
        223,
        224,
        87,
        90,
        91
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.visitDotQualifiedExpression:(Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        180,
        181,
        182
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.visitDoubleColonExpression:(Lorg/jetbrains/kotlin/psi/KtDoubleColonExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        162,
        163,
        165,
        164,
        245,
        164,
        165,
        164,
        165,
        166,
        165,
        166,
        246,
        166,
        166,
        166,
        167,
        166,
        167,
        246,
        167,
        167,
        165,
        169,
        170
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.visitFunctionType:(Lorg/jetbrains/kotlin/psi/KtFunctionType;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        144,
        225,
        144,
        144,
        144,
        145,
        146
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.visitImportDirective:(Lorg/jetbrains/kotlin/psi/KtImportDirective;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        94,
        95,
        96
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        132,
        225,
        132,
        132,
        132,
        133,
        134
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.visitObjectDeclaration:(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        137,
        228,
        138,
        225,
        138,
        138,
        138,
        139,
        228,
        229,
        137,
        140,
        141
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.visitParameter:(Lorg/jetbrains/kotlin/psi/KtParameter;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        127,
        225,
        127,
        127,
        127,
        128,
        129
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass$UnusedClassVisitor.visitProperty:(Lorg/jetbrains/kotlin/psi/KtProperty;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        149,
        225,
        149,
        149,
        149,
        150,
        151
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        42,
        44,
        46,
        47,
        48,
        49,
        50,
        46,
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        42,
        189
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass.getDefaultRuleIdAliases:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClass.visit:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        54,
        56,
        57,
        59,
        201,
        60,
        61,
        201,
        202,
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClassKt.access$orInnerType:(Lorg/jetbrains/kotlin/psi/KtTypeElement;)Lorg/jetbrains/kotlin/psi/KtTypeElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClassKt.access$orInnerType:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClassKt.orInnerType:(Lorg/jetbrains/kotlin/psi/KtTypeElement;)Lorg/jetbrains/kotlin/psi/KtTypeElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        199
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateClassKt.orInnerType:(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        194
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember$allowedNames$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember$allowedNames$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember$allowedNames$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember$allowedNames$2.invoke:(Ljava/lang/String;)Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        62,
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        50,
        52,
        54,
        55,
        56,
        57,
        58,
        54,
        62,
        50
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        50,
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember.getAllowedNames$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember.getAllowedNames:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        62,
        1,
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember.getDefaultRuleIdAliases:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        54
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateMember.visit:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        65,
        66,
        67,
        68,
        218,
        68,
        218,
        219,
        69
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty$allowedNames$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty$allowedNames$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty$allowedNames$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty$allowedNames$2.invoke:(Ljava/lang/String;)Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        65,
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        53,
        55,
        57,
        58,
        59,
        60,
        61,
        57,
        65,
        53
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        53,
        73
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty.getAllowedNames$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty.getAllowedNames:()Lkotlin/text/Regex;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        65,
        1,
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty.getDefaultRuleIdAliases:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        54
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        57
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivateProperty.visit:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        68,
        69,
        70,
        71,
        167,
        71,
        167,
        168,
        72
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyKt.access$isImportDirective:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyKt.access$isPackageDirective:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyKt.isImportDirective:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        164
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyKt.isPackageDirective:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        160
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor.<init>:(Lkotlin/text/Regex;)V" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        76,
        78,
        78,
        79,
        79,
        76
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor.getUnusedReports:(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/util/List;" : {
      "completeTestCount" : 1,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R000",
      "perTestOutcome" : {
        "R000" : 1
      },
      "lineNumbers" : [
        82,
        83,
        167,
        168,
        83,
        168,
        169,
        167,
        84,
        170,
        171,
        172,
        85,
        86,
        87,
        88,
        85,
        172,
        173,
        170,
        82
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor.isConstructorForDataOrValueClass:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        119,
        120
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor.isMemberOrTopLevel:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        141
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor.maybeAddUnusedProperty:(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        129,
        130,
        132
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor.skipNode:(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        151,
        152,
        153,
        154,
        151
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor.visitParameter:(Lorg/jetbrains/kotlin/psi/KtParameter;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        94,
        95,
        96,
        97,
        98,
        99,
        102,
        105
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor.visitPrimaryConstructor:(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        108,
        109,
        110,
        174,
        175,
        111,
        112,
        113,
        111,
        175,
        176,
        174,
        115,
        177,
        115,
        177,
        178,
        116
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor.visitProperty:(Lorg/jetbrains/kotlin/psi/KtProperty;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        135,
        136,
        138,
        139
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor.visitReferenceExpression:(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        144,
        145,
        147,
        148
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UnusedPrivatePropertyVisitor.visitSecondaryConstructor:(Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        124,
        125,
        179,
        125,
        179,
        180,
        126
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseAnyOrNoneInsteadOfFind$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        63
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseAnyOrNoneInsteadOfFind$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseAnyOrNoneInsteadOfFind.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        64,
        66,
        74,
        75,
        76,
        67,
        77,
        78,
        79,
        67,
        79,
        80,
        77,
        67,
        76,
        81,
        83,
        74,
        66
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseAnyOrNoneInsteadOfFind.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseAnyOrNoneInsteadOfFind.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        36,
        37,
        38,
        39,
        40,
        41,
        37,
        36
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseAnyOrNoneInsteadOfFind.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        36,
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseAnyOrNoneInsteadOfFind.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        37
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseAnyOrNoneInsteadOfFind.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        46,
        48,
        49,
        72,
        49,
        50,
        73,
        50,
        51,
        50,
        50,
        52,
        50,
        53,
        54,
        55,
        56,
        57,
        54,
        59,
        60,
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        62,
        63,
        64,
        63,
        65,
        63,
        66,
        63,
        67,
        63,
        68,
        63,
        69,
        63,
        70,
        63,
        71,
        63,
        72,
        63,
        73,
        63,
        74,
        63,
        62,
        75,
        80,
        81,
        82,
        75,
        82,
        83,
        80,
        75,
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        31,
        33,
        34,
        35,
        36,
        37,
        33,
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        31,
        77
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        33
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations.isArrayOfFunctionCall:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        59,
        79,
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations.visitAnnotationEntry:(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        41,
        42,
        43,
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseArrayLiteralsInAnnotations.visitPrimaryConstructor:(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        49,
        50,
        51,
        52,
        53,
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckNotNull$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckNotNull$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckNotNull.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        45
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckNotNull.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckNotNull.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        29,
        30,
        31,
        32,
        33,
        34,
        30,
        29
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckNotNull.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        29,
        47
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckNotNull.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        30
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckNotNull.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        38,
        39,
        40,
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckOrError.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckOrError.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        42,
        44,
        45,
        46,
        47,
        48,
        44,
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckOrError.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        42,
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckOrError.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckOrError.isOnlyExpressionInLambda:(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        62,
        63
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseCheckOrError.visitThrowExpression:(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        52,
        54,
        55,
        57,
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        177
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$excludeAnnotatedClasses$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$excludeAnnotatedClasses$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$excludeAnnotatedClasses$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$excludeAnnotatedClasses$2.invoke:(Ljava/util/List;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        61,
        182,
        183,
        184,
        61,
        61,
        184,
        185,
        182,
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$visit$$inlined$forEachDescendantOfType$1.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$visit$$inlined$forEachDescendantOfType$1.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$visit$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/UseDataClass;Lio/gitlab/arturbosch/detekt/api/AnnotationExcluder;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$visit$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        74
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass$visit$1.invoke:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        74
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        60,
        65,
        178
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        49,
        51,
        52,
        53,
        54,
        55,
        51,
        60,
        65,
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        49,
        180
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.access$visitKlass:(Lio/gitlab/arturbosch/detekt/rules/style/UseDataClass;Lorg/jetbrains/kotlin/psi/KtClass;Lio/gitlab/arturbosch/detekt/api/AnnotationExcluder;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.extractConstructorNonPropertyParameters:(Lorg/jetbrains/kotlin/psi/KtClass;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        151,
        150,
        151,
        150,
        151,
        152,
        151,
        152,
        237,
        238,
        152,
        238,
        239,
        237,
        151,
        153,
        153
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.extractConstructorPropertyParameters:(Lorg/jetbrains/kotlin/psi/KtClass;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        145,
        144,
        145,
        144,
        145,
        146,
        145,
        146,
        234,
        235,
        146,
        235,
        236,
        234,
        145,
        147,
        147
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.getAllowVars$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.getAllowVars:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        65,
        1,
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.getExcludeAnnotatedClasses$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.getExcludeAnnotatedClasses:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        60,
        1,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.hasOnlyPrivateConstructors:(Lorg/jetbrains/kotlin/psi/KtClass;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        138,
        139,
        140,
        231,
        232,
        140,
        232,
        233,
        139
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.isClosedForExtension:(Lorg/jetbrains/kotlin/psi/KtClass;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.isDefaultFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        159,
        160,
        161,
        162,
        163,
        164,
        165,
        240,
        241,
        242,
        165,
        242,
        243,
        240,
        165,
        165,
        166,
        167,
        168,
        244,
        245,
        168,
        245,
        246,
        170,
        173,
        159
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.isIncorrectClassType:(Lorg/jetbrains/kotlin/psi/KtClass;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        129,
        130,
        131,
        132,
        133,
        134,
        135
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.isInterfaceInSameFile:(Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        123,
        124,
        229,
        124,
        229,
        230,
        124,
        123,
        125
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.onlyExtendsSimpleInterfaces:(Lorg/jetbrains/kotlin/psi/KtClass;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        120,
        226,
        227,
        120,
        227,
        228,
        120
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.visit:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        68,
        69,
        70,
        71,
        72,
        69,
        74,
        182,
        189,
        190,
        183,
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseDataClass.visitKlass:(Lorg/jetbrains/kotlin/psi/KtClass;Lio/gitlab/arturbosch/detekt/api/AnnotationExcluder;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        79,
        80,
        82,
        83,
        85,
        85,
        86,
        191,
        200,
        201,
        191,
        86,
        87,
        202,
        211,
        212,
        202,
        87,
        89,
        91,
        92,
        213,
        214,
        215,
        92,
        215,
        216,
        213,
        92,
        92,
        93,
        94,
        217,
        218,
        94,
        218,
        219,
        94,
        95,
        95,
        95,
        96,
        220,
        221,
        96,
        221,
        222,
        96,
        220,
        221,
        96,
        221,
        222,
        96,
        97,
        223,
        224,
        97,
        224,
        225,
        97,
        98,
        98,
        99,
        101,
        102,
        103,
        105,
        106,
        107,
        108,
        109,
        106,
        105,
        115
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseEmptyCounterpart.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        37,
        39,
        40,
        41,
        42,
        43,
        39,
        37
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseEmptyCounterpart.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        39
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseEmptyCounterpart.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        47,
        49,
        50,
        51,
        53,
        54,
        55,
        57
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseEmptyCounterpartKt.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        60,
        61,
        62,
        61,
        63,
        61,
        64,
        61,
        65,
        61,
        66,
        61,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseEmptyCounterpartKt.access$getExprsWithEmptyCounterparts$p:()Ljava/util/Map;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        1
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        116
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.<init>:(Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;Z)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        110,
        111,
        112,
        113,
        110
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.<init>:(Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        110,
        113,
        110,
        114
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.component1:()Lorg/jetbrains/kotlin/name/FqName;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.component2:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.component3:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.copy$default:(Lio/gitlab/arturbosch/detekt/rules/style/UseIfEmptyOrIfBlank$Replacement;Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;ZILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/UseIfEmptyOrIfBlank$Replacement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.copy:(Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;Z)Lio/gitlab/arturbosch/detekt/rules/style/UseIfEmptyOrIfBlank$Replacement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.equals:(Ljava/lang/Object;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.getConditionFunctionFqName:()Lorg/jetbrains/kotlin/name/FqName;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        111
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.getNegativeCondition:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        113
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.getReplacementFunctionName:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        112
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.hashCode:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank$Replacement.toString:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        132,
        122,
        123,
        122,
        124,
        122,
        125,
        122,
        126,
        122,
        127,
        122,
        128,
        122,
        129,
        122,
        130,
        122,
        131,
        122,
        121,
        132,
        138,
        139,
        140,
        141,
        132,
        141,
        143,
        139,
        132,
        134,
        144,
        145,
        146,
        134,
        146,
        147,
        144,
        134
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        51,
        52,
        53,
        54,
        55,
        56,
        52,
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        51,
        136
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank.condition:(Lorg/jetbrains/kotlin/psi/KtIfExpression;)Lkotlin/Pair;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        90,
        91,
        92,
        93,
        94,
        96,
        91
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank.replacement:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lio/gitlab/arturbosch/detekt/rules/style/UseIfEmptyOrIfBlank$Replacement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        102,
        103,
        104,
        105,
        106,
        107
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfEmptyOrIfBlank.visitIfExpression:(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        61,
        63,
        64,
        65,
        66,
        68,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        84,
        83,
        85,
        86
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfInsteadOfWhen.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        41
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfInsteadOfWhen.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfInsteadOfWhen.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        31,
        33,
        34,
        35,
        36,
        37,
        33,
        41,
        31
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfInsteadOfWhen.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        31,
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfInsteadOfWhen.getIgnoreWhenContainingVariableDeclaration$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfInsteadOfWhen.getIgnoreWhenContainingVariableDeclaration:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        41,
        1,
        41
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfInsteadOfWhen.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        33
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIfInsteadOfWhen.visitWhenExpression:(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        44,
        46,
        48,
        49,
        50,
        63,
        64,
        50,
        64,
        65,
        50,
        52,
        53,
        54,
        55,
        56,
        53,
        52,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        157
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        158,
        159,
        160,
        159,
        161,
        159,
        162,
        159,
        163,
        159,
        164,
        159,
        165,
        159,
        166,
        159,
        158,
        169,
        171,
        173,
        188,
        189,
        190,
        173,
        190,
        191,
        188,
        174,
        192,
        193,
        194,
        174,
        194,
        195,
        192,
        173,
        176,
        196,
        197,
        198,
        176,
        198,
        199,
        196,
        176
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        51,
        52,
        53,
        54,
        55,
        56,
        52,
        51
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        51,
        178
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.classFqName:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/name/FqName;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        143
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.isCalling:(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/util/List;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        136,
        182,
        136,
        137,
        183,
        137,
        183,
        137,
        136,
        138,
        136,
        139,
        184,
        185,
        186,
        139,
        186,
        187,
        184,
        139,
        140,
        139
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.isCollectionOrArray:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        151,
        152
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.isCollectionOrArrayOrString:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        146,
        147
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.isEmptyString:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        133
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.isNullKeyword:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        129
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.isSimpleNameExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        76,
        180,
        76
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.isString:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        155
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.isZero:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        131
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.nullCheckedExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        79,
        84,
        80,
        81,
        82,
        83,
        80,
        84,
        80,
        84,
        181,
        84,
        84,
        84,
        80
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.sizeCheckedEmptyString:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        111,
        181,
        111,
        111,
        111
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.sizeCheckedEqualToZero:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        124,
        126
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.sizeCheckedExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        101,
        102,
        103,
        104,
        105,
        106,
        107,
        102
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.sizeCheckedExpression:(Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        96,
        97,
        181,
        97,
        97,
        97
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.sizeCheckedExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        88,
        89,
        90,
        91,
        88
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseIsNullOrEmpty.visitBinaryExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        60,
        62,
        63,
        64,
        66,
        67,
        68,
        69,
        71,
        72,
        73
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseLet.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseLet.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        35,
        36,
        37,
        38,
        39,
        40,
        36,
        33
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseLet.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        33,
        34,
        33,
        63
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseLet.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        36
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseLet.isExpressionNull:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        44,
        45,
        46,
        47,
        44,
        50,
        65,
        50,
        50,
        50
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseLet.visitIfExpression:(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        54,
        55,
        57,
        58,
        59,
        60,
        62
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseOrEmpty$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        99
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseOrEmpty$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseOrEmpty.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        106,
        101,
        102,
        101,
        103,
        101,
        104,
        101,
        105,
        101,
        100,
        106,
        124,
        125,
        126,
        127,
        107,
        108,
        127,
        129,
        125,
        106,
        117,
        112,
        113,
        112,
        114,
        112,
        115,
        112,
        116,
        112,
        111,
        117,
        130,
        131,
        132,
        133,
        118,
        119,
        133,
        135,
        131,
        117
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseOrEmpty.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseOrEmpty.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        48,
        49,
        50,
        51,
        52,
        53,
        49,
        48
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseOrEmpty.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        48,
        122
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseOrEmpty.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseOrEmpty.isEmptyElement:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        94,
        94,
        95
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseOrEmpty.visitBinaryExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        58,
        60,
        61,
        62,
        63,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        71,
        73,
        77,
        78,
        80,
        81,
        82
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequire.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequire.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        34,
        36,
        37,
        38,
        39,
        40,
        36,
        34
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequire.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        34,
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequire.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        36
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequire.hasMoreExpressionsInBlock:(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        55,
        58,
        55,
        55,
        55
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequire.visitThrowExpression:(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        44,
        45,
        47,
        48,
        50,
        52
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequireNotNull$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequireNotNull$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequireNotNull.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        45
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequireNotNull.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequireNotNull.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        29,
        30,
        31,
        32,
        33,
        34,
        30,
        29
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequireNotNull.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        29,
        47
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequireNotNull.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        30
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseRequireNotNull.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        38,
        39,
        40,
        42
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        77
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        78,
        79,
        80,
        79,
        78,
        83
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        43,
        44,
        45,
        46,
        47,
        48,
        44,
        43
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        43,
        85
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize.isFlatMapOrFlatten:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        66
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize.isSizeOrCount:(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        69,
        88,
        69,
        70,
        71,
        89,
        71,
        72,
        74,
        90,
        74
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UseSumOfInsteadOfFlatMapSize.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        52,
        54,
        55,
        57,
        58,
        59,
        61,
        87,
        61,
        62,
        63,
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        120
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Conversion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Conversion.<init>:(Ljava/lang/String;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        118
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Conversion.<init>:(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        118
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Conversion.component1:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Conversion.copy$default:(Lio/gitlab/arturbosch/detekt/rules/style/UselessCallOnNotNull$Conversion;Ljava/lang/String;ILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/UselessCallOnNotNull$Conversion;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Conversion.copy:(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/UselessCallOnNotNull$Conversion;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Conversion.equals:(Ljava/lang/Object;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Conversion.getReplacementName:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        118
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Conversion.hashCode:()I" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull$Conversion.toString:()Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        121,
        122,
        123,
        122,
        124,
        122,
        125,
        122,
        126,
        122,
        127,
        122,
        121,
        130
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        49,
        50,
        51,
        52,
        53,
        57,
        50,
        49
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        49,
        132
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        50
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull.isNullable:(Lorg/jetbrains/kotlin/psi/ValueArgument;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        104,
        105,
        108,
        110,
        105,
        115,
        113,
        114,
        137,
        114,
        114,
        114,
        115,
        114,
        115,
        113
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull.resolveCallForExpression:(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        71,
        72,
        74,
        75,
        76,
        77,
        78,
        80,
        77,
        82,
        84
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        87,
        88,
        90,
        91,
        92,
        93,
        134,
        135,
        93,
        135,
        136,
        93,
        94,
        97
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UselessCallOnNotNull.visitQualifiedExpression:(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        61,
        63,
        64,
        65,
        66,
        68
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor$UtilityClassConstructor.<init>:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        125
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor$UtilityClassConstructor.hasConstructorWithoutParameters:(Z)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        132,
        133,
        134,
        136,
        137,
        138,
        143,
        144,
        138,
        144,
        145,
        137
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor$UtilityClassConstructor.hasNonPublicConstructorWithoutParameters$detekt_rules_style:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        129
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor$UtilityClassConstructor.hasPublicConstructorWithoutParameters$detekt_rules_style:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        127
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        61,
        63,
        64,
        65,
        66,
        68,
        63,
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        61,
        141
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor.canBeCheckedForUtilityClass:(Lorg/jetbrains/kotlin/psi/KtClass;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        100,
        101,
        102,
        103,
        100
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        63
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor.hasOnlyUtilityClassMembers:(Ljava/util/List;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        107,
        107,
        108,
        110,
        111,
        112,
        143,
        113,
        114,
        115,
        116,
        118,
        143,
        144,
        119
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor.isCompanionObject:(Lorg/jetbrains/kotlin/psi/KtDeclaration;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        123
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.UtilityClassWithPublicConstructor.visitClass:(Lorg/jetbrains/kotlin/psi/KtClass;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        78,
        77,
        85,
        86,
        87,
        88,
        89,
        90,
        87,
        86,
        96,
        97
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$$inlined$collectDescendantsOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Ljava/util/Collection;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$$inlined$collectDescendantsOfType$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        291
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$$inlined$collectDescendantsOfType$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        292,
        293,
        295
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$$inlined$collectDescendantsOfType$2.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$$inlined$collectDescendantsOfType$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal$AssignmentVisitor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        169
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$1.invoke:(Lorg/jetbrains/kotlin/psi/KtProperty;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        170
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$$inlined$collectDescendantsOfType$1.<init>:(Lkotlin/jvm/functions/Function1;Ljava/util/Collection;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$$inlined$collectDescendantsOfType$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        291
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$$inlined$collectDescendantsOfType$1.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        292,
        293,
        295
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$$inlined$collectDescendantsOfType$2.<init>:(Lkotlin/jvm/functions/Function1;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        228
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$$inlined$collectDescendantsOfType$2.visitElement:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        230,
        504,
        230,
        231,
        234,
        235,
        237
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$1.<init>:(Lio/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal$AssignmentVisitor;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        188
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$1.invoke:(Lorg/jetbrains/kotlin/psi/KtProperty;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        189
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.<init>:(Lorg/jetbrains/kotlin/resolve/BindingContext;Z)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        91,
        89,
        90,
        93,
        93,
        94,
        94,
        95,
        95,
        88
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.access$isEscapeCandidate:(Lio/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal$AssignmentVisitor;Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        87
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.evaluateAssignmentExpression:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/psi/KtExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        167,
        168,
        169,
        250,
        256,
        263,
        264,
        265,
        266,
        256,
        250,
        169,
        173,
        174,
        249,
        174,
        174,
        174,
        175,
        249,
        175,
        175,
        175,
        177,
        180,
        178,
        179,
        249,
        179,
        179,
        179,
        180,
        179,
        180,
        249,
        180,
        180,
        180,
        183
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.evaluateReturnExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        186,
        187,
        188,
        267,
        273,
        280,
        281,
        282,
        283,
        273,
        267,
        190,
        284,
        190,
        284,
        285,
        192,
        193,
        194,
        286,
        194,
        286,
        287,
        194,
        193,
        193,
        197,
        198,
        199,
        201,
        204,
        202,
        203,
        249,
        203,
        203,
        203,
        204,
        203,
        204,
        249,
        204,
        204,
        204,
        207
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.getNonReAssignedDeclarations:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        98,
        243,
        244,
        98,
        244,
        245,
        243,
        98
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.hasAssignments:(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        102,
        103,
        104,
        104,
        105,
        106,
        246,
        247,
        107,
        110,
        107,
        247,
        248,
        106
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.isDeclarationCandidate:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        210,
        211,
        212,
        217,
        216,
        217,
        216,
        217,
        249,
        217,
        217,
        217,
        218,
        217,
        218,
        217,
        210
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.isEscapeCandidate:(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        224,
        225,
        224
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.visitAssignment:(Lorg/jetbrains/kotlin/psi/KtExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        233,
        229,
        230,
        232,
        229,
        233,
        229,
        233,
        229,
        233,
        229,
        234,
        288,
        289,
        290,
        234,
        234,
        290,
        291,
        292,
        294,
        289,
        234,
        235
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.visitBinaryExpression:(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        143,
        144,
        145,
        249,
        145,
        145,
        145,
        148,
        149,
        148,
        148,
        151,
        152,
        153,
        156
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        117,
        118,
        119
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.visitProperty:(Lorg/jetbrains/kotlin/psi/KtProperty;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        122,
        123,
        124,
        128,
        129,
        130,
        131,
        133
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.visitReturnExpression:(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        159,
        160,
        161
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$AssignmentVisitor.visitUnaryExpression:(Lorg/jetbrains/kotlin/psi/KtUnaryExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        136,
        137,
        138,
        249,
        138,
        138,
        138,
        140
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        238
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        75,
        239
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        63,
        65,
        67,
        68,
        69,
        70,
        71,
        67,
        75,
        63
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        63,
        241
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal.access$getUnaryAssignmentOperators$cp:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal.getDefaultRuleIdAliases:()Ljava/util/Set;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        65
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal.getIgnoreLateinitVar$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal.getIgnoreLateinitVar:()Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        75,
        1,
        75
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        67
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.VarCouldBeVal.visitKtFile:(Lorg/jetbrains/kotlin/psi/KtFile;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        78,
        79,
        80,
        82,
        243,
        83,
        84,
        243,
        244,
        85
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport$excludeImports$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport$excludeImports$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport$excludeImports$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        57
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport$excludeImports$2.invoke:(Ljava/util/List;)Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        58,
        83,
        84,
        85,
        58,
        85,
        86,
        83,
        58
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        57
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        44,
        46,
        47,
        48,
        49,
        53,
        46,
        57,
        44
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        44,
        81
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport.getExcludeImports$annotations:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport.getExcludeImports:()Ljava/util/List;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        57,
        1,
        57
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        46
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.WildcardImport.visitImportDirective:(Lorg/jetbrains/kotlin/psi/KtImportDirective;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        62,
        63,
        64,
        65,
        68,
        83,
        84,
        68,
        84,
        85,
        68,
        69,
        71,
        72,
        73,
        74,
        75,
        72,
        71,
        80
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.MoveLambdaOutsideParenthesesInspectionKt.canMoveLambdaOutsideParentheses:(Lorg/jetbrains/kotlin/psi/KtCallExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        20,
        21,
        81,
        21,
        22,
        23,
        25,
        27,
        28,
        30,
        82,
        90,
        91,
        90,
        30,
        90,
        92,
        90,
        90,
        90,
        91,
        93,
        94,
        82,
        30,
        30,
        29,
        32,
        95,
        96,
        97,
        32,
        97,
        98,
        32,
        31,
        33,
        99,
        33,
        33,
        33,
        34,
        33,
        35,
        33,
        36,
        100,
        109,
        110,
        100,
        36,
        40,
        41,
        41,
        111,
        112,
        42,
        43,
        45,
        46,
        47,
        113,
        114,
        115,
        48,
        99,
        48,
        48,
        48,
        115,
        116,
        49,
        44,
        112,
        117,
        41,
        52,
        55
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.MoveLambdaOutsideParenthesesInspectionKt.getLastLambdaExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lorg/jetbrains/kotlin/psi/KtLambdaExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        73,
        73,
        74
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.MoveLambdaOutsideParenthesesInspectionKt.isEligible:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        59,
        60,
        61,
        118,
        119,
        120,
        61,
        120,
        121,
        61,
        62,
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.MoveLambdaOutsideParenthesesInspectionKt.parentLabeledExpression:(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtLabeledExpression;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        78,
        122,
        78,
        99,
        78,
        78,
        78
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.MoveLambdaOutsideParenthesesInspectionKt.shouldReportUnnecessaryBracesAroundTrailingLambda:(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011",
      "lineNumbers" : [
        70
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.UnnecessaryBracesAroundTrailingLambda.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.UnnecessaryBracesAroundTrailingLambda.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        37,
        38,
        39,
        40,
        41,
        42,
        38,
        37
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.UnnecessaryBracesAroundTrailingLambda.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        37,
        61
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.UnnecessaryBracesAroundTrailingLambda.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        38
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.UnnecessaryBracesAroundTrailingLambda.getIssueElement:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        59
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.movelambdaout.UnnecessaryBracesAroundTrailingLambda.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        49,
        48,
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$$inlined$filterIsInstance$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$$inlined$filterIsInstance$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$$inlined$filterIsInstance$1.invoke:(Ljava/lang/Object;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        473
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$$inlined$filterIsInstance$2.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$$inlined$filterIsInstance$2.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$$inlined$filterIsInstance$2.invoke:(Ljava/lang/Object;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        473
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$hasNoBraces$2.<init>:(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$hasNoBraces$2.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        97
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops$checkForBraces$hasNoBraces$2.invoke:(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        97
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        55,
        56,
        57,
        58,
        59,
        61,
        56,
        55
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        55,
        107
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops.checkForBraces:(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        95,
        96,
        97,
        98,
        112,
        99,
        113,
        99,
        113,
        114,
        99,
        96,
        100,
        101,
        104
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops.checkForBraces:(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        81,
        82,
        83,
        82,
        83,
        84,
        83,
        84,
        109,
        84,
        85,
        84,
        85,
        110,
        85,
        110,
        111,
        85,
        82,
        86,
        82,
        87,
        88,
        91
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops.isNotBlockExpression:(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        106
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops.visitDoWhileExpression:(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        75,
        76,
        77
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops.visitForExpression:(Lorg/jetbrains/kotlin/psi/KtForExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        65,
        66,
        67
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.MandatoryBracesLoops.visitWhileExpression:(Lorg/jetbrains/kotlin/psi/KtWhileExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        70,
        71,
        72
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        142
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        54,
        56,
        57,
        58,
        59,
        60,
        56,
        54
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        54,
        145
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.canBeUsedAsValue:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        102,
        103,
        104,
        105,
        107,
        108,
        110,
        102
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.checkFunctionWithExplicitReturnType:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/psi/KtTypeReference;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        115,
        116,
        117,
        118,
        119,
        121
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.checkFunctionWithInferredReturnType:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        124,
        125,
        126,
        128
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.createMessage:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Ljava/lang/String;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        130,
        131
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        56
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.isGenericOrNothingType:(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        134,
        135,
        136,
        139
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.visitBlockExpression:(Lorg/jetbrains/kotlin/psi/KtBlockExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        74,
        75,
        76,
        77,
        147,
        148,
        78,
        79,
        80,
        81,
        84,
        149,
        150,
        84,
        83,
        85,
        78,
        148,
        151,
        147,
        89,
        152,
        153,
        152,
        90,
        91,
        92,
        93,
        94,
        91,
        90,
        97,
        152,
        152,
        152,
        98,
        99
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.OptionalUnit.visitNamedFunction:(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        64,
        65,
        66,
        67,
        68,
        70,
        71
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax$Companion.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        63
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax$Companion.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax$visitCallExpression$arg$1.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax$visitCallExpression$arg$1.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax$visitCallExpression$arg$1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        45
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax$visitCallExpression$arg$1.invoke:(Lorg/jetbrains/kotlin/psi/KtValueArgument;)Ljava/lang/CharSequence;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T004",
      "perMethodOutcome" : "T004",
      "lineNumbers" : [
        45
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax.<clinit>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        64
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax.<init>:()V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R011"
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R013",
      "lineNumbers" : [
        33,
        34,
        35,
        36,
        37,
        38,
        34,
        33
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax.<init>:(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T012",
      "perMethodOutcome" : "T012",
      "lineNumbers" : [
        33,
        66
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax.getIssue:()Lio/gitlab/arturbosch/detekt/api/Issue;" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T001",
      "perMethodOutcome" : "R081",
      "lineNumbers" : [
        34
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax.isPairConstructor:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T003",
      "perMethodOutcome" : "T003",
      "lineNumbers" : [
        58,
        59,
        68,
        59,
        60
      ]
    },
    "io.gitlab.arturbosch.detekt.rules.style.optional.PreferToOverPairSyntax.visitCallExpression:(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" : {
      "completeTestCount" : 0,
      "incompleteTestCount" : 0,
      "perMethodTestability" : "T000",
      "perMethodOutcome" : "R034",
      "lineNumbers" : [
        42,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        50,
        51,
        50,
        47,
        46,
        55
      ]
    }
  }
}